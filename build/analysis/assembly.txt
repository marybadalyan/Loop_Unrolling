Microsoft (R) COFF/PE Dumper Version 14.43.34808.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file C:\Users\MeriBadalyan\Loop_Unrolling-1\build\loop_unrolling.dir\Release\main.obj

File Type: COFF OBJECT

??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 83 7A 18 0F     cmp         qword ptr [rdx+18h],0Fh
  0000000000000005: 4C 8B 42 10        mov         r8,qword ptr [rdx+10h]
  0000000000000009: 76 03              jbe         000000000000000E
  000000000000000B: 48 8B 12           mov         rdx,qword ptr [rdx]
  000000000000000E: E9 00 00 00 00     jmp         ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,char const *)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 83 EC 70        sub         rsp,70h
  0000000000000014: 4C 8B FA           mov         r15,rdx
  0000000000000017: 48 8B F1           mov         rsi,rcx
  000000000000001A: 45 33 ED           xor         r13d,r13d
  000000000000001D: 41 8B FD           mov         edi,r13d
  0000000000000020: 44 89 AC 24 C0 00  mov         dword ptr [rsp+0C0h],r13d
                    00 00
  0000000000000028: 49 C7 C6 FF FF FF  mov         r14,0FFFFFFFFFFFFFFFFh
                    FF
  000000000000002F: 90                 nop
  0000000000000030: 49 FF C6           inc         r14
  0000000000000033: 42 38 3C 32        cmp         byte ptr [rdx+r14],dil
  0000000000000037: 75 F7              jne         0000000000000030
  0000000000000039: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000003C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000040: 48 8B 5C 31 28     mov         rbx,qword ptr [rcx+rsi+28h]
  0000000000000045: 48 85 DB           test        rbx,rbx
  0000000000000048: 7E 0A              jle         0000000000000054
  000000000000004A: 49 3B DE           cmp         rbx,r14
  000000000000004D: 7E 05              jle         0000000000000054
  000000000000004F: 49 2B DE           sub         rbx,r14
  0000000000000052: EB 03              jmp         0000000000000057
  0000000000000054: 49 8B DD           mov         rbx,r13
  0000000000000057: 4C 8B E6           mov         r12,rsi
  000000000000005A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000005F: 48 8B 4C 31 48     mov         rcx,qword ptr [rcx+rsi+48h]
  0000000000000064: 48 85 C9           test        rcx,rcx
  0000000000000067: 74 07              je          0000000000000070
  0000000000000069: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000006C: FF 50 08           call        qword ptr [rax+8]
  000000000000006F: 90                 nop
  0000000000000070: 48 8B 0E           mov         rcx,qword ptr [rsi]
  0000000000000073: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000077: 83 7C 30 10 00     cmp         dword ptr [rax+rsi+10h],0
  000000000000007C: 74 04              je          0000000000000082
  000000000000007E: 32 C0              xor         al,al
  0000000000000080: EB 2A              jmp         00000000000000AC
  0000000000000082: 48 8B 44 30 50     mov         rax,qword ptr [rax+rsi+50h]
  0000000000000087: 48 85 C0           test        rax,rax
  000000000000008A: 74 1E              je          00000000000000AA
  000000000000008C: 48 3B C6           cmp         rax,rsi
  000000000000008F: 74 19              je          00000000000000AA
  0000000000000091: 48 8B C8           mov         rcx,rax
  0000000000000094: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000099: 48 8B 0E           mov         rcx,qword ptr [rsi]
  000000000000009C: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  00000000000000A0: 83 7C 30 10 00     cmp         dword ptr [rax+rsi+10h],0
  00000000000000A5: 0F 94 C0           sete        al
  00000000000000A8: EB 02              jmp         00000000000000AC
  00000000000000AA: B0 01              mov         al,1
  00000000000000AC: 88 44 24 28        mov         byte ptr [rsp+28h],al
  00000000000000B0: 84 C0              test        al,al
  00000000000000B2: 75 0C              jne         00000000000000C0
  00000000000000B4: BA 04 00 00 00     mov         edx,4
  00000000000000B9: 8B FA              mov         edi,edx
  00000000000000BB: E9 34 01 00 00     jmp         00000000000001F4
  00000000000000C0: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  00000000000000C4: 8B 4C 30 18        mov         ecx,dword ptr [rax+rsi+18h]
  00000000000000C8: 81 E1 C0 01 00 00  and         ecx,1C0h
  00000000000000CE: 83 F9 40           cmp         ecx,40h
  00000000000000D1: 74 6E              je          0000000000000141
  00000000000000D3: 48 85 DB           test        rbx,rbx
  00000000000000D6: 7E 69              jle         0000000000000141
  00000000000000D8: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000DB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000DF: 4C 8B 44 31 48     mov         r8,qword ptr [rcx+rsi+48h]
  00000000000000E4: 44 0F B6 4C 31 58  movzx       r9d,byte ptr [rcx+rsi+58h]
  00000000000000EA: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  00000000000000EE: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000000F2: 74 24              je          0000000000000118
  00000000000000F4: 49 8B 48 58        mov         rcx,qword ptr [r8+58h]
  00000000000000F8: 8B 01              mov         eax,dword ptr [rcx]
  00000000000000FA: 85 C0              test        eax,eax
  00000000000000FC: 7E 1A              jle         0000000000000118
  00000000000000FE: FF C8              dec         eax
  0000000000000100: 89 01              mov         dword ptr [rcx],eax
  0000000000000102: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000106: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000109: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000010D: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000110: 44 88 0A           mov         byte ptr [rdx],r9b
  0000000000000113: 41 8B C1           mov         eax,r9d
  0000000000000116: EB 0C              jmp         0000000000000124
  0000000000000118: 49 8B 00           mov         rax,qword ptr [r8]
  000000000000011B: 41 8B D1           mov         edx,r9d
  000000000000011E: 49 8B C8           mov         rcx,r8
  0000000000000121: FF 50 18           call        qword ptr [rax+18h]
  0000000000000124: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000127: 75 13              jne         000000000000013C
  0000000000000129: BA 04 00 00 00     mov         edx,4
  000000000000012E: 8B FA              mov         edi,edx
  0000000000000130: 89 94 24 C0 00 00  mov         dword ptr [rsp+0C0h],edx
                    00
  0000000000000137: E9 8E 00 00 00     jmp         00000000000001CA
  000000000000013C: 48 FF CB           dec         rbx
  000000000000013F: EB 92              jmp         00000000000000D3
  0000000000000141: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000144: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000148: 48 8B 4C 31 48     mov         rcx,qword ptr [rcx+rsi+48h]
  000000000000014D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000150: 4D 8B C6           mov         r8,r14
  0000000000000153: 49 8B D7           mov         rdx,r15
  0000000000000156: FF 50 48           call        qword ptr [rax+48h]
  0000000000000159: 49 3B C6           cmp         rax,r14
  000000000000015C: 75 5D              jne         00000000000001BB
  000000000000015E: 66 90              nop
  0000000000000160: 48 85 DB           test        rbx,rbx
  0000000000000163: 7E 60              jle         00000000000001C5
  0000000000000165: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000168: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000016C: 4C 8B 44 31 48     mov         r8,qword ptr [rcx+rsi+48h]
  0000000000000171: 44 0F B6 4C 31 58  movzx       r9d,byte ptr [rcx+rsi+58h]
  0000000000000177: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  000000000000017B: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000017F: 74 24              je          00000000000001A5
  0000000000000181: 49 8B 48 58        mov         rcx,qword ptr [r8+58h]
  0000000000000185: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000187: 85 C0              test        eax,eax
  0000000000000189: 7E 1A              jle         00000000000001A5
  000000000000018B: FF C8              dec         eax
  000000000000018D: 89 01              mov         dword ptr [rcx],eax
  000000000000018F: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000193: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000196: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000019A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000019D: 44 88 0A           mov         byte ptr [rdx],r9b
  00000000000001A0: 41 8B C1           mov         eax,r9d
  00000000000001A3: EB 0C              jmp         00000000000001B1
  00000000000001A5: 49 8B 00           mov         rax,qword ptr [r8]
  00000000000001A8: 41 8B D1           mov         edx,r9d
  00000000000001AB: 49 8B C8           mov         rcx,r8
  00000000000001AE: FF 50 18           call        qword ptr [rax+18h]
  00000000000001B1: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000001B4: 74 05              je          00000000000001BB
  00000000000001B6: 48 FF CB           dec         rbx
  00000000000001B9: EB A5              jmp         0000000000000160
  00000000000001BB: 83 CF 04           or          edi,4
  00000000000001BE: 89 BC 24 C0 00 00  mov         dword ptr [rsp+0C0h],edi
                    00
  00000000000001C5: BA 04 00 00 00     mov         edx,4
  00000000000001CA: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001CD: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001D1: 4C 89 6C 31 28     mov         qword ptr [rcx+rsi+28h],r13
  00000000000001D6: EB 1C              jmp         00000000000001F4
$LN23:
  00000000000001D8: 45 33 ED           xor         r13d,r13d
  00000000000001DB: BA 04 00 00 00     mov         edx,4
  00000000000001E0: 48 8B B4 24 B0 00  mov         rsi,qword ptr [rsp+0B0h]
                    00 00
  00000000000001E8: 8B BC 24 C0 00 00  mov         edi,dword ptr [rsp+0C0h]
                    00
  00000000000001EF: 4C 8B 64 24 20     mov         r12,qword ptr [rsp+20h]
  00000000000001F4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001F7: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001FB: 48 03 CE           add         rcx,rsi
  00000000000001FE: 0B 79 10           or          edi,dword ptr [rcx+10h]
  0000000000000201: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000206: 41 0F 45 D5        cmovne      edx,r13d
  000000000000020A: 0B D7              or          edx,edi
  000000000000020C: 83 E2 17           and         edx,17h
  000000000000020F: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000212: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000215: 75 3E              jne         0000000000000255
  0000000000000217: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000021C: 85 C0              test        eax,eax
  000000000000021E: 75 09              jne         0000000000000229
  0000000000000220: 49 8B CC           mov         rcx,r12
  0000000000000223: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000228: 90                 nop
  0000000000000229: 49 8B 04 24        mov         rax,qword ptr [r12]
  000000000000022D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000231: 4A 8B 4C 21 48     mov         rcx,qword ptr [rcx+r12+48h]
  0000000000000236: 48 85 C9           test        rcx,rcx
  0000000000000239: 74 07              je          0000000000000242
  000000000000023B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000023E: FF 50 10           call        qword ptr [rax+10h]
  0000000000000241: 90                 nop
  0000000000000242: 48 8B C6           mov         rax,rsi
  0000000000000245: 48 83 C4 70        add         rsp,70h
  0000000000000249: 41 5F              pop         r15
  000000000000024B: 41 5E              pop         r14
  000000000000024D: 41 5D              pop         r13
  000000000000024F: 41 5C              pop         r12
  0000000000000251: 5F                 pop         rdi
  0000000000000252: 5E                 pop         rsi
  0000000000000253: 5B                 pop         rbx
  0000000000000254: C3                 ret
  0000000000000255: F6 C2 04           test        dl,4
  0000000000000258: 74 09              je          0000000000000263
  000000000000025A: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000261: EB 15              jmp         0000000000000278
  0000000000000263: F6 C2 02           test        dl,2
  0000000000000266: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000026D: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000274: 48 0F 44 D8        cmove       rbx,rax
  0000000000000278: BA 01 00 00 00     mov         edx,1
  000000000000027D: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000282: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000287: 4C 8B C0           mov         r8,rax
  000000000000028A: 48 8B D3           mov         rdx,rbx
  000000000000028D: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000292: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000297: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  000000000000029E: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000002A3: E8 00 00 00 00     call        _CxxThrowException
  00000000000002A8: CC                 int         3

?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$0::std &,char const *)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$3::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$3::std &,char const *)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class catch$4::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class catch$4::std &,char const *)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  000000000000000D: 48 8B 8D B0 00 00  mov         rcx,qword ptr [rbp+0B0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z (void * __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 41 27        lea         rax,[rcx+27h]
  0000000000000008: 48 3B C1           cmp         rax,rcx
  000000000000000B: 76 27              jbe         0000000000000034
  000000000000000D: 48 8B C8           mov         rcx,rax
  0000000000000010: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000015: 48 8B C8           mov         rcx,rax
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 74 11              je          000000000000002E
  000000000000001D: 48 83 C0 27        add         rax,27h
  0000000000000021: 48 83 E0 E0        and         rax,0FFFFFFFFFFFFFFE0h
  0000000000000025: 48 89 48 F8        mov         qword ptr [rax-8],rcx
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret
  000000000000002E: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000033: CC                 int         3
  0000000000000034: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000039: CC                 int         3

??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z (private: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct<1,char const *>(char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 48 BE FF FF FF FF  mov         rsi,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001F: 49 8B D8           mov         rbx,r8
  0000000000000022: 48 8B EA           mov         rbp,rdx
  0000000000000025: 4C 8B F1           mov         r14,rcx
  0000000000000028: 4C 3B C6           cmp         r8,rsi
  000000000000002B: 0F 87 D7 00 00 00  ja          0000000000000108
  0000000000000031: 48 83 FB 0F        cmp         rbx,0Fh
  0000000000000035: 77 1B              ja          0000000000000052
  0000000000000037: 48 89 59 10        mov         qword ptr [rcx+10h],rbx
  000000000000003B: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  0000000000000043: E8 00 00 00 00     call        memcpy
  0000000000000048: 42 C6 04 33 00     mov         byte ptr [rbx+r14],0
  000000000000004D: E9 94 00 00 00     jmp         00000000000000E6
  0000000000000052: 48 8B C3           mov         rax,rbx
  0000000000000055: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  000000000000005A: 48 83 C8 0F        or          rax,0Fh
  000000000000005E: 48 3B C6           cmp         rax,rsi
  0000000000000061: 76 29              jbe         000000000000008C
  0000000000000063: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  000000000000006D: 48 83 C0 27        add         rax,27h
  0000000000000071: 48 8B C8           mov         rcx,rax
  0000000000000074: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000079: 48 85 C0           test        rax,rax
  000000000000007C: 74 7E              je          00000000000000FC
  000000000000007E: 48 8D 78 27        lea         rdi,[rax+27h]
  0000000000000082: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  0000000000000086: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  000000000000008A: EB 38              jmp         00000000000000C4
  000000000000008C: B9 16 00 00 00     mov         ecx,16h
  0000000000000091: 48 8B F0           mov         rsi,rax
  0000000000000094: 48 3B C1           cmp         rax,rcx
  0000000000000097: 48 0F 42 F1        cmovb       rsi,rcx
  000000000000009B: 48 8D 4E 01        lea         rcx,[rsi+1]
  000000000000009F: 48 85 C9           test        rcx,rcx
  00000000000000A2: 75 04              jne         00000000000000A8
  00000000000000A4: 33 FF              xor         edi,edi
  00000000000000A6: EB 1C              jmp         00000000000000C4
  00000000000000A8: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  00000000000000AF: 72 0B              jb          00000000000000BC
  00000000000000B1: 48 8D 41 27        lea         rax,[rcx+27h]
  00000000000000B5: 48 3B C1           cmp         rax,rcx
  00000000000000B8: 76 48              jbe         0000000000000102
  00000000000000BA: EB B5              jmp         0000000000000071
  00000000000000BC: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000C1: 48 8B F8           mov         rdi,rax
  00000000000000C4: 4C 8B C3           mov         r8,rbx
  00000000000000C7: 49 89 3E           mov         qword ptr [r14],rdi
  00000000000000CA: 48 8B D5           mov         rdx,rbp
  00000000000000CD: 49 89 5E 10        mov         qword ptr [r14+10h],rbx
  00000000000000D1: 48 8B CF           mov         rcx,rdi
  00000000000000D4: 49 89 76 18        mov         qword ptr [r14+18h],rsi
  00000000000000D8: E8 00 00 00 00     call        memcpy
  00000000000000DD: C6 04 1F 00        mov         byte ptr [rdi+rbx],0
  00000000000000E1: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  00000000000000E6: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000EB: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000F0: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000F5: 48 83 C4 20        add         rsp,20h
  00000000000000F9: 41 5E              pop         r14
  00000000000000FB: C3                 ret
  00000000000000FC: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000101: CC                 int         3
  0000000000000102: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000107: CC                 int         3
  0000000000000108: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  000000000000010D: CC                 int         3

??$_Float_put_desired_precision@N@std@@YAH_JH@Z (int __cdecl std::_Float_put_desired_precision<double>(__int64,int)):
  0000000000000000: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000006: 75 06              jne         000000000000000E
  0000000000000008: B8 0D 00 00 00     mov         eax,0Dh
  000000000000000D: C3                 ret
  000000000000000E: 48 85 C9           test        rcx,rcx
  0000000000000011: 7E 03              jle         0000000000000016
  0000000000000013: 8B C1              mov         eax,ecx
  0000000000000015: C3                 ret
  0000000000000016: 75 08              jne         0000000000000020
  0000000000000018: 33 C0              xor         eax,eax
  000000000000001A: 85 D2              test        edx,edx
  000000000000001C: 0F 94 C0           sete        al
  000000000000001F: C3                 ret
  0000000000000020: B8 06 00 00 00     mov         eax,6
  0000000000000025: C3                 ret

??$_Float_put_desired_precision@O@std@@YAH_JH@Z (int __cdecl std::_Float_put_desired_precision<long double>(__int64,int)):
  0000000000000000: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000006: 75 06              jne         000000000000000E
  0000000000000008: B8 0D 00 00 00     mov         eax,0Dh
  000000000000000D: C3                 ret
  000000000000000E: 48 85 C9           test        rcx,rcx
  0000000000000011: 7E 03              jle         0000000000000016
  0000000000000013: 8B C1              mov         eax,ecx
  0000000000000015: C3                 ret
  0000000000000016: 75 08              jne         0000000000000020
  0000000000000018: 33 C0              xor         eax,eax
  000000000000001A: 85 D2              test        edx,edx
  000000000000001C: 0F 94 C0           sete        al
  000000000000001F: C3                 ret
  0000000000000020: B8 06 00 00 00     mov         eax,6
  0000000000000025: C3                 ret

??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,char const *,unsigned __int64,bool)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 F9     lea         rbp,[rsp-7]
  0000000000000015: 48 81 EC C0 00 00  sub         rsp,0C0h
                    00
  000000000000001C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000023: 48 33 C4           xor         rax,rsp
  0000000000000026: 48 89 45 F7        mov         qword ptr [rbp-9],rax
  000000000000002A: 4D 8B F1           mov         r14,r9
  000000000000002D: 4C 89 4D 97        mov         qword ptr [rbp-69h],r9
  0000000000000031: 4C 89 45 8F        mov         qword ptr [rbp-71h],r8
  0000000000000035: 48 89 55 9F        mov         qword ptr [rbp-61h],rdx
  0000000000000039: 44 0F B6 7D 67     movzx       r15d,byte ptr [rbp+67h]
  000000000000003E: 48 8B 5D 6F        mov         rbx,qword ptr [rbp+6Fh]
  0000000000000042: 48 8B 7D 77        mov         rdi,qword ptr [rbp+77h]
  0000000000000046: 48 85 FF           test        rdi,rdi
  0000000000000049: 74 11              je          000000000000005C
  000000000000004B: 0F B6 03           movzx       eax,byte ptr [rbx]
  000000000000004E: 2C 2B              sub         al,2Bh
  0000000000000050: A8 FD              test        al,0FDh
  0000000000000052: 75 08              jne         000000000000005C
  0000000000000054: 41 BD 01 00 00 00  mov         r13d,1
  000000000000005A: EB 03              jmp         000000000000005F
  000000000000005C: 45 33 ED           xor         r13d,r13d
  000000000000005F: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000063: 25 00 30 00 00     and         eax,3000h
  0000000000000068: 3D 00 30 00 00     cmp         eax,3000h
  000000000000006D: 74 09              je          0000000000000078
  000000000000006F: 48 8D 15 00 00 00  lea         rdx,[??_C@_02MDKMJEGG@eE@]
                    00
  0000000000000076: EB 25              jmp         000000000000009D
  0000000000000078: 48 8D 15 00 00 00  lea         rdx,[??_C@_02OOPEBDOJ@pP@]
                    00
  000000000000007F: 49 8D 4D 02        lea         rcx,[r13+2]
  0000000000000083: 48 3B CF           cmp         rcx,rdi
  0000000000000086: 77 15              ja          000000000000009D
  0000000000000088: 42 80 3C 2B 30     cmp         byte ptr [rbx+r13],30h
  000000000000008D: 75 0E              jne         000000000000009D
  000000000000008F: 42 0F B6 44 2B 01  movzx       eax,byte ptr [rbx+r13+1]
  0000000000000095: 2C 58              sub         al,58h
  0000000000000097: A8 DF              test        al,0DFh
  0000000000000099: 4C 0F 44 E9        cmove       r13,rcx
  000000000000009D: 48 8B CB           mov         rcx,rbx
  00000000000000A0: E8 00 00 00 00     call        strcspn
  00000000000000A5: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000AA: B8 2E 00 00 00     mov         eax,2Eh
  00000000000000AF: 66 89 45 87        mov         word ptr [rbp-79h],ax
  00000000000000B3: E8 00 00 00 00     call        localeconv
  00000000000000B8: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000BB: 0F B6 01           movzx       eax,byte ptr [rcx]
  00000000000000BE: 88 45 87           mov         byte ptr [rbp-79h],al
  00000000000000C1: 48 8D 55 87        lea         rdx,[rbp-79h]
  00000000000000C5: 48 8B CB           mov         rcx,rbx
  00000000000000C8: E8 00 00 00 00     call        strcspn
  00000000000000CD: 48 8B F0           mov         rsi,rax
  00000000000000D0: 49 8B 46 40        mov         rax,qword ptr [r14+40h]
  00000000000000D4: 4C 8B 70 08        mov         r14,qword ptr [rax+8]
  00000000000000D8: 4C 89 75 AF        mov         qword ptr [rbp-51h],r14
  00000000000000DC: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000000DF: 49 8B CE           mov         rcx,r14
  00000000000000E2: FF 50 08           call        qword ptr [rax+8]
  00000000000000E5: 90                 nop
  00000000000000E6: 48 8D 4D A7        lea         rcx,[rbp-59h]
  00000000000000EA: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000EF: 4C 8B E0           mov         r12,rax
  00000000000000F2: 4D 85 F6           test        r14,r14
  00000000000000F5: 74 1B              je          0000000000000112
  00000000000000F7: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000000FA: 49 8B CE           mov         rcx,r14
  00000000000000FD: FF 50 10           call        qword ptr [rax+10h]
  0000000000000100: 48 8B C8           mov         rcx,rax
  0000000000000103: 48 85 C0           test        rax,rax
  0000000000000106: 74 0A              je          0000000000000112
  0000000000000108: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000010B: BA 01 00 00 00     mov         edx,1
  0000000000000110: FF 10              call        qword ptr [rax]
  0000000000000112: 45 33 C0           xor         r8d,r8d
  0000000000000115: 48 8B D7           mov         rdx,rdi
  0000000000000118: 48 8D 4D B7        lea         rcx,[rbp-49h]
  000000000000011C: E8 00 00 00 00     call        ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
  0000000000000121: 90                 nop
  0000000000000122: 4C 8D 4D B7        lea         r9,[rbp-49h]
  0000000000000126: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  000000000000012B: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  0000000000000130: 49 8B 04 24        mov         rax,qword ptr [r12]
  0000000000000134: 4C 8D 04 1F        lea         r8,[rdi+rbx]
  0000000000000138: 48 8B D3           mov         rdx,rbx
  000000000000013B: 49 8B CC           mov         rcx,r12
  000000000000013E: FF 50 38           call        qword ptr [rax+38h]
  0000000000000141: 48 8B 4D 97        mov         rcx,qword ptr [rbp-69h]
  0000000000000145: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000149: 4C 8B 70 08        mov         r14,qword ptr [rax+8]
  000000000000014D: 4C 89 75 AF        mov         qword ptr [rbp-51h],r14
  0000000000000151: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000154: 49 8B CE           mov         rcx,r14
  0000000000000157: FF 50 08           call        qword ptr [rax+8]
  000000000000015A: 90                 nop
  000000000000015B: 48 8D 4D A7        lea         rcx,[rbp-59h]
  000000000000015F: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  0000000000000164: 48 8B D8           mov         rbx,rax
  0000000000000167: 4D 85 F6           test        r14,r14
  000000000000016A: 74 1B              je          0000000000000187
  000000000000016C: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000016F: 49 8B CE           mov         rcx,r14
  0000000000000172: FF 50 10           call        qword ptr [rax+10h]
  0000000000000175: 48 8B C8           mov         rcx,rax
  0000000000000178: 48 85 C0           test        rax,rax
  000000000000017B: 74 0A              je          0000000000000187
  000000000000017D: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000180: BA 01 00 00 00     mov         edx,1
  0000000000000185: FF 10              call        qword ptr [rax]
  0000000000000187: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000018A: 48 8D 55 D7        lea         rdx,[rbp-29h]
  000000000000018E: 48 8B CB           mov         rcx,rbx
  0000000000000191: FF 50 28           call        qword ptr [rax+28h]
  0000000000000194: 90                 nop
  0000000000000195: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000198: 48 8B CB           mov         rcx,rbx
  000000000000019B: FF 50 20           call        qword ptr [rax+20h]
  000000000000019E: 44 0F BE E0        movsx       r12d,al
  00000000000001A2: 48 3B F7           cmp         rsi,rdi
  00000000000001A5: 74 1D              je          00000000000001C4
  00000000000001A7: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000001AA: 48 8B CB           mov         rcx,rbx
  00000000000001AD: FF 50 18           call        qword ptr [rax+18h]
  00000000000001B0: 0F B6 C8           movzx       ecx,al
  00000000000001B3: 48 8D 45 B7        lea         rax,[rbp-49h]
  00000000000001B7: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  00000000000001BC: 48 0F 47 45 B7     cmova       rax,qword ptr [rbp-49h]
  00000000000001C1: 88 0C 30           mov         byte ptr [rax+rsi],cl
  00000000000001C4: 80 7D 7F 00        cmp         byte ptr [rbp+7Fh],0
  00000000000001C8: 0F 84 CE 00 00 00  je          000000000000029C
  00000000000001CE: 48 3B F7           cmp         rsi,rdi
  00000000000001D1: 48 0F 44 74 24 30  cmove       rsi,qword ptr [rsp+30h]
  00000000000001D7: 4C 8D 75 D7        lea         r14,[rbp-29h]
  00000000000001DB: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  00000000000001E0: 4C 0F 47 75 D7     cmova       r14,qword ptr [rbp-29h]
  00000000000001E5: 41 0F B6 06        movzx       eax,byte ptr [r14]
  00000000000001E9: 3C 7F              cmp         al,7Fh
  00000000000001EB: 0F 84 AB 00 00 00  je          000000000000029C
  00000000000001F1: 0F B6 5D 87        movzx       ebx,byte ptr [rbp-79h]
  00000000000001F5: 84 C0              test        al,al
  00000000000001F7: 0F 8E 9F 00 00 00  jle         000000000000029C
  00000000000001FD: 49 0F BE 0E        movsx       rcx,byte ptr [r14]
  0000000000000201: 48 8B C6           mov         rax,rsi
  0000000000000204: 49 2B C5           sub         rax,r13
  0000000000000207: 48 3B C8           cmp         rcx,rax
  000000000000020A: 0F 83 8C 00 00 00  jae         000000000000029C
  0000000000000210: 48 2B F1           sub         rsi,rcx
  0000000000000213: 4C 8B 45 C7        mov         r8,qword ptr [rbp-39h]
  0000000000000217: 4C 3B C6           cmp         r8,rsi
  000000000000021A: 0F 82 C7 04 00 00  jb          00000000000006E7
  0000000000000220: 48 8B 4D CF        mov         rcx,qword ptr [rbp-31h]
  0000000000000224: 48 8B C1           mov         rax,rcx
  0000000000000227: 49 2B C0           sub         rax,r8
  000000000000022A: 48 83 F8 01        cmp         rax,1
  000000000000022E: 72 32              jb          0000000000000262
  0000000000000230: 49 8D 40 01        lea         rax,[r8+1]
  0000000000000234: 48 89 45 C7        mov         qword ptr [rbp-39h],rax
  0000000000000238: 48 8D 7D B7        lea         rdi,[rbp-49h]
  000000000000023C: 48 83 F9 0F        cmp         rcx,0Fh
  0000000000000240: 48 0F 47 7D B7     cmova       rdi,qword ptr [rbp-49h]
  0000000000000245: 48 03 FE           add         rdi,rsi
  0000000000000248: 4C 2B C6           sub         r8,rsi
  000000000000024B: 49 FF C0           inc         r8
  000000000000024E: 48 8D 4F 01        lea         rcx,[rdi+1]
  0000000000000252: 48 8B D7           mov         rdx,rdi
  0000000000000255: E8 00 00 00 00     call        memmove
  000000000000025A: 41 0F B6 C4        movzx       eax,r12b
  000000000000025E: 88 07              mov         byte ptr [rdi],al
  0000000000000260: EB 23              jmp         0000000000000285
  0000000000000262: 44 88 64 24 28     mov         byte ptr [rsp+28h],r12b
  0000000000000267: 48 C7 44 24 20 01  mov         qword ptr [rsp+20h],1
                    00 00 00
  0000000000000270: 4C 8B CE           mov         r9,rsi
  0000000000000273: 44 0F B6 C3        movzx       r8d,bl
  0000000000000277: BA 01 00 00 00     mov         edx,1
  000000000000027C: 48 8D 4D B7        lea         rcx,[rbp-49h]
  0000000000000280: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z
  0000000000000285: 49 8D 46 01        lea         rax,[r14+1]
  0000000000000289: 80 38 00           cmp         byte ptr [rax],0
  000000000000028C: 4C 0F 4F F0        cmovg       r14,rax
  0000000000000290: 41 0F B6 06        movzx       eax,byte ptr [r14]
  0000000000000294: 3C 7F              cmp         al,7Fh
  0000000000000296: 0F 85 59 FF FF FF  jne         00000000000001F5
  000000000000029C: 4C 8B 65 C7        mov         r12,qword ptr [rbp-39h]
  00000000000002A0: 48 8B 45 97        mov         rax,qword ptr [rbp-69h]
  00000000000002A4: 48 8B 78 28        mov         rdi,qword ptr [rax+28h]
  00000000000002A8: 48 85 FF           test        rdi,rdi
  00000000000002AB: 7E 0A              jle         00000000000002B7
  00000000000002AD: 49 3B FC           cmp         rdi,r12
  00000000000002B0: 76 05              jbe         00000000000002B7
  00000000000002B2: 49 2B FC           sub         rdi,r12
  00000000000002B5: EB 02              jmp         00000000000002B9
  00000000000002B7: 33 FF              xor         edi,edi
  00000000000002B9: 8B 40 18           mov         eax,dword ptr [rax+18h]
  00000000000002BC: 25 C0 01 00 00     and         eax,1C0h
  00000000000002C1: 83 F8 40           cmp         eax,40h
  00000000000002C4: 0F 84 E1 01 00 00  je          00000000000004AB
  00000000000002CA: 3D 00 01 00 00     cmp         eax,100h
  00000000000002CF: 48 8B 45 8F        mov         rax,qword ptr [rbp-71h]
  00000000000002D3: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000002D6: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  00000000000002DB: 0F 84 E9 00 00 00  je          00000000000003CA
  00000000000002E1: 48 85 FF           test        rdi,rdi
  00000000000002E4: 74 5E              je          0000000000000344
  00000000000002E6: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000002EB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000002F0: 48 85 DB           test        rbx,rbx
  00000000000002F3: 74 3F              je          0000000000000334
  00000000000002F5: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000002F9: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000002FD: 74 24              je          0000000000000323
  00000000000002FF: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000303: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000305: 85 C0              test        eax,eax
  0000000000000307: 7E 1A              jle         0000000000000323
  0000000000000309: FF C8              dec         eax
  000000000000030B: 89 01              mov         dword ptr [rcx],eax
  000000000000030D: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000311: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000314: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000318: 48 89 01           mov         qword ptr [rcx],rax
  000000000000031B: 44 88 3A           mov         byte ptr [rdx],r15b
  000000000000031E: 41 8B C7           mov         eax,r15d
  0000000000000321: EB 0C              jmp         000000000000032F
  0000000000000323: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000326: 41 8B D7           mov         edx,r15d
  0000000000000329: 48 8B CB           mov         rcx,rbx
  000000000000032C: FF 50 18           call        qword ptr [rax+18h]
  000000000000032F: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000332: 75 05              jne         0000000000000339
  0000000000000334: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  0000000000000339: 48 83 EF 01        sub         rdi,1
  000000000000033D: 75 B1              jne         00000000000002F0
  000000000000033F: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  0000000000000344: 33 FF              xor         edi,edi
  0000000000000346: 48 8D 75 B7        lea         rsi,[rbp-49h]
  000000000000034A: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  000000000000034F: 48 0F 47 75 B7     cmova       rsi,qword ptr [rbp-49h]
  0000000000000354: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  0000000000000359: 4D 8B F5           mov         r14,r13
  000000000000035C: 4D 85 ED           test        r13,r13
  000000000000035F: 0F 84 C8 01 00 00  je          000000000000052D
  0000000000000365: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  000000000000036A: 66 0F 1F 44 00 00  nop         word ptr [rax+rax]
  0000000000000370: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  0000000000000374: 48 85 DB           test        rbx,rbx
  0000000000000377: 74 3E              je          00000000000003B7
  0000000000000379: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000037D: 48 39 38           cmp         qword ptr [rax],rdi
  0000000000000380: 74 24              je          00000000000003A6
  0000000000000382: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000386: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000388: 85 C0              test        eax,eax
  000000000000038A: 7E 1A              jle         00000000000003A6
  000000000000038C: FF C8              dec         eax
  000000000000038E: 89 01              mov         dword ptr [rcx],eax
  0000000000000390: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000394: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000397: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000039B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000039E: 44 88 02           mov         byte ptr [rdx],r8b
  00000000000003A1: 41 8B C0           mov         eax,r8d
  00000000000003A4: EB 0C              jmp         00000000000003B2
  00000000000003A6: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000003A9: 41 8B D0           mov         edx,r8d
  00000000000003AC: 48 8B CB           mov         rcx,rbx
  00000000000003AF: FF 50 18           call        qword ptr [rax+18h]
  00000000000003B2: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000003B5: 75 05              jne         00000000000003BC
  00000000000003B7: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  00000000000003BC: 48 FF C6           inc         rsi
  00000000000003BF: 49 83 EE 01        sub         r14,1
  00000000000003C3: 75 AB              jne         0000000000000370
  00000000000003C5: E9 5E 01 00 00     jmp         0000000000000528
  00000000000003CA: 48 8D 75 B7        lea         rsi,[rbp-49h]
  00000000000003CE: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  00000000000003D3: 48 0F 47 75 B7     cmova       rsi,qword ptr [rbp-49h]
  00000000000003D8: 4D 8B F5           mov         r14,r13
  00000000000003DB: 4D 85 ED           test        r13,r13
  00000000000003DE: 74 60              je          0000000000000440
  00000000000003E0: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000003E5: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  00000000000003E9: 48 85 DB           test        rbx,rbx
  00000000000003EC: 74 3F              je          000000000000042D
  00000000000003EE: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000003F2: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000003F6: 74 24              je          000000000000041C
  00000000000003F8: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000003FC: 8B 01              mov         eax,dword ptr [rcx]
  00000000000003FE: 85 C0              test        eax,eax
  0000000000000400: 7E 1A              jle         000000000000041C
  0000000000000402: FF C8              dec         eax
  0000000000000404: 89 01              mov         dword ptr [rcx],eax
  0000000000000406: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  000000000000040A: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000040D: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000411: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000414: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000417: 41 8B C0           mov         eax,r8d
  000000000000041A: EB 0C              jmp         0000000000000428
  000000000000041C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000041F: 41 8B D0           mov         edx,r8d
  0000000000000422: 48 8B CB           mov         rcx,rbx
  0000000000000425: FF 50 18           call        qword ptr [rax+18h]
  0000000000000428: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000042B: 75 05              jne         0000000000000432
  000000000000042D: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  0000000000000432: 48 FF C6           inc         rsi
  0000000000000435: 49 83 EE 01        sub         r14,1
  0000000000000439: 75 AA              jne         00000000000003E5
  000000000000043B: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  0000000000000440: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  0000000000000445: 48 85 FF           test        rdi,rdi
  0000000000000448: 74 5A              je          00000000000004A4
  000000000000044A: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  000000000000044F: 90                 nop
  0000000000000450: 48 85 DB           test        rbx,rbx
  0000000000000453: 74 3F              je          0000000000000494
  0000000000000455: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000459: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000045D: 74 24              je          0000000000000483
  000000000000045F: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000463: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000465: 85 C0              test        eax,eax
  0000000000000467: 7E 1A              jle         0000000000000483
  0000000000000469: FF C8              dec         eax
  000000000000046B: 89 01              mov         dword ptr [rcx],eax
  000000000000046D: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000471: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000474: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000478: 48 89 01           mov         qword ptr [rcx],rax
  000000000000047B: 44 88 3A           mov         byte ptr [rdx],r15b
  000000000000047E: 41 8B C7           mov         eax,r15d
  0000000000000481: EB 0C              jmp         000000000000048F
  0000000000000483: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000486: 41 8B D7           mov         edx,r15d
  0000000000000489: 48 8B CB           mov         rcx,rbx
  000000000000048C: FF 50 18           call        qword ptr [rax+18h]
  000000000000048F: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000492: 75 05              jne         0000000000000499
  0000000000000494: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  0000000000000499: 48 83 EF 01        sub         rdi,1
  000000000000049D: 75 B1              jne         0000000000000450
  000000000000049F: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  00000000000004A4: 33 FF              xor         edi,edi
  00000000000004A6: E9 82 00 00 00     jmp         000000000000052D
  00000000000004AB: 48 8D 75 B7        lea         rsi,[rbp-49h]
  00000000000004AF: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  00000000000004B4: 48 0F 47 75 B7     cmova       rsi,qword ptr [rbp-49h]
  00000000000004B9: 48 8B 45 8F        mov         rax,qword ptr [rbp-71h]
  00000000000004BD: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000004C0: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  00000000000004C5: 4D 8B F5           mov         r14,r13
  00000000000004C8: 4D 85 ED           test        r13,r13
  00000000000004CB: 74 64              je          0000000000000531
  00000000000004CD: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000004D2: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  00000000000004D6: 48 85 DB           test        rbx,rbx
  00000000000004D9: 74 3F              je          000000000000051A
  00000000000004DB: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000004DF: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000004E3: 74 24              je          0000000000000509
  00000000000004E5: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000004E9: 8B 01              mov         eax,dword ptr [rcx]
  00000000000004EB: 85 C0              test        eax,eax
  00000000000004ED: 7E 1A              jle         0000000000000509
  00000000000004EF: FF C8              dec         eax
  00000000000004F1: 89 01              mov         dword ptr [rcx],eax
  00000000000004F3: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000004F7: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000004FA: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000004FE: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000501: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000504: 41 8B C0           mov         eax,r8d
  0000000000000507: EB 0C              jmp         0000000000000515
  0000000000000509: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000050C: 41 8B D0           mov         edx,r8d
  000000000000050F: 48 8B CB           mov         rcx,rbx
  0000000000000512: FF 50 18           call        qword ptr [rax+18h]
  0000000000000515: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000518: 75 05              jne         000000000000051F
  000000000000051A: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  000000000000051F: 48 FF C6           inc         rsi
  0000000000000522: 49 83 EE 01        sub         r14,1
  0000000000000526: 75 AA              jne         00000000000004D2
  0000000000000528: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  000000000000052D: 48 8B 45 8F        mov         rax,qword ptr [rbp-71h]
  0000000000000531: 0F 11 00           movups      xmmword ptr [rax],xmm0
  0000000000000534: 48 8D 75 B7        lea         rsi,[rbp-49h]
  0000000000000538: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  000000000000053D: 48 0F 47 75 B7     cmova       rsi,qword ptr [rbp-49h]
  0000000000000542: 49 03 F5           add         rsi,r13
  0000000000000545: 48 8B 45 8F        mov         rax,qword ptr [rbp-71h]
  0000000000000549: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000054C: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  0000000000000551: 4D 2B E5           sub         r12,r13
  0000000000000554: 74 65              je          00000000000005BB
  0000000000000556: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  000000000000055B: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000560: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  0000000000000564: 48 85 DB           test        rbx,rbx
  0000000000000567: 74 3F              je          00000000000005A8
  0000000000000569: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000056D: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000571: 74 24              je          0000000000000597
  0000000000000573: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000577: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000579: 85 C0              test        eax,eax
  000000000000057B: 7E 1A              jle         0000000000000597
  000000000000057D: FF C8              dec         eax
  000000000000057F: 89 01              mov         dword ptr [rcx],eax
  0000000000000581: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000585: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000588: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000058C: 48 89 01           mov         qword ptr [rcx],rax
  000000000000058F: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000592: 41 8B C0           mov         eax,r8d
  0000000000000595: EB 0C              jmp         00000000000005A3
  0000000000000597: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000059A: 41 8B D0           mov         edx,r8d
  000000000000059D: 48 8B CB           mov         rcx,rbx
  00000000000005A0: FF 50 18           call        qword ptr [rax+18h]
  00000000000005A3: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000005A6: 75 05              jne         00000000000005AD
  00000000000005A8: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  00000000000005AD: 48 FF C6           inc         rsi
  00000000000005B0: 49 83 EC 01        sub         r12,1
  00000000000005B4: 75 AA              jne         0000000000000560
  00000000000005B6: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  00000000000005BB: 48 8B 4D 97        mov         rcx,qword ptr [rbp-69h]
  00000000000005BF: 48 C7 41 28 00 00  mov         qword ptr [rcx+28h],0
                    00 00
  00000000000005C7: 0F 29 44 24 30     movaps      xmmword ptr [rsp+30h],xmm0
  00000000000005CC: 48 85 FF           test        rdi,rdi
  00000000000005CF: 74 59              je          000000000000062A
  00000000000005D1: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000005D6: 48 85 DB           test        rbx,rbx
  00000000000005D9: 74 3F              je          000000000000061A
  00000000000005DB: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000005DF: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000005E3: 74 24              je          0000000000000609
  00000000000005E5: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000005E9: 8B 01              mov         eax,dword ptr [rcx]
  00000000000005EB: 85 C0              test        eax,eax
  00000000000005ED: 7E 1A              jle         0000000000000609
  00000000000005EF: FF C8              dec         eax
  00000000000005F1: 89 01              mov         dword ptr [rcx],eax
  00000000000005F3: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000005F7: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000005FA: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000005FE: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000601: 44 88 3A           mov         byte ptr [rdx],r15b
  0000000000000604: 41 8B C7           mov         eax,r15d
  0000000000000607: EB 0C              jmp         0000000000000615
  0000000000000609: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000060C: 41 8B D7           mov         edx,r15d
  000000000000060F: 48 8B CB           mov         rcx,rbx
  0000000000000612: FF 50 18           call        qword ptr [rax+18h]
  0000000000000615: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000618: 75 05              jne         000000000000061F
  000000000000061A: C6 44 24 30 01     mov         byte ptr [rsp+30h],1
  000000000000061F: 48 83 EF 01        sub         rdi,1
  0000000000000623: 75 B1              jne         00000000000005D6
  0000000000000625: 0F 28 44 24 30     movaps      xmm0,xmmword ptr [rsp+30h]
  000000000000062A: 48 8B 5D 9F        mov         rbx,qword ptr [rbp-61h]
  000000000000062E: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000631: 48 8B 55 EF        mov         rdx,qword ptr [rbp-11h]
  0000000000000635: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000639: 76 31              jbe         000000000000066C
  000000000000063B: 48 FF C2           inc         rdx
  000000000000063E: 48 8B 4D D7        mov         rcx,qword ptr [rbp-29h]
  0000000000000642: 48 8B C1           mov         rax,rcx
  0000000000000645: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000064C: 72 19              jb          0000000000000667
  000000000000064E: 48 83 C2 27        add         rdx,27h
  0000000000000652: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000656: 48 2B C1           sub         rax,rcx
  0000000000000659: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000065D: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000661: 0F 87 86 00 00 00  ja          00000000000006ED
  0000000000000667: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000066C: 48 C7 45 E7 00 00  mov         qword ptr [rbp-19h],0
                    00 00
  0000000000000674: 48 C7 45 EF 0F 00  mov         qword ptr [rbp-11h],0Fh
                    00 00
  000000000000067C: C6 45 D7 00        mov         byte ptr [rbp-29h],0
  0000000000000680: 48 8B 55 CF        mov         rdx,qword ptr [rbp-31h]
  0000000000000684: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000688: 76 2D              jbe         00000000000006B7
  000000000000068A: 48 FF C2           inc         rdx
  000000000000068D: 48 8B 4D B7        mov         rcx,qword ptr [rbp-49h]
  0000000000000691: 48 8B C1           mov         rax,rcx
  0000000000000694: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000069B: 72 15              jb          00000000000006B2
  000000000000069D: 48 83 C2 27        add         rdx,27h
  00000000000006A1: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000006A5: 48 2B C1           sub         rax,rcx
  00000000000006A8: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000006AC: 48 83 F8 1F        cmp         rax,1Fh
  00000000000006B0: 77 2F              ja          00000000000006E1
  00000000000006B2: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000006B7: 48 8B C3           mov         rax,rbx
  00000000000006BA: 48 8B 4D F7        mov         rcx,qword ptr [rbp-9]
  00000000000006BE: 48 33 CC           xor         rcx,rsp
  00000000000006C1: E8 00 00 00 00     call        __security_check_cookie
  00000000000006C6: 48 8B 9C 24 00 01  mov         rbx,qword ptr [rsp+100h]
                    00 00
  00000000000006CE: 48 81 C4 C0 00 00  add         rsp,0C0h
                    00
  00000000000006D5: 41 5F              pop         r15
  00000000000006D7: 41 5E              pop         r14
  00000000000006D9: 41 5D              pop         r13
  00000000000006DB: 41 5C              pop         r12
  00000000000006DD: 5F                 pop         rdi
  00000000000006DE: 5E                 pop         rsi
  00000000000006DF: 5D                 pop         rbp
  00000000000006E0: C3                 ret
  00000000000006E1: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000006E6: 90                 nop
  00000000000006E7: E8 00 00 00 00     call        ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
  00000000000006EC: 90                 nop
  00000000000006ED: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000006F2: CC                 int         3

?dtor$0@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$2@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$2):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$3@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$3):
  0000000000000000: 48 8D 8A 90 00 00  lea         rcx,[rdx+90h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ (class std::_Iostream_error_category2 const & __cdecl std::_Immortalize_memcpy_image<class std::_Iostream_error_category2>(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B]
                    00
  0000000000000007: C3                 ret

??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class std::basic_ostream<char,struct std::char_traits<char> > &,char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 70        sub         rsp,70h
  000000000000001C: 4D 8B F0           mov         r14,r8
  000000000000001F: 4C 8B EA           mov         r13,rdx
  0000000000000022: 48 8B F1           mov         rsi,rcx
  0000000000000025: 45 33 E4           xor         r12d,r12d
  0000000000000028: 41 8B FC           mov         edi,r12d
  000000000000002B: 44 89 A4 24 B8 00  mov         dword ptr [rsp+0B8h],r12d
                    00 00
  0000000000000033: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000036: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  000000000000003A: 49 8B 5C 09 28     mov         rbx,qword ptr [r9+rcx+28h]
  000000000000003F: 48 85 DB           test        rbx,rbx
  0000000000000042: 7E 0A              jle         000000000000004E
  0000000000000044: 49 3B D8           cmp         rbx,r8
  0000000000000047: 76 05              jbe         000000000000004E
  0000000000000049: 49 2B D8           sub         rbx,r8
  000000000000004C: EB 03              jmp         0000000000000051
  000000000000004E: 49 8B DC           mov         rbx,r12
  0000000000000051: 4C 8B FE           mov         r15,rsi
  0000000000000054: 48 89 74 24 28     mov         qword ptr [rsp+28h],rsi
  0000000000000059: 49 8B 4C 09 48     mov         rcx,qword ptr [r9+rcx+48h]
  000000000000005E: 48 85 C9           test        rcx,rcx
  0000000000000061: 74 07              je          000000000000006A
  0000000000000063: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000066: FF 50 08           call        qword ptr [rax+8]
  0000000000000069: 90                 nop
  000000000000006A: 48 8B 0E           mov         rcx,qword ptr [rsi]
  000000000000006D: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000071: 83 7C 30 10 00     cmp         dword ptr [rax+rsi+10h],0
  0000000000000076: 74 04              je          000000000000007C
  0000000000000078: 32 C0              xor         al,al
  000000000000007A: EB 2A              jmp         00000000000000A6
  000000000000007C: 48 8B 44 30 50     mov         rax,qword ptr [rax+rsi+50h]
  0000000000000081: 48 85 C0           test        rax,rax
  0000000000000084: 74 1E              je          00000000000000A4
  0000000000000086: 48 3B C6           cmp         rax,rsi
  0000000000000089: 74 19              je          00000000000000A4
  000000000000008B: 48 8B C8           mov         rcx,rax
  000000000000008E: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000093: 48 8B 0E           mov         rcx,qword ptr [rsi]
  0000000000000096: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000009A: 83 7C 30 10 00     cmp         dword ptr [rax+rsi+10h],0
  000000000000009F: 0F 94 C0           sete        al
  00000000000000A2: EB 02              jmp         00000000000000A6
  00000000000000A4: B0 01              mov         al,1
  00000000000000A6: 88 44 24 30        mov         byte ptr [rsp+30h],al
  00000000000000AA: 84 C0              test        al,al
  00000000000000AC: 75 0E              jne         00000000000000BC
  00000000000000AE: 41 BE 04 00 00 00  mov         r14d,4
  00000000000000B4: 41 8B FE           mov         edi,r14d
  00000000000000B7: E9 35 01 00 00     jmp         00000000000001F1
  00000000000000BC: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  00000000000000C0: 8B 4C 30 18        mov         ecx,dword ptr [rax+rsi+18h]
  00000000000000C4: 81 E1 C0 01 00 00  and         ecx,1C0h
  00000000000000CA: 83 F9 40           cmp         ecx,40h
  00000000000000CD: 74 6F              je          000000000000013E
  00000000000000CF: 90                 nop
  00000000000000D0: 48 85 DB           test        rbx,rbx
  00000000000000D3: 74 69              je          000000000000013E
  00000000000000D5: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000D8: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000DC: 4C 8B 44 31 48     mov         r8,qword ptr [rcx+rsi+48h]
  00000000000000E1: 44 0F B6 4C 31 58  movzx       r9d,byte ptr [rcx+rsi+58h]
  00000000000000E7: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  00000000000000EB: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000000EF: 74 24              je          0000000000000115
  00000000000000F1: 49 8B 48 58        mov         rcx,qword ptr [r8+58h]
  00000000000000F5: 8B 01              mov         eax,dword ptr [rcx]
  00000000000000F7: 85 C0              test        eax,eax
  00000000000000F9: 7E 1A              jle         0000000000000115
  00000000000000FB: FF C8              dec         eax
  00000000000000FD: 89 01              mov         dword ptr [rcx],eax
  00000000000000FF: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000103: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000106: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000010A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000010D: 44 88 0A           mov         byte ptr [rdx],r9b
  0000000000000110: 41 8B C1           mov         eax,r9d
  0000000000000113: EB 0C              jmp         0000000000000121
  0000000000000115: 49 8B 00           mov         rax,qword ptr [r8]
  0000000000000118: 41 8B D1           mov         edx,r9d
  000000000000011B: 49 8B C8           mov         rcx,r8
  000000000000011E: FF 50 18           call        qword ptr [rax+18h]
  0000000000000121: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000124: 75 13              jne         0000000000000139
  0000000000000126: 41 BE 04 00 00 00  mov         r14d,4
  000000000000012C: 41 8B FE           mov         edi,r14d
  000000000000012F: 44 89 B4 24 B8 00  mov         dword ptr [rsp+0B8h],r14d
                    00 00
  0000000000000137: EB 28              jmp         0000000000000161
  0000000000000139: 48 FF CB           dec         rbx
  000000000000013C: EB 92              jmp         00000000000000D0
  000000000000013E: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000141: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000145: 48 8B 4C 31 48     mov         rcx,qword ptr [rcx+rsi+48h]
  000000000000014A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000014D: 4D 8B C6           mov         r8,r14
  0000000000000150: 49 8B D5           mov         rdx,r13
  0000000000000153: FF 50 48           call        qword ptr [rax+48h]
  0000000000000156: 49 3B C6           cmp         rax,r14
  0000000000000159: 41 BE 04 00 00 00  mov         r14d,4
  000000000000015F: 75 5B              jne         00000000000001BC
  0000000000000161: 48 85 DB           test        rbx,rbx
  0000000000000164: 74 60              je          00000000000001C6
  0000000000000166: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000169: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000016D: 4C 8B 44 31 48     mov         r8,qword ptr [rcx+rsi+48h]
  0000000000000172: 44 0F B6 4C 31 58  movzx       r9d,byte ptr [rcx+rsi+58h]
  0000000000000178: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  000000000000017C: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000180: 74 24              je          00000000000001A6
  0000000000000182: 49 8B 48 58        mov         rcx,qword ptr [r8+58h]
  0000000000000186: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000188: 85 C0              test        eax,eax
  000000000000018A: 7E 1A              jle         00000000000001A6
  000000000000018C: FF C8              dec         eax
  000000000000018E: 89 01              mov         dword ptr [rcx],eax
  0000000000000190: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000194: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000197: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000019B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000019E: 44 88 0A           mov         byte ptr [rdx],r9b
  00000000000001A1: 41 8B C1           mov         eax,r9d
  00000000000001A4: EB 0C              jmp         00000000000001B2
  00000000000001A6: 49 8B 00           mov         rax,qword ptr [r8]
  00000000000001A9: 41 8B D1           mov         edx,r9d
  00000000000001AC: 49 8B C8           mov         rcx,r8
  00000000000001AF: FF 50 18           call        qword ptr [rax+18h]
  00000000000001B2: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000001B5: 74 05              je          00000000000001BC
  00000000000001B7: 48 FF CB           dec         rbx
  00000000000001BA: EB A5              jmp         0000000000000161
  00000000000001BC: 83 CF 04           or          edi,4
  00000000000001BF: 89 BC 24 B8 00 00  mov         dword ptr [rsp+0B8h],edi
                    00
  00000000000001C6: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001C9: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001CD: 4C 89 64 31 28     mov         qword ptr [rcx+rsi+28h],r12
  00000000000001D2: EB 1D              jmp         00000000000001F1
$LN24:
  00000000000001D4: 45 33 E4           xor         r12d,r12d
  00000000000001D7: 41 BE 04 00 00 00  mov         r14d,4
  00000000000001DD: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  00000000000001E5: 8B BC 24 B8 00 00  mov         edi,dword ptr [rsp+0B8h]
                    00
  00000000000001EC: 4C 8B 7C 24 28     mov         r15,qword ptr [rsp+28h]
  00000000000001F1: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001F4: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001F8: 48 03 CE           add         rcx,rsi
  00000000000001FB: 0B 79 10           or          edi,dword ptr [rcx+10h]
  00000000000001FE: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000203: 45 0F 45 F4        cmovne      r14d,r12d
  0000000000000207: 44 0B F7           or          r14d,edi
  000000000000020A: 41 83 E6 17        and         r14d,17h
  000000000000020E: 44 89 71 10        mov         dword ptr [rcx+10h],r14d
  0000000000000212: 44 23 71 14        and         r14d,dword ptr [rcx+14h]
  0000000000000216: 75 47              jne         000000000000025F
  0000000000000218: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000021D: 85 C0              test        eax,eax
  000000000000021F: 75 09              jne         000000000000022A
  0000000000000221: 49 8B CF           mov         rcx,r15
  0000000000000224: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000229: 90                 nop
  000000000000022A: 49 8B 07           mov         rax,qword ptr [r15]
  000000000000022D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000231: 4A 8B 4C 39 48     mov         rcx,qword ptr [rcx+r15+48h]
  0000000000000236: 48 85 C9           test        rcx,rcx
  0000000000000239: 74 07              je          0000000000000242
  000000000000023B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000023E: FF 50 10           call        qword ptr [rax+10h]
  0000000000000241: 90                 nop
  0000000000000242: 48 8B C6           mov         rax,rsi
  0000000000000245: 4C 8D 5C 24 70     lea         r11,[rsp+70h]
  000000000000024A: 49 8B 5B 38        mov         rbx,qword ptr [r11+38h]
  000000000000024E: 49 8B 73 40        mov         rsi,qword ptr [r11+40h]
  0000000000000252: 49 8B E3           mov         rsp,r11
  0000000000000255: 41 5F              pop         r15
  0000000000000257: 41 5E              pop         r14
  0000000000000259: 41 5D              pop         r13
  000000000000025B: 41 5C              pop         r12
  000000000000025D: 5F                 pop         rdi
  000000000000025E: C3                 ret
  000000000000025F: 41 F6 C6 04        test        r14b,4
  0000000000000263: 74 09              je          000000000000026E
  0000000000000265: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000026C: EB 16              jmp         0000000000000284
  000000000000026E: 41 F6 C6 02        test        r14b,2
  0000000000000272: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000279: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000280: 48 0F 44 D8        cmove       rbx,rax
  0000000000000284: BA 01 00 00 00     mov         edx,1
  0000000000000289: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  000000000000028E: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000293: 4C 8B C0           mov         r8,rax
  0000000000000296: 48 8B D3           mov         rdx,rbx
  0000000000000299: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000029E: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000002A3: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000002AA: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  00000000000002AF: E8 00 00 00 00     call        _CxxThrowException
  00000000000002B4: CC                 int         3

?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class dtor$0::std &,char const * const,unsigned __int64)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$3@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class dtor$3::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class dtor$3::std &,char const * const,unsigned __int64)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class catch$4::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class catch$4::std &,char const * const,unsigned __int64)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z (char __cdecl std::_Maklocchr<char>(char,char *,struct _Cvtvec const &)):
  0000000000000000: 0F B6 C1           movzx       eax,cl
  0000000000000003: C3                 ret

??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z (char * __cdecl std::_Maklocstr<char>(char const *,char *,struct _Cvtvec const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B D9           mov         rbx,rcx
  0000000000000012: 48 C7 C0 FF FF FF  mov         rax,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000019: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  0000000000000020: 80 7C 01 01 00     cmp         byte ptr [rcx+rax+1],0
  0000000000000025: 48 8D 40 01        lea         rax,[rax+1]
  0000000000000029: 75 F5              jne         0000000000000020
  000000000000002B: 48 8D 70 01        lea         rsi,[rax+1]
  000000000000002F: BA 01 00 00 00     mov         edx,1
  0000000000000034: 48 8B CE           mov         rcx,rsi
  0000000000000037: E8 00 00 00 00     call        calloc
  000000000000003C: 48 8B F8           mov         rdi,rax
  000000000000003F: 48 85 C0           test        rax,rax
  0000000000000042: 74 26              je          000000000000006A
  0000000000000044: 48 85 F6           test        rsi,rsi
  0000000000000047: 74 0E              je          0000000000000057
  0000000000000049: 4C 8B C6           mov         r8,rsi
  000000000000004C: 48 8B D3           mov         rdx,rbx
  000000000000004F: 48 8B C8           mov         rcx,rax
  0000000000000052: E8 00 00 00 00     call        memcpy
  0000000000000057: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000005C: 48 8B C7           mov         rax,rdi
  000000000000005F: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000064: 48 83 C4 20        add         rsp,20h
  0000000000000068: 5F                 pop         rdi
  0000000000000069: C3                 ret
  000000000000006A: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  000000000000006F: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)'::`2'::<lambda_1>,char const *,unsigned __int64>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)'::`2'::<lambda_1>,char const *,unsigned __int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 41 54              push        r12
  0000000000000005: 41 55              push        r13
  0000000000000007: 41 57              push        r15
  0000000000000009: 48 83 EC 20        sub         rsp,20h
  000000000000000D: 4C 8B 79 10        mov         r15,qword ptr [rcx+10h]
  0000000000000011: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001B: 4C 8B 64 24 70     mov         r12,qword ptr [rsp+70h]
  0000000000000020: 48 8B C3           mov         rax,rbx
  0000000000000023: 49 2B C7           sub         rax,r15
  0000000000000026: 4D 8B E9           mov         r13,r9
  0000000000000029: 48 8B F1           mov         rsi,rcx
  000000000000002C: 48 3B C2           cmp         rax,rdx
  000000000000002F: 0F 82 4A 01 00 00  jb          000000000000017F
  0000000000000035: 48 89 6C 24 50     mov         qword ptr [rsp+50h],rbp
  000000000000003A: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  000000000000003E: 48 89 7C 24 58     mov         qword ptr [rsp+58h],rdi
  0000000000000043: 4C 89 74 24 60     mov         qword ptr [rsp+60h],r14
  0000000000000048: 4D 8D 34 17        lea         r14,[r15+rdx]
  000000000000004C: 49 8B D6           mov         rdx,r14
  000000000000004F: 48 83 CA 0F        or          rdx,0Fh
  0000000000000053: 48 3B D3           cmp         rdx,rbx
  0000000000000056: 77 44              ja          000000000000009C
  0000000000000058: 48 8B CD           mov         rcx,rbp
  000000000000005B: 48 8B C3           mov         rax,rbx
  000000000000005E: 48 D1 E9           shr         rcx,1
  0000000000000061: 48 2B C1           sub         rax,rcx
  0000000000000064: 48 3B E8           cmp         rbp,rax
  0000000000000067: 77 33              ja          000000000000009C
  0000000000000069: 48 8D 04 29        lea         rax,[rcx+rbp]
  000000000000006D: 48 8B DA           mov         rbx,rdx
  0000000000000070: 48 3B D0           cmp         rdx,rax
  0000000000000073: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000077: 48 8D 4B 01        lea         rcx,[rbx+1]
  000000000000007B: 48 85 C9           test        rcx,rcx
  000000000000007E: 75 04              jne         0000000000000084
  0000000000000080: 33 FF              xor         edi,edi
  0000000000000082: EB 4D              jmp         00000000000000D1
  0000000000000084: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  000000000000008B: 72 3C              jb          00000000000000C9
  000000000000008D: 48 8D 41 27        lea         rax,[rcx+27h]
  0000000000000091: 48 3B C1           cmp         rax,rcx
  0000000000000094: 0F 86 DF 00 00 00  jbe         0000000000000179
  000000000000009A: EB 0E              jmp         00000000000000AA
  000000000000009C: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  00000000000000A6: 48 83 C0 27        add         rax,27h
  00000000000000AA: 48 8B C8           mov         rcx,rax
  00000000000000AD: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B2: 48 85 C0           test        rax,rax
  00000000000000B5: 0F 84 B8 00 00 00  je          0000000000000173
  00000000000000BB: 48 8D 78 27        lea         rdi,[rax+27h]
  00000000000000BF: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  00000000000000C3: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  00000000000000C7: EB 08              jmp         00000000000000D1
  00000000000000C9: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000CE: 48 8B F8           mov         rdi,rax
  00000000000000D1: 4C 89 76 10        mov         qword ptr [rsi+10h],r14
  00000000000000D5: 4D 8D 34 3F        lea         r14,[r15+rdi]
  00000000000000D9: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000DD: 4D 8B C7           mov         r8,r15
  00000000000000E0: 48 8B CF           mov         rcx,rdi
  00000000000000E3: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000E7: 76 4D              jbe         0000000000000136
  00000000000000E9: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000EC: 48 8B D3           mov         rdx,rbx
  00000000000000EF: E8 00 00 00 00     call        memcpy
  00000000000000F4: 4D 8B C4           mov         r8,r12
  00000000000000F7: 49 8B D5           mov         rdx,r13
  00000000000000FA: 49 8B CE           mov         rcx,r14
  00000000000000FD: E8 00 00 00 00     call        memcpy
  0000000000000102: 48 8D 55 01        lea         rdx,[rbp+1]
  0000000000000106: 43 C6 04 26 00     mov         byte ptr [r14+r12],0
  000000000000010B: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000112: 72 18              jb          000000000000012C
  0000000000000114: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  0000000000000118: 48 83 C2 27        add         rdx,27h
  000000000000011C: 48 2B D9           sub         rbx,rcx
  000000000000011F: 48 8D 43 F8        lea         rax,[rbx-8]
  0000000000000123: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000127: 77 4A              ja          0000000000000173
  0000000000000129: 48 8B D9           mov         rbx,rcx
  000000000000012C: 48 8B CB           mov         rcx,rbx
  000000000000012F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000134: EB 1B              jmp         0000000000000151
  0000000000000136: 48 8B D6           mov         rdx,rsi
  0000000000000139: E8 00 00 00 00     call        memcpy
  000000000000013E: 4D 8B C4           mov         r8,r12
  0000000000000141: 49 8B D5           mov         rdx,r13
  0000000000000144: 49 8B CE           mov         rcx,r14
  0000000000000147: E8 00 00 00 00     call        memcpy
  000000000000014C: 43 C6 04 26 00     mov         byte ptr [r14+r12],0
  0000000000000151: 48 89 3E           mov         qword ptr [rsi],rdi
  0000000000000154: 48 8B C6           mov         rax,rsi
  0000000000000157: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  000000000000015C: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000161: 4C 8B 74 24 60     mov         r14,qword ptr [rsp+60h]
  0000000000000166: 48 83 C4 20        add         rsp,20h
  000000000000016A: 41 5F              pop         r15
  000000000000016C: 41 5D              pop         r13
  000000000000016E: 41 5C              pop         r12
  0000000000000170: 5E                 pop         rsi
  0000000000000171: 5B                 pop         rbx
  0000000000000172: C3                 ret
  0000000000000173: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000178: CC                 int         3
  0000000000000179: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000017E: CC                 int         3
  000000000000017F: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000184: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,char>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,char)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 41 54              push        r12
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 28        sub         rsp,28h
  000000000000000B: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  000000000000000F: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000019: 48 8B C3           mov         rax,rbx
  000000000000001C: 4D 8B E1           mov         r12,r9
  000000000000001F: 49 2B C6           sub         rax,r14
  0000000000000022: 48 8B F1           mov         rsi,rcx
  0000000000000025: 48 3B C2           cmp         rax,rdx
  0000000000000028: 0F 82 58 01 00 00  jb          0000000000000186
  000000000000002E: 48 89 6C 24 50     mov         qword ptr [rsp+50h],rbp
  0000000000000033: 49 8D 2C 16        lea         rbp,[r14+rdx]
  0000000000000037: 48 89 7C 24 58     mov         qword ptr [rsp+58h],rdi
  000000000000003C: 48 8B D5           mov         rdx,rbp
  000000000000003F: 4C 89 6C 24 60     mov         qword ptr [rsp+60h],r13
  0000000000000044: 48 83 CA 0F        or          rdx,0Fh
  0000000000000048: 4C 8B 69 18        mov         r13,qword ptr [rcx+18h]
  000000000000004C: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  0000000000000051: 48 3B D3           cmp         rdx,rbx
  0000000000000054: 77 44              ja          000000000000009A
  0000000000000056: 49 8B CD           mov         rcx,r13
  0000000000000059: 48 8B C3           mov         rax,rbx
  000000000000005C: 48 D1 E9           shr         rcx,1
  000000000000005F: 48 2B C1           sub         rax,rcx
  0000000000000062: 4C 3B E8           cmp         r13,rax
  0000000000000065: 77 33              ja          000000000000009A
  0000000000000067: 4A 8D 04 29        lea         rax,[rcx+r13]
  000000000000006B: 48 8B DA           mov         rbx,rdx
  000000000000006E: 48 3B D0           cmp         rdx,rax
  0000000000000071: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000075: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000079: 48 85 C9           test        rcx,rcx
  000000000000007C: 75 04              jne         0000000000000082
  000000000000007E: 33 FF              xor         edi,edi
  0000000000000080: EB 4D              jmp         00000000000000CF
  0000000000000082: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000089: 72 3C              jb          00000000000000C7
  000000000000008B: 48 8D 41 27        lea         rax,[rcx+27h]
  000000000000008F: 48 3B C1           cmp         rax,rcx
  0000000000000092: 0F 86 E8 00 00 00  jbe         0000000000000180
  0000000000000098: EB 0E              jmp         00000000000000A8
  000000000000009A: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  00000000000000A4: 48 83 C0 27        add         rax,27h
  00000000000000A8: 48 8B C8           mov         rcx,rax
  00000000000000AB: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B0: 48 85 C0           test        rax,rax
  00000000000000B3: 0F 84 C1 00 00 00  je          000000000000017A
  00000000000000B9: 48 8D 78 27        lea         rdi,[rax+27h]
  00000000000000BD: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  00000000000000C1: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  00000000000000C5: EB 08              jmp         00000000000000CF
  00000000000000C7: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000CC: 48 8B F8           mov         rdi,rax
  00000000000000CF: 44 0F BE 7C 24 70  movsx       r15d,byte ptr [rsp+70h]
  00000000000000D5: 4D 8B C6           mov         r8,r14
  00000000000000D8: 48 89 6E 10        mov         qword ptr [rsi+10h],rbp
  00000000000000DC: 49 8D 2C 3E        lea         rbp,[r14+rdi]
  00000000000000E0: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000E4: 48 8B CF           mov         rcx,rdi
  00000000000000E7: 49 83 FD 0F        cmp         r13,0Fh
  00000000000000EB: 76 4D              jbe         000000000000013A
  00000000000000ED: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000F0: 48 8B D3           mov         rdx,rbx
  00000000000000F3: E8 00 00 00 00     call        memcpy
  00000000000000F8: 4D 8B C4           mov         r8,r12
  00000000000000FB: 41 8B D7           mov         edx,r15d
  00000000000000FE: 48 8B CD           mov         rcx,rbp
  0000000000000101: E8 00 00 00 00     call        memset
  0000000000000106: 49 8D 55 01        lea         rdx,[r13+1]
  000000000000010A: 41 C6 04 2C 00     mov         byte ptr [r12+rbp],0
  000000000000010F: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000116: 72 18              jb          0000000000000130
  0000000000000118: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  000000000000011C: 48 83 C2 27        add         rdx,27h
  0000000000000120: 48 2B D9           sub         rbx,rcx
  0000000000000123: 48 8D 43 F8        lea         rax,[rbx-8]
  0000000000000127: 48 83 F8 1F        cmp         rax,1Fh
  000000000000012B: 77 4D              ja          000000000000017A
  000000000000012D: 48 8B D9           mov         rbx,rcx
  0000000000000130: 48 8B CB           mov         rcx,rbx
  0000000000000133: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000138: EB 1B              jmp         0000000000000155
  000000000000013A: 48 8B D6           mov         rdx,rsi
  000000000000013D: E8 00 00 00 00     call        memcpy
  0000000000000142: 4D 8B C4           mov         r8,r12
  0000000000000145: 41 8B D7           mov         edx,r15d
  0000000000000148: 48 8B CD           mov         rcx,rbp
  000000000000014B: E8 00 00 00 00     call        memset
  0000000000000150: 41 C6 04 2C 00     mov         byte ptr [r12+rbp],0
  0000000000000155: 48 89 3E           mov         qword ptr [rsi],rdi
  0000000000000158: 48 8B C6           mov         rax,rsi
  000000000000015B: 4C 8B 6C 24 60     mov         r13,qword ptr [rsp+60h]
  0000000000000160: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000165: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000016A: 4C 8B 7C 24 20     mov         r15,qword ptr [rsp+20h]
  000000000000016F: 48 83 C4 28        add         rsp,28h
  0000000000000173: 41 5E              pop         r14
  0000000000000175: 41 5C              pop         r12
  0000000000000177: 5E                 pop         rsi
  0000000000000178: 5B                 pop         rbx
  0000000000000179: C3                 ret
  000000000000017A: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000017F: CC                 int         3
  0000000000000180: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000185: CC                 int         3
  0000000000000186: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  000000000000018B: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned __int64,unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned __int64,unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 41 54              push        r12
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 28        sub         rsp,28h
  000000000000000B: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  000000000000000F: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000019: 48 8B C3           mov         rax,rbx
  000000000000001C: 4D 8B E1           mov         r12,r9
  000000000000001F: 49 2B C6           sub         rax,r14
  0000000000000022: 48 8B F1           mov         rsi,rcx
  0000000000000025: 48 3B C2           cmp         rax,rdx
  0000000000000028: 0F 82 82 01 00 00  jb          00000000000001B0
  000000000000002E: 48 89 6C 24 50     mov         qword ptr [rsp+50h],rbp
  0000000000000033: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  0000000000000037: 48 89 7C 24 58     mov         qword ptr [rsp+58h],rdi
  000000000000003C: 4C 89 6C 24 60     mov         qword ptr [rsp+60h],r13
  0000000000000041: 4C 89 7C 24 20     mov         qword ptr [rsp+20h],r15
  0000000000000046: 4D 8D 3C 16        lea         r15,[r14+rdx]
  000000000000004A: 49 8B D7           mov         rdx,r15
  000000000000004D: 48 83 CA 0F        or          rdx,0Fh
  0000000000000051: 48 3B D3           cmp         rdx,rbx
  0000000000000054: 77 44              ja          000000000000009A
  0000000000000056: 48 8B CD           mov         rcx,rbp
  0000000000000059: 48 8B C3           mov         rax,rbx
  000000000000005C: 48 D1 E9           shr         rcx,1
  000000000000005F: 48 2B C1           sub         rax,rcx
  0000000000000062: 48 3B E8           cmp         rbp,rax
  0000000000000065: 77 33              ja          000000000000009A
  0000000000000067: 48 8D 04 29        lea         rax,[rcx+rbp]
  000000000000006B: 48 8B DA           mov         rbx,rdx
  000000000000006E: 48 3B D0           cmp         rdx,rax
  0000000000000071: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000075: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000079: 48 85 C9           test        rcx,rcx
  000000000000007C: 75 04              jne         0000000000000082
  000000000000007E: 33 FF              xor         edi,edi
  0000000000000080: EB 4D              jmp         00000000000000CF
  0000000000000082: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000089: 72 3C              jb          00000000000000C7
  000000000000008B: 48 8D 41 27        lea         rax,[rcx+27h]
  000000000000008F: 48 3B C1           cmp         rax,rcx
  0000000000000092: 0F 86 12 01 00 00  jbe         00000000000001AA
  0000000000000098: EB 0E              jmp         00000000000000A8
  000000000000009A: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  00000000000000A4: 48 83 C0 27        add         rax,27h
  00000000000000A8: 48 8B C8           mov         rcx,rax
  00000000000000AB: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000B0: 48 85 C0           test        rax,rax
  00000000000000B3: 0F 84 EB 00 00 00  je          00000000000001A4
  00000000000000B9: 48 8D 78 27        lea         rdi,[rax+27h]
  00000000000000BD: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  00000000000000C1: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  00000000000000C5: EB 08              jmp         00000000000000CF
  00000000000000C7: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000CC: 48 8B F8           mov         rdi,rax
  00000000000000CF: 44 0F BE 6C 24 78  movsx       r13d,byte ptr [rsp+78h]
  00000000000000D5: 4D 2B F4           sub         r14,r12
  00000000000000D8: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000DC: 4D 8B C4           mov         r8,r12
  00000000000000DF: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000000E4: 48 8B CF           mov         rcx,rdi
  00000000000000E7: 4C 89 7E 10        mov         qword ptr [rsi+10h],r15
  00000000000000EB: 4D 8D 3C 3C        lea         r15,[r12+rdi]
  00000000000000EF: 49 03 DF           add         rbx,r15
  00000000000000F2: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000F6: 76 5F              jbe         0000000000000157
  00000000000000F8: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000FB: 48 8B D3           mov         rdx,rbx
  00000000000000FE: E8 00 00 00 00     call        memcpy
  0000000000000103: 4C 8B 44 24 70     mov         r8,qword ptr [rsp+70h]
  0000000000000108: 41 8B D5           mov         edx,r13d
  000000000000010B: 49 8B CF           mov         rcx,r15
  000000000000010E: E8 00 00 00 00     call        memset
  0000000000000113: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000118: 4A 8D 14 23        lea         rdx,[rbx+r12]
  000000000000011C: 49 03 CF           add         rcx,r15
  000000000000011F: 4D 8D 46 01        lea         r8,[r14+1]
  0000000000000123: E8 00 00 00 00     call        memcpy
  0000000000000128: 48 8D 55 01        lea         rdx,[rbp+1]
  000000000000012C: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000133: 72 18              jb          000000000000014D
  0000000000000135: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  0000000000000139: 48 83 C2 27        add         rdx,27h
  000000000000013D: 48 2B D9           sub         rbx,rcx
  0000000000000140: 48 8D 43 F8        lea         rax,[rbx-8]
  0000000000000144: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000148: 77 5A              ja          00000000000001A4
  000000000000014A: 48 8B D9           mov         rbx,rcx
  000000000000014D: 48 8B CB           mov         rcx,rbx
  0000000000000150: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000155: EB 28              jmp         000000000000017F
  0000000000000157: 48 8B D6           mov         rdx,rsi
  000000000000015A: E8 00 00 00 00     call        memcpy
  000000000000015F: 4C 8B 44 24 70     mov         r8,qword ptr [rsp+70h]
  0000000000000164: 41 8B D5           mov         edx,r13d
  0000000000000167: 49 8B CF           mov         rcx,r15
  000000000000016A: E8 00 00 00 00     call        memset
  000000000000016F: 49 8D 14 34        lea         rdx,[r12+rsi]
  0000000000000173: 48 8B CB           mov         rcx,rbx
  0000000000000176: 4D 8D 46 01        lea         r8,[r14+1]
  000000000000017A: E8 00 00 00 00     call        memcpy
  000000000000017F: 48 89 3E           mov         qword ptr [rsi],rdi
  0000000000000182: 48 8B C6           mov         rax,rsi
  0000000000000185: 4C 8B 6C 24 60     mov         r13,qword ptr [rsp+60h]
  000000000000018A: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  000000000000018F: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000194: 4C 8B 7C 24 20     mov         r15,qword ptr [rsp+20h]
  0000000000000199: 48 83 C4 28        add         rsp,28h
  000000000000019D: 41 5E              pop         r14
  000000000000019F: 41 5C              pop         r12
  00000000000001A1: 5E                 pop         rsi
  00000000000001A2: 5B                 pop         rbx
  00000000000001A3: C3                 ret
  00000000000001A4: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000001A9: CC                 int         3
  00000000000001AA: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  00000000000001AF: CC                 int         3
  00000000000001B0: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  00000000000001B5: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)'::`2'::<lambda_1>,char>(unsigned __int64,class `public: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)'::`2'::<lambda_1>,char)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 41 56              push        r14
  0000000000000008: 41 57              push        r15
  000000000000000A: 48 83 EC 20        sub         rsp,20h
  000000000000000E: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  0000000000000012: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001C: 48 8B C3           mov         rax,rbx
  000000000000001F: 45 0F B6 F9        movzx       r15d,r9b
  0000000000000023: 49 2B C6           sub         rax,r14
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 48 3B C2           cmp         rax,rdx
  000000000000002C: 0F 82 36 01 00 00  jb          0000000000000168
  0000000000000032: 48 89 6C 24 40     mov         qword ptr [rsp+40h],rbp
  0000000000000037: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  000000000000003B: 48 89 7C 24 48     mov         qword ptr [rsp+48h],rdi
  0000000000000040: 4C 89 64 24 50     mov         qword ptr [rsp+50h],r12
  0000000000000045: 4D 8D 24 16        lea         r12,[r14+rdx]
  0000000000000049: 49 8B D4           mov         rdx,r12
  000000000000004C: 48 83 CA 0F        or          rdx,0Fh
  0000000000000050: 48 3B D3           cmp         rdx,rbx
  0000000000000053: 77 44              ja          0000000000000099
  0000000000000055: 48 8B CD           mov         rcx,rbp
  0000000000000058: 48 8B C3           mov         rax,rbx
  000000000000005B: 48 D1 E9           shr         rcx,1
  000000000000005E: 48 2B C1           sub         rax,rcx
  0000000000000061: 48 3B E8           cmp         rbp,rax
  0000000000000064: 77 33              ja          0000000000000099
  0000000000000066: 48 8D 04 29        lea         rax,[rcx+rbp]
  000000000000006A: 48 8B DA           mov         rbx,rdx
  000000000000006D: 48 3B D0           cmp         rdx,rax
  0000000000000070: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000074: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000078: 48 85 C9           test        rcx,rcx
  000000000000007B: 75 04              jne         0000000000000081
  000000000000007D: 33 FF              xor         edi,edi
  000000000000007F: EB 4D              jmp         00000000000000CE
  0000000000000081: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000088: 72 3C              jb          00000000000000C6
  000000000000008A: 48 8D 41 27        lea         rax,[rcx+27h]
  000000000000008E: 48 3B C1           cmp         rax,rcx
  0000000000000091: 0F 86 CB 00 00 00  jbe         0000000000000162
  0000000000000097: EB 0E              jmp         00000000000000A7
  0000000000000099: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  00000000000000A3: 48 83 C0 27        add         rax,27h
  00000000000000A7: 48 8B C8           mov         rcx,rax
  00000000000000AA: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000AF: 48 85 C0           test        rax,rax
  00000000000000B2: 0F 84 A4 00 00 00  je          000000000000015C
  00000000000000B8: 48 8D 78 27        lea         rdi,[rax+27h]
  00000000000000BC: 48 83 E7 E0        and         rdi,0FFFFFFFFFFFFFFE0h
  00000000000000C0: 48 89 47 F8        mov         qword ptr [rdi-8],rax
  00000000000000C4: EB 08              jmp         00000000000000CE
  00000000000000C6: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000CB: 48 8B F8           mov         rdi,rax
  00000000000000CE: 4C 89 66 10        mov         qword ptr [rsi+10h],r12
  00000000000000D2: 4D 8B C6           mov         r8,r14
  00000000000000D5: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000D9: 48 8B CF           mov         rcx,rdi
  00000000000000DC: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000E0: 76 44              jbe         0000000000000126
  00000000000000E2: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000E5: 48 8B D3           mov         rdx,rbx
  00000000000000E8: E8 00 00 00 00     call        memcpy
  00000000000000ED: 48 8D 55 01        lea         rdx,[rbp+1]
  00000000000000F1: 45 88 3C 3E        mov         byte ptr [r14+rdi],r15b
  00000000000000F5: 41 C6 44 3E 01 00  mov         byte ptr [r14+rdi+1],0
  00000000000000FB: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000102: 72 18              jb          000000000000011C
  0000000000000104: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  0000000000000108: 48 83 C2 27        add         rdx,27h
  000000000000010C: 48 2B D9           sub         rbx,rcx
  000000000000010F: 48 8D 43 F8        lea         rax,[rbx-8]
  0000000000000113: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000117: 77 43              ja          000000000000015C
  0000000000000119: 48 8B D9           mov         rbx,rcx
  000000000000011C: 48 8B CB           mov         rcx,rbx
  000000000000011F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000124: EB 12              jmp         0000000000000138
  0000000000000126: 48 8B D6           mov         rdx,rsi
  0000000000000129: E8 00 00 00 00     call        memcpy
  000000000000012E: 45 88 3C 3E        mov         byte ptr [r14+rdi],r15b
  0000000000000132: 41 C6 44 3E 01 00  mov         byte ptr [r14+rdi+1],0
  0000000000000138: 48 89 3E           mov         qword ptr [rsi],rdi
  000000000000013B: 48 8B C6           mov         rax,rsi
  000000000000013E: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000143: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  0000000000000148: 4C 8B 64 24 50     mov         r12,qword ptr [rsp+50h]
  000000000000014D: 48 8B 5C 24 58     mov         rbx,qword ptr [rsp+58h]
  0000000000000152: 48 83 C4 20        add         rsp,20h
  0000000000000156: 41 5F              pop         r15
  0000000000000158: 41 5E              pop         r14
  000000000000015A: 5E                 pop         rsi
  000000000000015B: C3                 ret
  000000000000015C: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000161: CC                 int         3
  0000000000000162: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000167: CC                 int         3
  0000000000000168: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  000000000000016D: CC                 int         3

??$_Search_vectorized@$$CBD$$CBD@std@@YAPEBDQEBD00_K@Z (char const * __cdecl std::_Search_vectorized<char const ,char const >(char const * const,char const * const,char const * const,unsigned __int64)):
  0000000000000000: E9 00 00 00 00     jmp         __std_search_1

??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::endl<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: B2 0A              mov         dl,0Ah
  000000000000000E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000012: 48 03 CB           add         rcx,rbx
  0000000000000015: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  000000000000001A: 0F B6 D0           movzx       edx,al
  000000000000001D: 48 8B CB           mov         rcx,rbx
  0000000000000020: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  0000000000000025: 48 8B CB           mov         rcx,rbx
  0000000000000028: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5B                 pop         rbx
  0000000000000035: C3                 ret

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &&,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 70        sub         rsp,70h
  000000000000001C: 41 0F B6 D8        movzx       ebx,r8b
  0000000000000020: 48 8B F2           mov         rsi,rdx
  0000000000000023: 4C 8B F1           mov         r14,rcx
  0000000000000026: 45 33 E4           xor         r12d,r12d
  0000000000000029: 41 8B FC           mov         edi,r12d
  000000000000002C: 44 89 64 24 20     mov         dword ptr [rsp+20h],r12d
  0000000000000031: 45 32 FF           xor         r15b,r15b
  0000000000000034: 44 88 BC 24 B8 00  mov         byte ptr [rsp+0B8h],r15b
                    00 00
  000000000000003C: 4C 8B E9           mov         r13,rcx
  000000000000003F: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000044: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000047: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  000000000000004B: 49 8B 4C 09 48     mov         rcx,qword ptr [r9+rcx+48h]
  0000000000000050: 48 85 C9           test        rcx,rcx
  0000000000000053: 74 07              je          000000000000005C
  0000000000000055: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000058: FF 50 08           call        qword ptr [rax+8]
  000000000000005B: 90                 nop
  000000000000005C: B2 01              mov         dl,1
  000000000000005E: 49 8B CE           mov         rcx,r14
  0000000000000061: E8 00 00 00 00     call        ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z
  0000000000000066: 88 44 24 30        mov         byte ptr [rsp+30h],al
  000000000000006A: 84 C0              test        al,al
  000000000000006C: 0F 84 3E 01 00 00  je          00000000000001B0
  0000000000000072: 4C 89 66 10        mov         qword ptr [rsi+10h],r12
  0000000000000076: 48 8B C6           mov         rax,rsi
  0000000000000079: 48 83 7E 18 0F     cmp         qword ptr [rsi+18h],0Fh
  000000000000007E: 76 03              jbe         0000000000000083
  0000000000000080: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000083: C6 00 00           mov         byte ptr [rax],0
  0000000000000086: 44 8B E3           mov         r12d,ebx
  0000000000000089: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000008C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000090: 4A 8B 4C 31 48     mov         rcx,qword ptr [rcx+r14+48h]
  0000000000000095: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000099: 48 8B 10           mov         rdx,qword ptr [rax]
  000000000000009C: 48 85 D2           test        rdx,rdx
  000000000000009F: 74 0F              je          00000000000000B0
  00000000000000A1: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  00000000000000A5: 83 38 00           cmp         dword ptr [rax],0
  00000000000000A8: 7E 06              jle         00000000000000B0
  00000000000000AA: 44 0F B6 0A        movzx       r9d,byte ptr [rdx]
  00000000000000AE: EB 09              jmp         00000000000000B9
  00000000000000B0: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000B3: FF 50 30           call        qword ptr [rax+30h]
  00000000000000B6: 44 8B C8           mov         r9d,eax
  00000000000000B9: 0F B6 9C 24 A0 00  movzx       ebx,byte ptr [rsp+0A0h]
                    00 00
  00000000000000C1: 48 B8 FF FF FF FF  mov         rax,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  00000000000000CB: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  00000000000000CF: 75 07              jne         00000000000000D8
  00000000000000D1: BF 01 00 00 00     mov         edi,1
  00000000000000D6: EB 53              jmp         000000000000012B
  00000000000000D8: 45 3B CC           cmp         r9d,r12d
  00000000000000DB: 75 40              jne         000000000000011D
  00000000000000DD: 41 B7 01           mov         r15b,1
  00000000000000E0: 44 88 BC 24 B8 00  mov         byte ptr [rsp+0B8h],r15b
                    00 00
  00000000000000E8: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000000EB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000EF: 4A 8B 4C 31 48     mov         rcx,qword ptr [rcx+r14+48h]
  00000000000000F4: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000F8: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000000FC: 74 17              je          0000000000000115
  00000000000000FE: 48 8B 51 50        mov         rdx,qword ptr [rcx+50h]
  0000000000000102: 8B 02              mov         eax,dword ptr [rdx]
  0000000000000104: 85 C0              test        eax,eax
  0000000000000106: 7E 0D              jle         0000000000000115
  0000000000000108: FF C8              dec         eax
  000000000000010A: 89 02              mov         dword ptr [rdx],eax
  000000000000010C: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000110: 48 FF 00           inc         qword ptr [rax]
  0000000000000113: EB 1A              jmp         000000000000012F
  0000000000000115: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000118: FF 50 38           call        qword ptr [rax+38h]
  000000000000011B: EB 12              jmp         000000000000012F
  000000000000011D: 48 8B 4E 10        mov         rcx,qword ptr [rsi+10h]
  0000000000000121: 48 3B C8           cmp         rcx,rax
  0000000000000124: 72 0B              jb          0000000000000131
  0000000000000126: BF 02 00 00 00     mov         edi,2
  000000000000012B: 89 7C 24 20        mov         dword ptr [rsp+20h],edi
  000000000000012F: EB 77              jmp         00000000000001A8
  0000000000000131: 48 8B 56 18        mov         rdx,qword ptr [rsi+18h]
  0000000000000135: 48 3B CA           cmp         rcx,rdx
  0000000000000138: 73 1F              jae         0000000000000159
  000000000000013A: 48 8D 41 01        lea         rax,[rcx+1]
  000000000000013E: 48 89 46 10        mov         qword ptr [rsi+10h],rax
  0000000000000142: 48 8B C6           mov         rax,rsi
  0000000000000145: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000149: 76 03              jbe         000000000000014E
  000000000000014B: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000014E: 44 88 0C 08        mov         byte ptr [rax+rcx],r9b
  0000000000000152: C6 44 08 01 00     mov         byte ptr [rax+rcx+1],0
  0000000000000157: EB 11              jmp         000000000000016A
  0000000000000159: 44 0F B6 C3        movzx       r8d,bl
  000000000000015D: BA 01 00 00 00     mov         edx,1
  0000000000000162: 48 8B CE           mov         rcx,rsi
  0000000000000165: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z
  000000000000016A: 41 B7 01           mov         r15b,1
  000000000000016D: 44 88 BC 24 B8 00  mov         byte ptr [rsp+0B8h],r15b
                    00 00
  0000000000000175: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000178: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000017C: 4A 8B 4C 31 48     mov         rcx,qword ptr [rcx+r14+48h]
  0000000000000181: E8 00 00 00 00     call        ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  0000000000000186: 44 8B C8           mov         r9d,eax
  0000000000000189: E9 33 FF FF FF     jmp         00000000000000C1
$LN19:
  000000000000018E: 4C 8B B4 24 A0 00  mov         r14,qword ptr [rsp+0A0h]
                    00 00
  0000000000000196: 8B 7C 24 20        mov         edi,dword ptr [rsp+20h]
  000000000000019A: 44 0F B6 BC 24 B8  movzx       r15d,byte ptr [rsp+0B8h]
                    00 00 00
  00000000000001A3: 4C 8B 6C 24 28     mov         r13,qword ptr [rsp+28h]
  00000000000001A8: 45 33 E4           xor         r12d,r12d
  00000000000001AB: 45 84 FF           test        r15b,r15b
  00000000000001AE: 75 03              jne         00000000000001B3
  00000000000001B0: 83 CF 02           or          edi,2
  00000000000001B3: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000001B6: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001BA: 49 03 CE           add         rcx,r14
  00000000000001BD: 0B 79 10           or          edi,dword ptr [rcx+10h]
  00000000000001C0: B8 04 00 00 00     mov         eax,4
  00000000000001C5: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  00000000000001CA: 41 0F 45 C4        cmovne      eax,r12d
  00000000000001CE: 0B C7              or          eax,edi
  00000000000001D0: 83 E0 17           and         eax,17h
  00000000000001D3: 89 41 10           mov         dword ptr [rcx+10h],eax
  00000000000001D6: 23 41 14           and         eax,dword ptr [rcx+14h]
  00000000000001D9: 75 36              jne         0000000000000211
  00000000000001DB: 49 8B 45 00        mov         rax,qword ptr [r13]
  00000000000001DF: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001E3: 4A 8B 4C 29 48     mov         rcx,qword ptr [rcx+r13+48h]
  00000000000001E8: 48 85 C9           test        rcx,rcx
  00000000000001EB: 74 07              je          00000000000001F4
  00000000000001ED: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000001F0: FF 50 10           call        qword ptr [rax+10h]
  00000000000001F3: 90                 nop
  00000000000001F4: 49 8B C6           mov         rax,r14
  00000000000001F7: 4C 8D 5C 24 70     lea         r11,[rsp+70h]
  00000000000001FC: 49 8B 5B 38        mov         rbx,qword ptr [r11+38h]
  0000000000000200: 49 8B 73 40        mov         rsi,qword ptr [r11+40h]
  0000000000000204: 49 8B E3           mov         rsp,r11
  0000000000000207: 41 5F              pop         r15
  0000000000000209: 41 5E              pop         r14
  000000000000020B: 41 5D              pop         r13
  000000000000020D: 41 5C              pop         r12
  000000000000020F: 5F                 pop         rdi
  0000000000000210: C3                 ret
  0000000000000211: A8 04              test        al,4
  0000000000000213: 74 09              je          000000000000021E
  0000000000000215: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000021C: EB 14              jmp         0000000000000232
  000000000000021E: A8 02              test        al,2
  0000000000000220: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000227: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000022E: 48 0F 44 D8        cmove       rbx,rax
  0000000000000232: BA 01 00 00 00     mov         edx,1
  0000000000000237: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  000000000000023C: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000241: 4C 8B C0           mov         r8,rax
  0000000000000244: 48 8B D3           mov         rdx,rbx
  0000000000000247: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000024C: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000251: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000258: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000025D: E8 00 00 00 00     call        _CxxThrowException
  0000000000000262: CC                 int         3

?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$0::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$0::std &&,class dtor$0::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$3@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$3::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$3::std &&,class dtor$3::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class catch$4::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class catch$4::std &&,class catch$4::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B F9           mov         rdi,rcx
  0000000000000010: 48 8B DA           mov         rbx,rdx
  0000000000000013: B2 0A              mov         dl,0Ah
  0000000000000015: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000019: 48 03 CF           add         rcx,rdi
  000000000000001C: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000021: 44 0F B6 C0        movzx       r8d,al
  0000000000000025: 48 8B D3           mov         rdx,rbx
  0000000000000028: 48 8B CF           mov         rcx,rdi
  000000000000002B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5F                 pop         rdi
  0000000000000035: E9 00 00 00 00     jmp         ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z

??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z (class std::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 4C 8B F1           mov         r14,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 2D 00 00 00  mov         rbp,qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 6C 24 60     mov         qword ptr [rsp+60h],rbp
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A]
                    00
  0000000000000070: 49 8B 4E 08        mov         rcx,qword ptr [r14+8]
  0000000000000074: 48 8D 34 FD 00 00  lea         rsi,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 ED           test        rbp,rbp
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DD           mov         rbx,rbp
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 49 8B D6           mov         rdx,r14
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z (class std::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 4C 8B F1           mov         r14,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 2D 00 00 00  mov         rbp,qword ptr [?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 6C 24 60     mov         qword ptr [rsp+60h],rbp
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$ctype@D@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$ctype@D@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$ctype@D@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$ctype@D@std@@2V0locale@2@A]
                    00
  0000000000000070: 49 8B 4E 08        mov         rcx,qword ptr [r14+8]
  0000000000000074: 48 8D 34 FD 00 00  lea         rsi,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 ED           test        rbp,rbp
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DD           mov         rbx,rbp
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 49 8B D6           mov         rdx,r14
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z (class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 4C 8B F1           mov         r14,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 2D 00 00 00  mov         rbp,qword ptr [?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 6C 24 60     mov         qword ptr [rsp+60h],rbp
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A]
                    00
  0000000000000070: 49 8B 4E 08        mov         rcx,qword ptr [r14+8]
  0000000000000074: 48 8D 34 FD 00 00  lea         rsi,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 ED           test        rbp,rbp
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DD           mov         rbx,rbp
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 49 8B D6           mov         rdx,r14
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z (class std::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 4C 8B F1           mov         r14,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 2D 00 00 00  mov         rbp,qword ptr [?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 6C 24 60     mov         qword ptr [rsp+60h],rbp
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A]
                    00
  0000000000000070: 49 8B 4E 08        mov         rcx,qword ptr [r14+8]
  0000000000000074: 48 8D 34 FD 00 00  lea         rsi,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 48 8B 1C 06        mov         rbx,qword ptr [rsi+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 ED           test        rbp,rbp
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DD           mov         rbx,rbp
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 49 8B D6           mov         rdx,r14
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z (public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 44 89 4C 24 20     mov         dword ptr [rsp+20h],r9d
  000000000000000A: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  000000000000000F: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000014: 55                 push        rbp
  0000000000000015: 56                 push        rsi
  0000000000000016: 57                 push        rdi
  0000000000000017: 41 54              push        r12
  0000000000000019: 41 55              push        r13
  000000000000001B: 41 56              push        r14
  000000000000001D: 41 57              push        r15
  000000000000001F: 48 83 EC 60        sub         rsp,60h
  0000000000000023: 41 8B F0           mov         esi,r8d
  0000000000000026: 48 8B D9           mov         rbx,rcx
  0000000000000029: 45 33 ED           xor         r13d,r13d
  000000000000002C: 44 89 6C 24 20     mov         dword ptr [rsp+20h],r13d
  0000000000000031: 44 39 AC 24 C0 00  cmp         dword ptr [rsp+0C0h],r13d
                    00 00
  0000000000000039: 74 6D              je          00000000000000A8
  000000000000003B: 48 8D 05 00 00 00  lea         rax,[??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@]
                    00
  0000000000000042: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000045: 4C 89 A9 B8 00 00  mov         qword ptr [rcx+0B8h],r13
                    00
  000000000000004C: 4C 89 A9 C0 00 00  mov         qword ptr [rcx+0C0h],r13
                    00
  0000000000000053: 44 89 A9 C8 00 00  mov         dword ptr [rcx+0C8h],r13d
                    00
  000000000000005A: 4C 89 A9 D0 00 00  mov         qword ptr [rcx+0D0h],r13
                    00
  0000000000000061: 4C 89 A9 D8 00 00  mov         qword ptr [rcx+0D8h],r13
                    00
  0000000000000068: 4C 89 A9 E0 00 00  mov         qword ptr [rcx+0E0h],r13
                    00
  000000000000006F: 4C 89 A9 E8 00 00  mov         qword ptr [rcx+0E8h],r13
                    00
  0000000000000076: 4C 89 A9 F0 00 00  mov         qword ptr [rcx+0F0h],r13
                    00
  000000000000007D: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000084: 48 89 81 B0 00 00  mov         qword ptr [rcx+0B0h],rax
                    00
  000000000000008B: 4C 89 A9 F8 00 00  mov         qword ptr [rcx+0F8h],r13
                    00
  0000000000000092: 4C 89 A9 00 01 00  mov         qword ptr [rcx+100h],r13
                    00
  0000000000000099: 44 88 A9 08 01 00  mov         byte ptr [rcx+108h],r13b
                    00
  00000000000000A0: C7 44 24 20 01 00  mov         dword ptr [rsp+20h],1
                    00 00
  00000000000000A8: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000AB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000AF: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  00000000000000B6: 48 89 04 19        mov         qword ptr [rcx+rbx],rax
  00000000000000BA: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000BD: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000C1: 8D 51 E8           lea         edx,[rcx-18h]
  00000000000000C4: 89 54 19 FC        mov         dword ptr [rcx+rbx-4],edx
  00000000000000C8: 4C 89 6B 08        mov         qword ptr [rbx+8],r13
  00000000000000CC: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000CF: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000D3: 48 03 CB           add         rcx,rbx
  00000000000000D6: 48 8D 7B 10        lea         rdi,[rbx+10h]
  00000000000000DA: 45 33 C0           xor         r8d,r8d
  00000000000000DD: 48 8B D7           mov         rdx,rdi
  00000000000000E0: E8 00 00 00 00     call        ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z
  00000000000000E5: 90                 nop
  00000000000000E6: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000E9: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000ED: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  00000000000000F4: 48 89 04 19        mov         qword ptr [rcx+rbx],rax
  00000000000000F8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000FB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000FF: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  0000000000000105: 89 54 19 FC        mov         dword ptr [rcx+rbx-4],edx
  0000000000000109: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  000000000000010E: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000115: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000118: 4C 8D 77 08        lea         r14,[rdi+8]
  000000000000011C: 4D 89 2E           mov         qword ptr [r14],r13
  000000000000011F: 4C 8D 7F 10        lea         r15,[rdi+10h]
  0000000000000123: 4D 89 2F           mov         qword ptr [r15],r13
  0000000000000126: 4C 89 6F 18        mov         qword ptr [rdi+18h],r13
  000000000000012A: 4C 89 6F 20        mov         qword ptr [rdi+20h],r13
  000000000000012E: 48 8D 6F 28        lea         rbp,[rdi+28h]
  0000000000000132: 4C 89 6D 00        mov         qword ptr [rbp],r13
  0000000000000136: 4C 8D 67 30        lea         r12,[rdi+30h]
  000000000000013A: 4D 89 2C 24        mov         qword ptr [r12],r13
  000000000000013E: 4C 89 6F 38        mov         qword ptr [rdi+38h],r13
  0000000000000142: 4C 89 6F 40        mov         qword ptr [rdi+40h],r13
  0000000000000146: 4C 8D 6F 48        lea         r13,[rdi+48h]
  000000000000014A: 33 C0              xor         eax,eax
  000000000000014C: 41 89 45 00        mov         dword ptr [r13],eax
  0000000000000150: 89 47 4C           mov         dword ptr [rdi+4Ch],eax
  0000000000000153: 48 89 47 50        mov         qword ptr [rdi+50h],rax
  0000000000000157: 48 89 47 58        mov         qword ptr [rdi+58h],rax
  000000000000015B: B9 10 00 00 00     mov         ecx,10h
  0000000000000160: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000165: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000016A: 48 85 C0           test        rax,rax
  000000000000016D: 74 14              je          0000000000000183
  000000000000016F: B1 01              mov         cl,1
  0000000000000171: E8 00 00 00 00     call        ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
  0000000000000176: 48 8B 4C 24 28     mov         rcx,qword ptr [rsp+28h]
  000000000000017B: 48 89 41 08        mov         qword ptr [rcx+8],rax
  000000000000017F: 33 D2              xor         edx,edx
  0000000000000181: EB 04              jmp         0000000000000187
  0000000000000183: 33 D2              xor         edx,edx
  0000000000000185: 8B CA              mov         ecx,edx
  0000000000000187: 48 89 4F 60        mov         qword ptr [rdi+60h],rcx
  000000000000018B: 48 8D 47 4C        lea         rax,[rdi+4Ch]
  000000000000018F: 48 8D 0D 00 00 00  lea         rcx,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000196: 48 89 0F           mov         qword ptr [rdi],rcx
  0000000000000199: C6 47 7C 00        mov         byte ptr [rdi+7Ch],0
  000000000000019D: C6 47 71 00        mov         byte ptr [rdi+71h],0
  00000000000001A1: 4C 89 77 18        mov         qword ptr [rdi+18h],r14
  00000000000001A5: 4C 89 7F 20        mov         qword ptr [rdi+20h],r15
  00000000000001A9: 48 89 6F 38        mov         qword ptr [rdi+38h],rbp
  00000000000001AD: 4C 89 67 40        mov         qword ptr [rdi+40h],r12
  00000000000001B1: 4C 89 6F 50        mov         qword ptr [rdi+50h],r13
  00000000000001B5: 48 89 47 58        mov         qword ptr [rdi+58h],rax
  00000000000001B9: 49 89 17           mov         qword ptr [r15],rdx
  00000000000001BC: 49 89 14 24        mov         qword ptr [r12],rdx
  00000000000001C0: 89 10              mov         dword ptr [rax],edx
  00000000000001C2: 49 89 16           mov         qword ptr [r14],rdx
  00000000000001C5: 48 89 55 00        mov         qword ptr [rbp],rdx
  00000000000001C9: 41 89 55 00        mov         dword ptr [r13],edx
  00000000000001CD: 48 89 97 80 00 00  mov         qword ptr [rdi+80h],rdx
                    00
  00000000000001D4: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000001DB: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  00000000000001DF: 48 89 57 68        mov         qword ptr [rdi+68h],rdx
  00000000000001E3: 48 83 FA 00        cmp         rdx,0
  00000000000001E7: 0F 85 9D 00 00 00  jne         000000000000028A
  00000000000001ED: 83 CE 01           or          esi,1
  00000000000001F0: 44 8B 84 24 B8 00  mov         r8d,dword ptr [rsp+0B8h]
                    00 00
  00000000000001F8: 8B D6              mov         edx,esi
  00000000000001FA: 48 8B 8C 24 A8 00  mov         rcx,qword ptr [rsp+0A8h]
                    00 00
  0000000000000202: E8 00 00 00 00     call        ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z
  0000000000000207: 48 85 C0           test        rax,rax
  000000000000020A: 74 7E              je          000000000000028A
  000000000000020C: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000212: 48 8B D0           mov         rdx,rax
  0000000000000215: 48 8B CF           mov         rcx,rdi
  0000000000000218: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  000000000000021D: 48 8B 47 60        mov         rax,qword ptr [rdi+60h]
  0000000000000221: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  0000000000000225: 48 89 74 24 30     mov         qword ptr [rsp+30h],rsi
  000000000000022A: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000022D: 48 8B CE           mov         rcx,rsi
  0000000000000230: FF 50 08           call        qword ptr [rax+8]
  0000000000000233: 90                 nop
  0000000000000234: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000239: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  000000000000023E: 48 8B D0           mov         rdx,rax
  0000000000000241: 48 8B CF           mov         rcx,rdi
  0000000000000244: E8 00 00 00 00     call        ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
  0000000000000249: 90                 nop
  000000000000024A: 48 85 F6           test        rsi,rsi
  000000000000024D: 74 20              je          000000000000026F
  000000000000024F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000252: 48 8B CE           mov         rcx,rsi
  0000000000000255: FF 50 10           call        qword ptr [rax+10h]
  0000000000000258: 48 85 C0           test        rax,rax
  000000000000025B: 74 12              je          000000000000026F
  000000000000025D: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000260: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000263: BA 01 00 00 00     mov         edx,1
  0000000000000268: 48 8B C8           mov         rcx,rax
  000000000000026B: 41 FF D0           call        r8
  000000000000026E: 90                 nop
  000000000000026F: 48 8B C3           mov         rax,rbx
  0000000000000272: 48 8B 9C 24 B0 00  mov         rbx,qword ptr [rsp+0B0h]
                    00 00
  000000000000027A: 48 83 C4 60        add         rsp,60h
  000000000000027E: 41 5F              pop         r15
  0000000000000280: 41 5E              pop         r14
  0000000000000282: 41 5D              pop         r13
  0000000000000284: 41 5C              pop         r12
  0000000000000286: 5F                 pop         rdi
  0000000000000287: 5E                 pop         rsi
  0000000000000288: 5D                 pop         rbp
  0000000000000289: C3                 ret
  000000000000028A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000028D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000291: 48 03 CB           add         rcx,rbx
  0000000000000294: B8 06 00 00 00     mov         eax,6
  0000000000000299: BA 02 00 00 00     mov         edx,2
  000000000000029E: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  00000000000002A3: 0F 45 C2           cmovne      eax,edx
  00000000000002A6: 0B 41 10           or          eax,dword ptr [rcx+10h]
  00000000000002A9: 83 E0 17           and         eax,17h
  00000000000002AC: 89 41 10           mov         dword ptr [rcx+10h],eax
  00000000000002AF: 23 41 14           and         eax,dword ptr [rcx+14h]
  00000000000002B2: 74 BB              je          000000000000026F
  00000000000002B4: A8 04              test        al,4
  00000000000002B6: 74 09              je          00000000000002C1
  00000000000002B8: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000002BF: EB 14              jmp         00000000000002D5
  00000000000002C1: 84 C2              test        dl,al
  00000000000002C3: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000002CA: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000002D1: 48 0F 44 D8        cmove       rbx,rax
  00000000000002D5: BA 01 00 00 00     mov         edx,1
  00000000000002DA: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  00000000000002DF: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000002E4: 4C 8B C0           mov         r8,rax
  00000000000002E7: 48 8B D3           mov         rdx,rbx
  00000000000002EA: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  00000000000002EF: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000002F4: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000002FB: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  0000000000000300: E8 00 00 00 00     call        _CxxThrowException
  0000000000000305: CC                 int         3

?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: 8B 45 20           mov         eax,dword ptr [rbp+20h]
  000000000000000C: 83 E0 01           and         eax,1
  000000000000000F: 85 C0              test        eax,eax
  0000000000000011: 74 17              je          000000000000002A
  0000000000000013: 83 65 20 FE        and         dword ptr [rbp+20h],0FFFFFFFEh
  0000000000000017: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  000000000000001E: 48 81 C1 B0 00 00  add         rcx,0B0h
                    00
  0000000000000025: E8 00 00 00 00     call        ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  000000000000002A: 48 83 C4 20        add         rsp,20h
  000000000000002E: 5D                 pop         rbp
  000000000000002F: C3                 ret

?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$1):
  0000000000000000: 48 8B 8A A0 00 00  mov         rcx,qword ptr [rdx+0A0h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ

?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$2):
  0000000000000000: 48 8B 8A A0 00 00  mov         rcx,qword ptr [rdx+0A0h]
                    00
  0000000000000007: 48 83 C1 10        add         rcx,10h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

?dtor$6@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$6):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z (public: __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(unsigned __int64,char)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 20        sub         rsp,20h
  000000000000001A: 33 F6              xor         esi,esi
  000000000000001C: 45 0F BE F0        movsx       r14d,r8b
  0000000000000020: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000023: 48 BD FF FF FF FF  mov         rbp,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000002D: 48 8B FA           mov         rdi,rdx
  0000000000000030: 48 8B D9           mov         rbx,rcx
  0000000000000033: 0F 11 01           movups      xmmword ptr [rcx],xmm0
  0000000000000036: 48 89 71 10        mov         qword ptr [rcx+10h],rsi
  000000000000003A: 48 89 71 18        mov         qword ptr [rcx+18h],rsi
  000000000000003E: 48 3B D5           cmp         rdx,rbp
  0000000000000041: 0F 87 D6 00 00 00  ja          000000000000011D
  0000000000000047: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000004B: 77 20              ja          000000000000006D
  000000000000004D: 48 89 51 10        mov         qword ptr [rcx+10h],rdx
  0000000000000051: 4C 8B C7           mov         r8,rdi
  0000000000000054: 41 8B D6           mov         edx,r14d
  0000000000000057: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  000000000000005F: E8 00 00 00 00     call        memset
  0000000000000064: 40 88 34 1F        mov         byte ptr [rdi+rbx],sil
  0000000000000068: E9 86 00 00 00     jmp         00000000000000F3
  000000000000006D: 48 8B C7           mov         rax,rdi
  0000000000000070: 48 83 C8 0F        or          rax,0Fh
  0000000000000074: 48 3B C5           cmp         rax,rbp
  0000000000000077: 76 29              jbe         00000000000000A2
  0000000000000079: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  0000000000000083: 48 83 C0 27        add         rax,27h
  0000000000000087: 48 8B C8           mov         rcx,rax
  000000000000008A: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000008F: 48 85 C0           test        rax,rax
  0000000000000092: 74 7D              je          0000000000000111
  0000000000000094: 48 8D 70 27        lea         rsi,[rax+27h]
  0000000000000098: 48 83 E6 E0        and         rsi,0FFFFFFFFFFFFFFE0h
  000000000000009C: 48 89 46 F8        mov         qword ptr [rsi-8],rax
  00000000000000A0: EB 34              jmp         00000000000000D6
  00000000000000A2: B9 16 00 00 00     mov         ecx,16h
  00000000000000A7: 48 8B E8           mov         rbp,rax
  00000000000000AA: 48 3B C1           cmp         rax,rcx
  00000000000000AD: 48 0F 42 E9        cmovb       rbp,rcx
  00000000000000B1: 48 8D 4D 01        lea         rcx,[rbp+1]
  00000000000000B5: 48 85 C9           test        rcx,rcx
  00000000000000B8: 74 1C              je          00000000000000D6
  00000000000000BA: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  00000000000000C1: 72 0B              jb          00000000000000CE
  00000000000000C3: 48 8D 41 27        lea         rax,[rcx+27h]
  00000000000000C7: 48 3B C1           cmp         rax,rcx
  00000000000000CA: 76 4B              jbe         0000000000000117
  00000000000000CC: EB B9              jmp         0000000000000087
  00000000000000CE: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000D3: 48 8B F0           mov         rsi,rax
  00000000000000D6: 41 8B D6           mov         edx,r14d
  00000000000000D9: 48 89 33           mov         qword ptr [rbx],rsi
  00000000000000DC: 4C 8B C7           mov         r8,rdi
  00000000000000DF: 48 89 7B 10        mov         qword ptr [rbx+10h],rdi
  00000000000000E3: 48 8B CE           mov         rcx,rsi
  00000000000000E6: 48 89 6B 18        mov         qword ptr [rbx+18h],rbp
  00000000000000EA: E8 00 00 00 00     call        memset
  00000000000000EF: C6 04 3E 00        mov         byte ptr [rsi+rdi],0
  00000000000000F3: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  00000000000000F8: 48 8B C3           mov         rax,rbx
  00000000000000FB: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000100: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000105: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  000000000000010A: 48 83 C4 20        add         rsp,20h
  000000000000010E: 41 5E              pop         r14
  0000000000000110: C3                 ret
  0000000000000111: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000116: CC                 int         3
  0000000000000117: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  000000000000011C: CC                 int         3
  000000000000011D: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000122: CC                 int         3

??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z (protected: __cdecl std::_System_error::_System_error(class std::error_code,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  000000000000000E: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000015: 48 33 C4           xor         rax,rsp
  0000000000000018: 48 89 44 24 70     mov         qword ptr [rsp+70h],rax
  000000000000001D: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000022: 33 C0              xor         eax,eax
  0000000000000024: 49 83 78 18 0F     cmp         qword ptr [r8+18h],0Fh
  0000000000000029: 0F 57 C0           xorps       xmm0,xmm0
  000000000000002C: 49 8B 78 10        mov         rdi,qword ptr [r8+10h]
  0000000000000030: 4D 8B F0           mov         r14,r8
  0000000000000033: 48 8B EA           mov         rbp,rdx
  0000000000000036: 48 89 44 24 40     mov         qword ptr [rsp+40h],rax
  000000000000003B: 48 8B F1           mov         rsi,rcx
  000000000000003E: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  0000000000000043: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  0000000000000048: 76 03              jbe         000000000000004D
  000000000000004A: 4D 8B 30           mov         r14,qword ptr [r8]
  000000000000004D: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000057: 48 3B FB           cmp         rdi,rbx
  000000000000005A: 0F 87 7F 01 00 00  ja          00000000000001DF
  0000000000000060: 48 83 FF 0F        cmp         rdi,0Fh
  0000000000000064: 77 1C              ja          0000000000000082
  0000000000000066: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  000000000000006B: 48 C7 44 24 48 0F  mov         qword ptr [rsp+48h],0Fh
                    00 00 00
  0000000000000074: 41 0F 10 06        movups      xmm0,xmmword ptr [r14]
  0000000000000078: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  000000000000007D: E9 8F 00 00 00     jmp         0000000000000111
  0000000000000082: 48 8B CF           mov         rcx,rdi
  0000000000000085: 48 83 C9 0F        or          rcx,0Fh
  0000000000000089: 48 3B CB           cmp         rcx,rbx
  000000000000008C: 76 30              jbe         00000000000000BE
  000000000000008E: 48 B8 00 00 00 00  mov         rax,8000000000000000h
                    00 00 00 80
  0000000000000098: 48 83 C0 27        add         rax,27h
  000000000000009C: 48 8B C8           mov         rcx,rax
  000000000000009F: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000A4: 48 8B C8           mov         rcx,rax
  00000000000000A7: 48 85 C0           test        rax,rax
  00000000000000AA: 0F 84 23 01 00 00  je          00000000000001D3
  00000000000000B0: 48 83 C0 27        add         rax,27h
  00000000000000B4: 48 83 E0 E0        and         rax,0FFFFFFFFFFFFFFE0h
  00000000000000B8: 48 89 48 F8        mov         qword ptr [rax-8],rcx
  00000000000000BC: EB 35              jmp         00000000000000F3
  00000000000000BE: BA 16 00 00 00     mov         edx,16h
  00000000000000C3: 48 8B D9           mov         rbx,rcx
  00000000000000C6: 48 3B CA           cmp         rcx,rdx
  00000000000000C9: 48 0F 42 DA        cmovb       rbx,rdx
  00000000000000CD: 48 8D 4B 01        lea         rcx,[rbx+1]
  00000000000000D1: 48 85 C9           test        rcx,rcx
  00000000000000D4: 74 1D              je          00000000000000F3
  00000000000000D6: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  00000000000000DD: 72 0F              jb          00000000000000EE
  00000000000000DF: 48 8D 41 27        lea         rax,[rcx+27h]
  00000000000000E3: 48 3B C1           cmp         rax,rcx
  00000000000000E6: 0F 86 ED 00 00 00  jbe         00000000000001D9
  00000000000000EC: EB AE              jmp         000000000000009C
  00000000000000EE: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000F3: 4C 8D 47 01        lea         r8,[rdi+1]
  00000000000000F7: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000000FC: 49 8B D6           mov         rdx,r14
  00000000000000FF: 48 89 7C 24 40     mov         qword ptr [rsp+40h],rdi
  0000000000000104: 48 8B C8           mov         rcx,rax
  0000000000000107: 48 89 5C 24 48     mov         qword ptr [rsp+48h],rbx
  000000000000010C: E8 00 00 00 00     call        memcpy
  0000000000000111: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  0000000000000115: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000011A: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  000000000000011F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000124: 0F 29 44 24 20     movaps      xmmword ptr [rsp+20h],xmm0
  0000000000000129: E8 00 00 00 00     call        ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
  000000000000012E: 48 83 78 18 0F     cmp         qword ptr [rax+18h],0Fh
  0000000000000133: 76 03              jbe         0000000000000138
  0000000000000135: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000138: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  000000000000013F: 48 89 44 24 20     mov         qword ptr [rsp+20h],rax
  0000000000000144: 48 89 0E           mov         qword ptr [rsi],rcx
  0000000000000147: 48 8D 56 08        lea         rdx,[rsi+8]
  000000000000014B: 0F 57 C0           xorps       xmm0,xmm0
  000000000000014E: C6 44 24 28 01     mov         byte ptr [rsp+28h],1
  0000000000000153: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000158: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  000000000000015B: E8 00 00 00 00     call        __std_exception_copy
  0000000000000160: 48 8B 54 24 68     mov         rdx,qword ptr [rsp+68h]
  0000000000000165: 48 8D 05 00 00 00  lea         rax,[??_7runtime_error@std@@6B@]
                    00
  000000000000016C: 48 89 06           mov         qword ptr [rsi],rax
  000000000000016F: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000173: 76 2E              jbe         00000000000001A3
  0000000000000175: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  000000000000017A: 48 FF C2           inc         rdx
  000000000000017D: 48 8B C1           mov         rax,rcx
  0000000000000180: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000187: 72 15              jb          000000000000019E
  0000000000000189: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000018D: 48 83 C2 27        add         rdx,27h
  0000000000000191: 48 2B C1           sub         rax,rcx
  0000000000000194: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000198: 48 83 F8 1F        cmp         rax,1Fh
  000000000000019C: 77 35              ja          00000000000001D3
  000000000000019E: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000001A3: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000001A7: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  00000000000001AE: 48 89 06           mov         qword ptr [rsi],rax
  00000000000001B1: 48 8B C6           mov         rax,rsi
  00000000000001B4: 0F 11 46 18        movups      xmmword ptr [rsi+18h],xmm0
  00000000000001B8: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000001BD: 48 33 CC           xor         rcx,rsp
  00000000000001C0: E8 00 00 00 00     call        __security_check_cookie
  00000000000001C5: 48 81 C4 80 00 00  add         rsp,80h
                    00
  00000000000001CC: 41 5E              pop         r14
  00000000000001CE: 5F                 pop         rdi
  00000000000001CF: 5E                 pop         rsi
  00000000000001D0: 5D                 pop         rbp
  00000000000001D1: 5B                 pop         rbx
  00000000000001D2: C3                 ret
  00000000000001D3: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000001D8: CC                 int         3
  00000000000001D9: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  00000000000001DE: CC                 int         3
  00000000000001DF: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  00000000000001E4: CC                 int         3

??0_System_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::_System_error::_System_error(class std::_System_error const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8B C7           mov         rax,rdi
  000000000000003A: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  000000000000003E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000043: 0F 11 47 18        movups      xmmword ptr [rdi+18h],xmm0
  0000000000000047: 48 83 C4 20        add         rsp,20h
  000000000000004B: 5F                 pop         rdi
  000000000000004C: C3                 ret

??0bad_alloc@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_alloc@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@XZ (public: __cdecl std::bad_array_new_length::bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@KINCDENJ@bad?5array?5new?5length@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0bad_cast@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_cast::bad_cast(class std::bad_cast const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_cast@std@@QEAA@XZ (public: __cdecl std::bad_cast::bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_08EPJLHIJG@bad?5cast@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0exception@std@@QEAA@AEBV01@@Z (public: __cdecl std::exception::exception(class std::exception const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8B C3           mov         rax,rbx
  000000000000002C: 48 83 C4 20        add         rsp,20h
  0000000000000030: 5B                 pop         rbx
  0000000000000031: C3                 ret

??0failure@ios_base@std@@QEAA@AEBV012@@Z (public: __cdecl std::ios_base::failure::failure(class std::ios_base::failure const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8D 05 00 00 00  lea         rax,[??_7failure@ios_base@std@@6B@]
                    00
  000000000000003E: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 89 07           mov         qword ptr [rdi],rax
  000000000000004A: 48 8B C7           mov         rax,rdi
  000000000000004D: 0F 11 47 18        movups      xmmword ptr [rdi+18h],xmm0
  0000000000000051: 48 83 C4 20        add         rsp,20h
  0000000000000055: 5F                 pop         rdi
  0000000000000056: C3                 ret

??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z (public: __cdecl std::ios_base::failure::failure(char const *,class std::error_code const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 70        sub         rsp,70h
  0000000000000006: 0F 29 74 24 60     movaps      xmmword ptr [rsp+60h],xmm6
  000000000000000B: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000012: 48 33 C4           xor         rax,rsp
  0000000000000015: 48 89 44 24 50     mov         qword ptr [rsp+50h],rax
  000000000000001A: 48 8B D9           mov         rbx,rcx
  000000000000001D: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000022: 41 0F 10 30        movups      xmm6,xmmword ptr [r8]
  0000000000000026: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000029: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  000000000000002E: 33 C0              xor         eax,eax
  0000000000000030: 48 89 44 24 40     mov         qword ptr [rsp+40h],rax
  0000000000000035: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  000000000000003A: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000041: 49 FF C0           inc         r8
  0000000000000044: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  0000000000000048: 75 F7              jne         0000000000000041
  000000000000004A: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000004F: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000054: 90                 nop
  0000000000000055: 66 0F 7F 74 24 20  movdqa      xmmword ptr [rsp+20h],xmm6
  000000000000005B: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000060: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000065: 48 8B CB           mov         rcx,rbx
  0000000000000068: E8 00 00 00 00     call        ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  000000000000006D: 90                 nop
  000000000000006E: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000073: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000077: 76 2E              jbe         00000000000000A7
  0000000000000079: 48 FF C2           inc         rdx
  000000000000007C: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000081: 48 8B C1           mov         rax,rcx
  0000000000000084: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000008B: 72 15              jb          00000000000000A2
  000000000000008D: 48 83 C2 27        add         rdx,27h
  0000000000000091: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000095: 48 2B C1           sub         rax,rcx
  0000000000000098: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000009C: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000A0: 77 2A              ja          00000000000000CC
  00000000000000A2: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000A7: 48 8D 05 00 00 00  lea         rax,[??_7failure@ios_base@std@@6B@]
                    00
  00000000000000AE: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000B1: 48 8B C3           mov         rax,rbx
  00000000000000B4: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  00000000000000B9: 48 33 CC           xor         rcx,rsp
  00000000000000BC: E8 00 00 00 00     call        __security_check_cookie
  00000000000000C1: 0F 28 74 24 60     movaps      xmm6,xmmword ptr [rsp+60h]
  00000000000000C6: 48 83 C4 70        add         rsp,70h
  00000000000000CA: 5B                 pop         rbx
  00000000000000CB: C3                 ret
  00000000000000CC: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000000D1: CC                 int         3

?dtor$1@?0???0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z@4HA (int `public: __cdecl std::ios_base::failure::failure(char const *,class ios_base::error_code const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

??0runtime_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::runtime_error::runtime_error(class std::runtime_error const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7runtime_error@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B DA           mov         rbx,rdx
  0000000000000012: 48 8B F9           mov         rdi,rcx
  0000000000000015: 48 89 11           mov         qword ptr [rcx],rdx
  0000000000000018: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000001B: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001F: 49 8B 4C 10 48     mov         rcx,qword ptr [r8+rdx+48h]
  0000000000000024: 48 85 C9           test        rcx,rcx
  0000000000000027: 74 07              je          0000000000000030
  0000000000000029: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002C: FF 50 08           call        qword ptr [rax+8]
  000000000000002F: 90                 nop
  0000000000000030: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000033: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000037: 83 7C 19 10 00     cmp         dword ptr [rcx+rbx+10h],0
  000000000000003C: 74 04              je          0000000000000042
  000000000000003E: 32 C0              xor         al,al
  0000000000000040: EB 27              jmp         0000000000000069
  0000000000000042: 48 8B 4C 19 50     mov         rcx,qword ptr [rcx+rbx+50h]
  0000000000000047: 48 85 C9           test        rcx,rcx
  000000000000004A: 74 1B              je          0000000000000067
  000000000000004C: 48 3B CB           cmp         rcx,rbx
  000000000000004F: 74 16              je          0000000000000067
  0000000000000051: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000056: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000059: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000005D: 83 7C 19 10 00     cmp         dword ptr [rcx+rbx+10h],0
  0000000000000062: 0F 94 C0           sete        al
  0000000000000065: EB 02              jmp         0000000000000069
  0000000000000067: B0 01              mov         al,1
  0000000000000069: 88 47 08           mov         byte ptr [rdi+8],al
  000000000000006C: 48 8B C7           mov         rax,rdi
  000000000000006F: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000074: 48 83 C4 20        add         rsp,20h
  0000000000000078: 5F                 pop         rdi
  0000000000000079: C3                 ret

?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA (int `public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class basic_ostream<char,struct std::char_traits<char> >::sentry &)'::`1'::dtor$0):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

??0system_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::system_error::system_error(class std::system_error const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8D 05 00 00 00  lea         rax,[??_7system_error@std@@6B@]
                    00
  000000000000003E: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 89 07           mov         qword ptr [rdi],rax
  000000000000004A: 48 8B C7           mov         rax,rdi
  000000000000004D: 0F 11 47 18        movups      xmmword ptr [rdi+18h],xmm0
  0000000000000051: 48 83 C4 20        add         rsp,20h
  0000000000000055: 5F                 pop         rdi
  0000000000000056: C3                 ret

??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ (public: __cdecl std::_Tidy_guard<class std::numpunct<char> >::~_Tidy_guard<class std::numpunct<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 19           mov         rbx,qword ptr [rcx]
  0000000000000009: 48 85 DB           test        rbx,rbx
  000000000000000C: 74 20              je          000000000000002E
  000000000000000E: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000012: E8 00 00 00 00     call        free
  0000000000000017: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  000000000000001B: E8 00 00 00 00     call        free
  0000000000000020: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000024: 48 83 C4 20        add         rsp,20h
  0000000000000028: 5B                 pop         rbx
  0000000000000029: E9 00 00 00 00     jmp         free
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5B                 pop         rbx
  0000000000000033: C3                 ret

??1?$_Yarn@D@std@@QEAA@XZ (public: __cdecl std::_Yarn<char>::~_Yarn<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000000C: 48 85 C9           test        rcx,rcx
  000000000000000F: 74 05              je          0000000000000016
  0000000000000011: E8 00 00 00 00     call        free
  0000000000000016: 48 C7 03 00 00 00  mov         qword ptr [rbx],0
                    00
  000000000000001D: 48 83 C4 20        add         rsp,20h
  0000000000000021: 5B                 pop         rbx
  0000000000000022: C3                 ret

??1?$_Yarn@_W@std@@QEAA@XZ (public: __cdecl std::_Yarn<wchar_t>::~_Yarn<wchar_t>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000000C: 48 85 C9           test        rcx,rcx
  000000000000000F: 74 05              je          0000000000000016
  0000000000000011: E8 00 00 00 00     call        free
  0000000000000016: 48 C7 03 00 00 00  mov         qword ptr [rbx],0
                    00
  000000000000001D: 48 83 C4 20        add         rsp,20h
  0000000000000021: 5B                 pop         rbx
  0000000000000022: C3                 ret

??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::~basic_filebuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000001B: 74 2F              je          000000000000004C
  000000000000001D: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000021: 48 8D 43 70        lea         rax,[rbx+70h]
  0000000000000025: 48 39 01           cmp         qword ptr [rcx],rax
  0000000000000028: 75 22              jne         000000000000004C
  000000000000002A: 4C 8B 83 90 00 00  mov         r8,qword ptr [rbx+90h]
                    00
  0000000000000031: 48 8B 93 88 00 00  mov         rdx,qword ptr [rbx+88h]
                    00
  0000000000000038: 48 89 11           mov         qword ptr [rcx],rdx
  000000000000003B: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  000000000000003F: 48 89 10           mov         qword ptr [rax],rdx
  0000000000000042: 44 2B C2           sub         r8d,edx
  0000000000000045: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000049: 44 89 00           mov         dword ptr [rax],r8d
  000000000000004C: 80 7B 7C 00        cmp         byte ptr [rbx+7Ch],0
  0000000000000050: 74 08              je          000000000000005A
  0000000000000052: 48 8B CB           mov         rcx,rbx
  0000000000000055: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  000000000000005A: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000061: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000064: 48 8B 5B 60        mov         rbx,qword ptr [rbx+60h]
  0000000000000068: 48 85 DB           test        rbx,rbx
  000000000000006B: 74 37              je          00000000000000A4
  000000000000006D: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  0000000000000071: 48 85 C9           test        rcx,rcx
  0000000000000074: 74 1C              je          0000000000000092
  0000000000000076: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000079: FF 50 10           call        qword ptr [rax+10h]
  000000000000007C: 48 85 C0           test        rax,rax
  000000000000007F: 74 11              je          0000000000000092
  0000000000000081: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000084: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000087: BA 01 00 00 00     mov         edx,1
  000000000000008C: 48 8B C8           mov         rcx,rax
  000000000000008F: 41 FF D0           call        r8
  0000000000000092: BA 10 00 00 00     mov         edx,10h
  0000000000000097: 48 8B CB           mov         rcx,rbx
  000000000000009A: 48 83 C4 20        add         rsp,20h
  000000000000009E: 5B                 pop         rbx
  000000000000009F: E9 00 00 00 00     jmp         ??3@YAXPEAX_K@Z
  00000000000000A4: 48 83 C4 20        add         rsp,20h
  00000000000000A8: 5B                 pop         rbx
  00000000000000A9: C3                 ret

??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::~basic_ifstream<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000014: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001B: 48 89 84 0A 50 FF  mov         qword ptr [rdx+rcx-0B0h],rax
                    FF FF
  0000000000000023: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000002A: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000002E: 44 8D 82 50 FF FF  lea         r8d,[rdx-0B0h]
                    FF
  0000000000000035: 44 89 84 0A 4C FF  mov         dword ptr [rdx+rcx-0B4h],r8d
                    FF FF
  000000000000003D: 48 81 C1 60 FF FF  add         rcx,0FFFFFFFFFFFFFF60h
                    FF
  0000000000000044: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000049: 48 8B 83 50 FF FF  mov         rax,qword ptr [rbx-0B0h]
                    FF
  0000000000000050: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000054: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000005B: 48 89 84 19 50 FF  mov         qword ptr [rcx+rbx-0B0h],rax
                    FF FF
  0000000000000063: 48 8B 83 50 FF FF  mov         rax,qword ptr [rbx-0B0h]
                    FF
  000000000000006A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000006E: 8D 51 E8           lea         edx,[rcx-18h]
  0000000000000071: 89 94 19 4C FF FF  mov         dword ptr [rcx+rbx-0B4h],edx
                    FF
  0000000000000078: 48 83 C4 20        add         rsp,20h
  000000000000007C: 5B                 pop         rbx
  000000000000007D: C3                 ret

??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_ios<char,struct std::char_traits<char> >::~basic_ios<char,struct std::char_traits<char> >(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000000B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000E: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000013: 90                 nop
  0000000000000014: 48 83 C4 28        add         rsp,28h
  0000000000000018: C3                 ret

??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_istream<char,struct std::char_traits<char> >::~basic_istream<char,struct std::char_traits<char> >(void)):
  0000000000000000: 48 8B 41 E8        mov         rax,qword ptr [rcx-18h]
  0000000000000004: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000008: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000000F: 48 89 44 0A E8     mov         qword ptr [rdx+rcx-18h],rax
  0000000000000014: 48 8B 41 E8        mov         rax,qword ptr [rcx-18h]
  0000000000000018: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001C: 44 8D 42 E8        lea         r8d,[rdx-18h]
  0000000000000020: 44 89 44 0A E4     mov         dword ptr [rdx+rcx-1Ch],r8d
  0000000000000025: C3                 ret

??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::~basic_streambuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 59 60        mov         rbx,qword ptr [rcx+60h]
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000011: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000014: 48 85 DB           test        rbx,rbx
  0000000000000017: 74 37              je          0000000000000050
  0000000000000019: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  000000000000001D: 48 85 C9           test        rcx,rcx
  0000000000000020: 74 1C              je          000000000000003E
  0000000000000022: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000025: FF 50 10           call        qword ptr [rax+10h]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 74 11              je          000000000000003E
  000000000000002D: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000030: 48 8B C8           mov         rcx,rax
  0000000000000033: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000036: BA 01 00 00 00     mov         edx,1
  000000000000003B: 41 FF D0           call        r8
  000000000000003E: BA 10 00 00 00     mov         edx,10h
  0000000000000043: 48 8B CB           mov         rcx,rbx
  0000000000000046: 48 83 C4 20        add         rsp,20h
  000000000000004A: 5B                 pop         rbx
  000000000000004B: E9 00 00 00 00     jmp         ??3@YAXPEAX_K@Z
  0000000000000050: 48 83 C4 20        add         rsp,20h
  0000000000000054: 5B                 pop         rbx
  0000000000000055: C3                 ret

??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ (public: __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 51 18        mov         rdx,qword ptr [rcx+18h]
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000011: 76 2C              jbe         000000000000003F
  0000000000000013: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000016: 48 FF C2           inc         rdx
  0000000000000019: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000020: 72 18              jb          000000000000003A
  0000000000000022: 4C 8B 41 F8        mov         r8,qword ptr [rcx-8]
  0000000000000026: 48 83 C2 27        add         rdx,27h
  000000000000002A: 49 2B C8           sub         rcx,r8
  000000000000002D: 48 8D 41 F8        lea         rax,[rcx-8]
  0000000000000031: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000035: 77 21              ja          0000000000000058
  0000000000000037: 49 8B C8           mov         rcx,r8
  000000000000003A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000003F: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  0000000000000047: 48 C7 43 18 0F 00  mov         qword ptr [rbx+18h],0Fh
                    00 00
  000000000000004F: C6 03 00           mov         byte ptr [rbx],0
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5B                 pop         rbx
  0000000000000057: C3                 ret
  0000000000000058: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000005D: CC                 int         3

??1?$codecvt@DDU_Mbstatet@@@std@@MEAA@XZ (protected: virtual __cdecl std::codecvt<char,char,struct _Mbstatet>::~codecvt<char,char,struct _Mbstatet>(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1?$ctype@D@std@@MEAA@XZ (protected: virtual __cdecl std::ctype<char>::~ctype<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 8B 41 20           mov         eax,dword ptr [rcx+20h]
  0000000000000016: 85 C0              test        eax,eax
  0000000000000018: 7E 0B              jle         0000000000000025
  000000000000001A: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  000000000000001E: E8 00 00 00 00     call        free
  0000000000000023: EB 0B              jmp         0000000000000030
  0000000000000025: 79 09              jns         0000000000000030
  0000000000000027: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  000000000000002B: E8 00 00 00 00     call        ??_V@YAXPEAX@Z
  0000000000000030: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000034: E8 00 00 00 00     call        free
  0000000000000039: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000040: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5B                 pop         rbx
  0000000000000048: C3                 ret

??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ (protected: virtual __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::~num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1?$numpunct@D@std@@MEAA@XZ (protected: virtual __cdecl std::numpunct<char>::~numpunct<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7?$numpunct@D@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000017: E8 00 00 00 00     call        free
  000000000000001C: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  0000000000000020: E8 00 00 00 00     call        free
  0000000000000025: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000029: E8 00 00 00 00     call        free
  000000000000002E: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000035: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ (public: __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::~unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >(void)):
  0000000000000000: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000003: 48 85 C9           test        rcx,rcx
  0000000000000006: 74 0B              je          0000000000000013
  0000000000000008: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000B: BA 01 00 00 00     mov         edx,1
  0000000000000010: 48 FF 20           jmp         qword ptr [rax]
  0000000000000013: C3                 ret

??1_Facet_base@std@@UEAA@XZ (public: virtual __cdecl std::_Facet_base::~_Facet_base(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1_Locinfo@std@@QEAA@XZ (public: __cdecl std::_Locinfo::~_Locinfo(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  0000000000000012: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000016: 48 85 C9           test        rcx,rcx
  0000000000000019: 74 05              je          0000000000000020
  000000000000001B: E8 00 00 00 00     call        free
  0000000000000020: 33 FF              xor         edi,edi
  0000000000000022: 48 89 7B 58        mov         qword ptr [rbx+58h],rdi
  0000000000000026: 48 8B 4B 48        mov         rcx,qword ptr [rbx+48h]
  000000000000002A: 48 85 C9           test        rcx,rcx
  000000000000002D: 74 05              je          0000000000000034
  000000000000002F: E8 00 00 00 00     call        free
  0000000000000034: 48 89 7B 48        mov         qword ptr [rbx+48h],rdi
  0000000000000038: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  000000000000003C: 48 85 C9           test        rcx,rcx
  000000000000003F: 74 05              je          0000000000000046
  0000000000000041: E8 00 00 00 00     call        free
  0000000000000046: 48 89 7B 38        mov         qword ptr [rbx+38h],rdi
  000000000000004A: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  000000000000004E: 48 85 C9           test        rcx,rcx
  0000000000000051: 74 05              je          0000000000000058
  0000000000000053: E8 00 00 00 00     call        free
  0000000000000058: 48 89 7B 28        mov         qword ptr [rbx+28h],rdi
  000000000000005C: 48 8B 4B 18        mov         rcx,qword ptr [rbx+18h]
  0000000000000060: 48 85 C9           test        rcx,rcx
  0000000000000063: 74 05              je          000000000000006A
  0000000000000065: E8 00 00 00 00     call        free
  000000000000006A: 48 89 7B 18        mov         qword ptr [rbx+18h],rdi
  000000000000006E: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  0000000000000072: 48 85 C9           test        rcx,rcx
  0000000000000075: 74 05              je          000000000000007C
  0000000000000077: E8 00 00 00 00     call        free
  000000000000007C: 48 89 7B 08        mov         qword ptr [rbx+8],rdi
  0000000000000080: 48 8B CB           mov         rcx,rbx
  0000000000000083: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000088: 48 83 C4 20        add         rsp,20h
  000000000000008C: 5F                 pop         rdi
  000000000000008D: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1bad_array_new_length@std@@UEAA@XZ (public: virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1bad_cast@std@@UEAA@XZ (public: virtual __cdecl std::bad_cast::~bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1ctype_base@std@@UEAA@XZ (public: virtual __cdecl std::ctype_base::~ctype_base(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1error_category@std@@UEAA@XZ (public: virtual __cdecl std::error_category::~error_category(void)):
  0000000000000000: C2 00 00           ret         0

??1exception@std@@UEAA@XZ (public: virtual __cdecl std::exception::~exception(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1facet@locale@std@@MEAA@XZ (protected: virtual __cdecl std::locale::facet::~facet(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1failure@ios_base@std@@UEAA@XZ (public: virtual __cdecl std::ios_base::failure::~failure(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1ios_base@std@@UEAA@XZ (public: virtual __cdecl std::ios_base::~ios_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000000B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000E: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000013: 90                 nop
  0000000000000014: 48 83 C4 28        add         rsp,28h
  0000000000000018: C3                 ret

??1locale@std@@QEAA@XZ (public: __cdecl std::locale::~locale(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 49 08        mov         rcx,qword ptr [rcx+8]
  0000000000000008: 48 85 C9           test        rcx,rcx
  000000000000000B: 74 20              je          000000000000002D
  000000000000000D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000010: FF 50 10           call        qword ptr [rax+10h]
  0000000000000013: 48 85 C0           test        rax,rax
  0000000000000016: 74 15              je          000000000000002D
  0000000000000018: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001B: BA 01 00 00 00     mov         edx,1
  0000000000000020: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: 48 83 C4 28        add         rsp,28h
  000000000000002A: 49 FF E0           jmp         r8
  000000000000002D: 48 83 C4 28        add         rsp,28h
  0000000000000031: C3                 ret

??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 09              jne         000000000000001B
  0000000000000012: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000015: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 13           mov         rdx,qword ptr [rbx]
  000000000000001E: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000021: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000025: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  000000000000002A: 48 85 C9           test        rcx,rcx
  000000000000002D: 74 07              je          0000000000000036
  000000000000002F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000032: FF 50 10           call        qword ptr [rax+10h]
  0000000000000035: 90                 nop
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??1system_error@std@@UEAA@XZ (public: virtual __cdecl std::system_error::~system_error(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 54              push        r12
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000019: 44 8B E2           mov         r12d,edx
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 45 33 F6           xor         r14d,r14d
  0000000000000022: 41 8B FE           mov         edi,r14d
  0000000000000025: 44 89 B4 24 D0 00  mov         dword ptr [rsp+0D0h],r14d
                    00 00
  000000000000002D: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000032: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000035: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000039: 49 8B 4C 08 48     mov         rcx,qword ptr [r8+rcx+48h]
  000000000000003E: 48 85 C9           test        rcx,rcx
  0000000000000041: 74 07              je          000000000000004A
  0000000000000043: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000046: FF 50 08           call        qword ptr [rax+8]
  0000000000000049: 90                 nop
  000000000000004A: 48 8B 0B           mov         rcx,qword ptr [rbx]
  000000000000004D: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000051: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  0000000000000056: 74 04              je          000000000000005C
  0000000000000058: 32 C0              xor         al,al
  000000000000005A: EB 2A              jmp         0000000000000086
  000000000000005C: 48 8B 44 18 50     mov         rax,qword ptr [rax+rbx+50h]
  0000000000000061: 48 85 C0           test        rax,rax
  0000000000000064: 74 1E              je          0000000000000084
  0000000000000066: 48 3B C3           cmp         rax,rbx
  0000000000000069: 74 19              je          0000000000000084
  000000000000006B: 48 8B C8           mov         rcx,rax
  000000000000006E: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000073: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000076: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000007A: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  000000000000007F: 0F 94 C0           sete        al
  0000000000000082: EB 02              jmp         0000000000000086
  0000000000000084: B0 01              mov         al,1
  0000000000000086: 88 44 24 38        mov         byte ptr [rsp+38h],al
  000000000000008A: 84 C0              test        al,al
  000000000000008C: 0F 84 B9 00 00 00  je          000000000000014B
  0000000000000092: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000096: 48 8B 44 18 40     mov         rax,qword ptr [rax+rbx+40h]
  000000000000009B: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  000000000000009F: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  00000000000000A4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000A7: 48 8B CE           mov         rcx,rsi
  00000000000000AA: FF 50 08           call        qword ptr [rax+8]
  00000000000000AD: 90                 nop
  00000000000000AE: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000000B3: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  00000000000000B8: 4C 8B F8           mov         r15,rax
  00000000000000BB: 48 85 F6           test        rsi,rsi
  00000000000000BE: 74 1F              je          00000000000000DF
  00000000000000C0: 48 8B 16           mov         rdx,qword ptr [rsi]
  00000000000000C3: 48 8B CE           mov         rcx,rsi
  00000000000000C6: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000C9: 48 85 C0           test        rax,rax
  00000000000000CC: 74 11              je          00000000000000DF
  00000000000000CE: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000D1: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000D4: BA 01 00 00 00     mov         edx,1
  00000000000000D9: 48 8B C8           mov         rcx,rax
  00000000000000DC: 41 FF D0           call        r8
  00000000000000DF: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000E2: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  00000000000000E6: 4C 03 CB           add         r9,rbx
  00000000000000E9: 41 0F B6 49 58     movzx       ecx,byte ptr [r9+58h]
  00000000000000EE: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  00000000000000F2: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  00000000000000F7: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000FC: 49 8B 07           mov         rax,qword ptr [r15]
  00000000000000FF: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  0000000000000104: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  000000000000010A: 44 89 64 24 28     mov         dword ptr [rsp+28h],r12d
  000000000000010F: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  0000000000000113: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000118: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  000000000000011D: 49 8B CF           mov         rcx,r15
  0000000000000120: FF 50 48           call        qword ptr [rax+48h]
  0000000000000123: BA 04 00 00 00     mov         edx,4
  0000000000000128: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  000000000000012D: 0F 45 FA           cmovne      edi,edx
  0000000000000130: 89 BC 24 D0 00 00  mov         dword ptr [rsp+0D0h],edi
                    00
  0000000000000137: EB 17              jmp         0000000000000150
$LN14:
  0000000000000139: 45 33 F6           xor         r14d,r14d
  000000000000013C: 48 8B 9C 24 C0 00  mov         rbx,qword ptr [rsp+0C0h]
                    00 00
  0000000000000144: 8B BC 24 D0 00 00  mov         edi,dword ptr [rsp+0D0h]
                    00
  000000000000014B: BA 04 00 00 00     mov         edx,4
  0000000000000150: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000153: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000157: 48 03 CB           add         rcx,rbx
  000000000000015A: 0B 79 10           or          edi,dword ptr [rcx+10h]
  000000000000015D: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000162: 41 0F 45 D6        cmovne      edx,r14d
  0000000000000166: 0B D7              or          edx,edi
  0000000000000168: 83 E2 17           and         edx,17h
  000000000000016B: 89 51 10           mov         dword ptr [rcx+10h],edx
  000000000000016E: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000171: 75 45              jne         00000000000001B8
  0000000000000173: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  0000000000000178: 85 C0              test        eax,eax
  000000000000017A: 75 09              jne         0000000000000185
  000000000000017C: 48 8B CB           mov         rcx,rbx
  000000000000017F: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000184: 90                 nop
  0000000000000185: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000188: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000018C: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000191: 48 85 C9           test        rcx,rcx
  0000000000000194: 74 07              je          000000000000019D
  0000000000000196: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000199: FF 50 10           call        qword ptr [rax+10h]
  000000000000019C: 90                 nop
  000000000000019D: 48 8B C3           mov         rax,rbx
  00000000000001A0: 48 8B 9C 24 C8 00  mov         rbx,qword ptr [rsp+0C8h]
                    00 00
  00000000000001A8: 48 81 C4 90 00 00  add         rsp,90h
                    00
  00000000000001AF: 41 5F              pop         r15
  00000000000001B1: 41 5E              pop         r14
  00000000000001B3: 41 5C              pop         r12
  00000000000001B5: 5F                 pop         rdi
  00000000000001B6: 5E                 pop         rsi
  00000000000001B7: C3                 ret
  00000000000001B8: F6 C2 04           test        dl,4
  00000000000001BB: 74 09              je          00000000000001C6
  00000000000001BD: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001C4: EB 15              jmp         00000000000001DB
  00000000000001C6: F6 C2 02           test        dl,2
  00000000000001C9: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000001D0: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000001D7: 48 0F 44 D8        cmove       rbx,rax
  00000000000001DB: BA 01 00 00 00     mov         edx,1
  00000000000001E0: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000001E5: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001EA: 4C 8B C0           mov         r8,rax
  00000000000001ED: 48 8B D3           mov         rdx,rbx
  00000000000001F0: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001F5: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001FA: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000201: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  0000000000000206: E8 00 00 00 00     call        _CxxThrowException
  000000000000020B: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$2 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$6@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$6 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::catch$6):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z$0:
  000000000000000D: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 30        add         rsp,30h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 56              push        r14
  000000000000000A: 41 57              push        r15
  000000000000000C: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  0000000000000013: 0F 29 B4 24 90 00  movaps      xmmword ptr [rsp+90h],xmm6
                    00 00
  000000000000001B: 0F 28 F1           movaps      xmm6,xmm1
  000000000000001E: 48 8B D9           mov         rbx,rcx
  0000000000000021: 45 33 F6           xor         r14d,r14d
  0000000000000024: 41 8B FE           mov         edi,r14d
  0000000000000027: 44 89 B4 24 E0 00  mov         dword ptr [rsp+0E0h],r14d
                    00 00
  000000000000002F: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000034: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000037: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000003B: 48 8B 4C 0A 48     mov         rcx,qword ptr [rdx+rcx+48h]
  0000000000000040: 48 85 C9           test        rcx,rcx
  0000000000000043: 74 07              je          000000000000004C
  0000000000000045: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000048: FF 50 08           call        qword ptr [rax+8]
  000000000000004B: 90                 nop
  000000000000004C: 48 8B 0B           mov         rcx,qword ptr [rbx]
  000000000000004F: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000053: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  0000000000000058: 74 04              je          000000000000005E
  000000000000005A: 32 C0              xor         al,al
  000000000000005C: EB 2A              jmp         0000000000000088
  000000000000005E: 48 8B 44 18 50     mov         rax,qword ptr [rax+rbx+50h]
  0000000000000063: 48 85 C0           test        rax,rax
  0000000000000066: 74 1E              je          0000000000000086
  0000000000000068: 48 3B C3           cmp         rax,rbx
  000000000000006B: 74 19              je          0000000000000086
  000000000000006D: 48 8B C8           mov         rcx,rax
  0000000000000070: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000075: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000078: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000007C: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  0000000000000081: 0F 94 C0           sete        al
  0000000000000084: EB 02              jmp         0000000000000088
  0000000000000086: B0 01              mov         al,1
  0000000000000088: 88 44 24 38        mov         byte ptr [rsp+38h],al
  000000000000008C: 84 C0              test        al,al
  000000000000008E: 0F 84 BB 00 00 00  je          000000000000014F
  0000000000000094: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000098: 48 8B 44 18 40     mov         rax,qword ptr [rax+rbx+40h]
  000000000000009D: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  00000000000000A1: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  00000000000000A6: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000A9: 48 8B CE           mov         rcx,rsi
  00000000000000AC: FF 50 08           call        qword ptr [rax+8]
  00000000000000AF: 90                 nop
  00000000000000B0: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000000B5: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  00000000000000BA: 4C 8B F8           mov         r15,rax
  00000000000000BD: 48 85 F6           test        rsi,rsi
  00000000000000C0: 74 20              je          00000000000000E2
  00000000000000C2: 48 8B 16           mov         rdx,qword ptr [rsi]
  00000000000000C5: 48 8B CE           mov         rcx,rsi
  00000000000000C8: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000CB: 48 85 C0           test        rax,rax
  00000000000000CE: 74 12              je          00000000000000E2
  00000000000000D0: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000D3: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000D6: BA 01 00 00 00     mov         edx,1
  00000000000000DB: 48 8B C8           mov         rcx,rax
  00000000000000DE: 41 FF D0           call        r8
  00000000000000E1: 90                 nop
  00000000000000E2: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000E5: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  00000000000000E9: 4C 03 CB           add         r9,rbx
  00000000000000EC: 41 0F B6 49 58     movzx       ecx,byte ptr [r9+58h]
  00000000000000F1: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  00000000000000F5: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  00000000000000FA: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000FF: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000102: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  0000000000000107: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  000000000000010D: F2 0F 11 74 24 28  movsd       mmword ptr [rsp+28h],xmm6
  0000000000000113: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  0000000000000117: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000011C: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000121: 49 8B CF           mov         rcx,r15
  0000000000000124: FF 50 28           call        qword ptr [rax+28h]
  0000000000000127: BA 04 00 00 00     mov         edx,4
  000000000000012C: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  0000000000000131: 0F 45 FA           cmovne      edi,edx
  0000000000000134: 89 BC 24 E0 00 00  mov         dword ptr [rsp+0E0h],edi
                    00
  000000000000013B: EB 17              jmp         0000000000000154
$LN11:
  000000000000013D: 45 33 F6           xor         r14d,r14d
  0000000000000140: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  0000000000000148: 8B BC 24 E0 00 00  mov         edi,dword ptr [rsp+0E0h]
                    00
  000000000000014F: BA 04 00 00 00     mov         edx,4
  0000000000000154: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000157: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000015B: 48 03 CB           add         rcx,rbx
  000000000000015E: 0B 79 10           or          edi,dword ptr [rcx+10h]
  0000000000000161: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000166: 41 0F 45 D6        cmovne      edx,r14d
  000000000000016A: 0B D7              or          edx,edi
  000000000000016C: 83 E2 17           and         edx,17h
  000000000000016F: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000172: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000175: 75 44              jne         00000000000001BB
  0000000000000177: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000017C: 85 C0              test        eax,eax
  000000000000017E: 75 09              jne         0000000000000189
  0000000000000180: 48 8B CB           mov         rcx,rbx
  0000000000000183: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000188: 90                 nop
  0000000000000189: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000018C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000190: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000195: 48 85 C9           test        rcx,rcx
  0000000000000198: 74 07              je          00000000000001A1
  000000000000019A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000019D: FF 50 10           call        qword ptr [rax+10h]
  00000000000001A0: 90                 nop
  00000000000001A1: 48 8B C3           mov         rax,rbx
  00000000000001A4: 0F 28 B4 24 90 00  movaps      xmm6,xmmword ptr [rsp+90h]
                    00 00
  00000000000001AC: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  00000000000001B3: 41 5F              pop         r15
  00000000000001B5: 41 5E              pop         r14
  00000000000001B7: 5F                 pop         rdi
  00000000000001B8: 5E                 pop         rsi
  00000000000001B9: 5B                 pop         rbx
  00000000000001BA: C3                 ret
  00000000000001BB: F6 C2 04           test        dl,4
  00000000000001BE: 74 09              je          00000000000001C9
  00000000000001C0: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001C7: EB 15              jmp         00000000000001DE
  00000000000001C9: F6 C2 02           test        dl,2
  00000000000001CC: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000001D3: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000001DA: 48 0F 44 D8        cmove       rbx,rax
  00000000000001DE: BA 01 00 00 00     mov         edx,1
  00000000000001E3: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000001E8: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001ED: 4C 8B C0           mov         r8,rax
  00000000000001F0: 48 8B D3           mov         rdx,rbx
  00000000000001F3: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001F8: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001FD: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000204: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  0000000000000209: E8 00 00 00 00     call        _CxxThrowException
  000000000000020E: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$2 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$6@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$6 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::catch$6):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z$0:
  000000000000000D: 48 8B 8D D0 00 00  mov         rcx,qword ptr [rbp+0D0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 30        add         rsp,30h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 54              push        r12
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000019: 4C 8B E2           mov         r12,rdx
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 45 33 F6           xor         r14d,r14d
  0000000000000022: 41 8B FE           mov         edi,r14d
  0000000000000025: 44 89 B4 24 D0 00  mov         dword ptr [rsp+0D0h],r14d
                    00 00
  000000000000002D: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000032: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000035: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000039: 49 8B 4C 08 48     mov         rcx,qword ptr [r8+rcx+48h]
  000000000000003E: 48 85 C9           test        rcx,rcx
  0000000000000041: 74 07              je          000000000000004A
  0000000000000043: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000046: FF 50 08           call        qword ptr [rax+8]
  0000000000000049: 90                 nop
  000000000000004A: 48 8B 0B           mov         rcx,qword ptr [rbx]
  000000000000004D: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000051: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  0000000000000056: 74 04              je          000000000000005C
  0000000000000058: 32 C0              xor         al,al
  000000000000005A: EB 2A              jmp         0000000000000086
  000000000000005C: 48 8B 44 18 50     mov         rax,qword ptr [rax+rbx+50h]
  0000000000000061: 48 85 C0           test        rax,rax
  0000000000000064: 74 1E              je          0000000000000084
  0000000000000066: 48 3B C3           cmp         rax,rbx
  0000000000000069: 74 19              je          0000000000000084
  000000000000006B: 48 8B C8           mov         rcx,rax
  000000000000006E: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000073: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000076: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000007A: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  000000000000007F: 0F 94 C0           sete        al
  0000000000000082: EB 02              jmp         0000000000000086
  0000000000000084: B0 01              mov         al,1
  0000000000000086: 88 44 24 38        mov         byte ptr [rsp+38h],al
  000000000000008A: 84 C0              test        al,al
  000000000000008C: 0F 84 BA 00 00 00  je          000000000000014C
  0000000000000092: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000096: 48 8B 44 18 40     mov         rax,qword ptr [rax+rbx+40h]
  000000000000009B: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  000000000000009F: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  00000000000000A4: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000A7: 48 8B CE           mov         rcx,rsi
  00000000000000AA: FF 50 08           call        qword ptr [rax+8]
  00000000000000AD: 90                 nop
  00000000000000AE: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000000B3: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  00000000000000B8: 4C 8B F8           mov         r15,rax
  00000000000000BB: 48 85 F6           test        rsi,rsi
  00000000000000BE: 74 20              je          00000000000000E0
  00000000000000C0: 48 8B 16           mov         rdx,qword ptr [rsi]
  00000000000000C3: 48 8B CE           mov         rcx,rsi
  00000000000000C6: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000C9: 48 85 C0           test        rax,rax
  00000000000000CC: 74 12              je          00000000000000E0
  00000000000000CE: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000D1: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000D4: BA 01 00 00 00     mov         edx,1
  00000000000000D9: 48 8B C8           mov         rcx,rax
  00000000000000DC: 41 FF D0           call        r8
  00000000000000DF: 90                 nop
  00000000000000E0: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000E3: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  00000000000000E7: 4C 03 CB           add         r9,rbx
  00000000000000EA: 41 0F B6 49 58     movzx       ecx,byte ptr [r9+58h]
  00000000000000EF: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  00000000000000F3: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  00000000000000F8: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000FD: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000100: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  0000000000000105: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  000000000000010B: 4C 89 64 24 28     mov         qword ptr [rsp+28h],r12
  0000000000000110: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  0000000000000114: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000119: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  000000000000011E: 49 8B CF           mov         rcx,r15
  0000000000000121: FF 50 38           call        qword ptr [rax+38h]
  0000000000000124: BA 04 00 00 00     mov         edx,4
  0000000000000129: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  000000000000012E: 0F 45 FA           cmovne      edi,edx
  0000000000000131: 89 BC 24 D0 00 00  mov         dword ptr [rsp+0D0h],edi
                    00
  0000000000000138: EB 17              jmp         0000000000000151
$LN11:
  000000000000013A: 45 33 F6           xor         r14d,r14d
  000000000000013D: 48 8B 9C 24 C0 00  mov         rbx,qword ptr [rsp+0C0h]
                    00 00
  0000000000000145: 8B BC 24 D0 00 00  mov         edi,dword ptr [rsp+0D0h]
                    00
  000000000000014C: BA 04 00 00 00     mov         edx,4
  0000000000000151: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000154: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000158: 48 03 CB           add         rcx,rbx
  000000000000015B: 0B 79 10           or          edi,dword ptr [rcx+10h]
  000000000000015E: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000163: 41 0F 45 D6        cmovne      edx,r14d
  0000000000000167: 0B D7              or          edx,edi
  0000000000000169: 83 E2 17           and         edx,17h
  000000000000016C: 89 51 10           mov         dword ptr [rcx+10h],edx
  000000000000016F: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000172: 75 45              jne         00000000000001B9
  0000000000000174: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  0000000000000179: 85 C0              test        eax,eax
  000000000000017B: 75 09              jne         0000000000000186
  000000000000017D: 48 8B CB           mov         rcx,rbx
  0000000000000180: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000185: 90                 nop
  0000000000000186: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000189: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000018D: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000192: 48 85 C9           test        rcx,rcx
  0000000000000195: 74 07              je          000000000000019E
  0000000000000197: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000019A: FF 50 10           call        qword ptr [rax+10h]
  000000000000019D: 90                 nop
  000000000000019E: 48 8B C3           mov         rax,rbx
  00000000000001A1: 48 8B 9C 24 C8 00  mov         rbx,qword ptr [rsp+0C8h]
                    00 00
  00000000000001A9: 48 81 C4 90 00 00  add         rsp,90h
                    00
  00000000000001B0: 41 5F              pop         r15
  00000000000001B2: 41 5E              pop         r14
  00000000000001B4: 41 5C              pop         r12
  00000000000001B6: 5F                 pop         rdi
  00000000000001B7: 5E                 pop         rsi
  00000000000001B8: C3                 ret
  00000000000001B9: F6 C2 04           test        dl,4
  00000000000001BC: 74 09              je          00000000000001C7
  00000000000001BE: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001C5: EB 15              jmp         00000000000001DC
  00000000000001C7: F6 C2 02           test        dl,2
  00000000000001CA: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000001D1: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000001D8: 48 0F 44 D8        cmove       rbx,rax
  00000000000001DC: BA 01 00 00 00     mov         edx,1
  00000000000001E1: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000001E6: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001EB: 4C 8B C0           mov         r8,rax
  00000000000001EE: 48 8B D3           mov         rdx,rbx
  00000000000001F1: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001F6: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001FB: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000202: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  0000000000000207: E8 00 00 00 00     call        _CxxThrowException
  000000000000020C: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$2@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$2 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$6@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$6 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::catch$6):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z$0:
  000000000000000D: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 30        add         rsp,30h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vbase destructor'(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 8D B9 B0 00 00  lea         rdi,[rcx+0B0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000022: 48 89 84 3A 50 FF  mov         qword ptr [rdx+rdi-0B0h],rax
                    FF FF
  000000000000002A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002D: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000031: 44 8D 82 50 FF FF  lea         r8d,[rdx-0B0h]
                    FF
  0000000000000038: 44 89 84 3A 4C FF  mov         dword ptr [rdx+rdi-0B4h],r8d
                    FF FF
  0000000000000040: 48 8D 8F 60 FF FF  lea         rcx,[rdi-0A0h]
                    FF
  0000000000000047: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  000000000000004C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000004F: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000053: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000005A: 48 89 84 3A 50 FF  mov         qword ptr [rdx+rdi-0B0h],rax
                    FF FF
  0000000000000062: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000065: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000069: 44 8D 42 E8        lea         r8d,[rdx-18h]
  000000000000006D: 44 89 84 3A 4C FF  mov         dword ptr [rdx+rdi-0B4h],r8d
                    FF FF
  0000000000000075: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000007C: 48 89 07           mov         qword ptr [rdi],rax
  000000000000007F: 48 8B CF           mov         rcx,rdi
  0000000000000082: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000087: 90                 nop
  0000000000000088: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000008D: 48 83 C4 20        add         rsp,20h
  0000000000000091: 5F                 pop         rdi
  0000000000000092: C3                 ret

??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ([thunk]:public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int)):
  0000000000000000: 48 63 41 FC        movsxd      rax,dword ptr [rcx-4]
  0000000000000004: 48 2B C8           sub         rcx,rax
  0000000000000007: E9 00 00 00 00     jmp         ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z

??_E?$basic_istream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ([thunk]:public: virtual void * __cdecl std::basic_istream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int)):
  0000000000000000: 48 63 41 FC        movsxd      rax,dword ptr [rcx-4]
  0000000000000004: 48 2B C8           sub         rcx,rax
  0000000000000007: E9 00 00 00 00     jmp         ??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z

??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000014: F6 C3 01           test        bl,1
  0000000000000017: 74 0D              je          0000000000000026
  0000000000000019: BA 98 00 00 00     mov         edx,98h
  000000000000001E: 48 8B CF           mov         rcx,rdi
  0000000000000021: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000026: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002B: 48 8B C7           mov         rax,rdi
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5F                 pop         rdi
  0000000000000033: C3                 ret

??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D B9 50 FF FF  lea         rdi,[rcx-0B0h]
                    FF
  0000000000000011: 8B DA              mov         ebx,edx
  0000000000000013: 48 8B CF           mov         rcx,rdi
  0000000000000016: E8 00 00 00 00     call        ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000001B: F6 C3 01           test        bl,1
  000000000000001E: 74 0D              je          000000000000002D
  0000000000000020: BA 10 01 00 00     mov         edx,110h
  0000000000000025: 48 8B CF           mov         rcx,rdi
  0000000000000028: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000002D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000032: 48 8B C7           mov         rax,rdi
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: C3                 ret

??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_ios<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000016: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000019: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  000000000000001E: 90                 nop
  000000000000001F: F6 C3 01           test        bl,1
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: BA 60 00 00 00     mov         edx,60h
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000031: 48 8B C7           mov         rax,rdi
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5F                 pop         rdi
  000000000000003E: C3                 ret

??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_istream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8D 79 E8        lea         rdi,[rcx-18h]
  0000000000000010: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000013: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000017: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001E: 49 89 44 08 E8     mov         qword ptr [r8+rcx-18h],rax
  0000000000000023: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000026: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000002A: 45 8D 48 E8        lea         r9d,[r8-18h]
  000000000000002E: 45 89 4C 08 E4     mov         dword ptr [r8+rcx-1Ch],r9d
  0000000000000033: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000003A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000003D: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000042: 90                 nop
  0000000000000043: F6 C3 01           test        bl,1
  0000000000000046: 74 0D              je          0000000000000055
  0000000000000048: BA 78 00 00 00     mov         edx,78h
  000000000000004D: 48 8B CF           mov         rcx,rdi
  0000000000000050: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000055: 48 8B C7           mov         rax,rdi
  0000000000000058: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000005D: 48 83 C4 20        add         rsp,20h
  0000000000000061: 5F                 pop         rdi
  0000000000000062: C3                 ret

??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 79 60        mov         rdi,qword ptr [rcx+60h]
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 8B F2              mov         esi,edx
  000000000000001F: 48 8B D9           mov         rbx,rcx
  0000000000000022: 48 85 FF           test        rdi,rdi
  0000000000000025: 74 32              je          0000000000000059
  0000000000000027: 48 8B 4F 08        mov         rcx,qword ptr [rdi+8]
  000000000000002B: 48 85 C9           test        rcx,rcx
  000000000000002E: 74 1C              je          000000000000004C
  0000000000000030: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000033: FF 50 10           call        qword ptr [rax+10h]
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 11              je          000000000000004C
  000000000000003B: 48 8B 10           mov         rdx,qword ptr [rax]
  000000000000003E: 48 8B C8           mov         rcx,rax
  0000000000000041: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000044: BA 01 00 00 00     mov         edx,1
  0000000000000049: 41 FF D0           call        r8
  000000000000004C: BA 10 00 00 00     mov         edx,10h
  0000000000000051: 48 8B CF           mov         rcx,rdi
  0000000000000054: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000059: 40 F6 C6 01        test        sil,1
  000000000000005D: 74 0D              je          000000000000006C
  000000000000005F: BA 68 00 00 00     mov         edx,68h
  0000000000000064: 48 8B CB           mov         rcx,rbx
  0000000000000067: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000006C: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000071: 48 8B C3           mov         rax,rbx
  0000000000000074: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000079: 48 83 C4 20        add         rsp,20h
  000000000000007D: 5F                 pop         rdi
  000000000000007E: C3                 ret

??_G?$codecvt@DDU_Mbstatet@@@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::codecvt<char,char,struct _Mbstatet>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G?$ctype@D@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::ctype<char>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  0000000000000011: 8B FA              mov         edi,edx
  0000000000000013: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000016: 48 8B D9           mov         rbx,rcx
  0000000000000019: 8B 41 20           mov         eax,dword ptr [rcx+20h]
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 7E 0B              jle         000000000000002B
  0000000000000020: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000024: E8 00 00 00 00     call        free
  0000000000000029: EB 0B              jmp         0000000000000036
  000000000000002B: 79 09              jns         0000000000000036
  000000000000002D: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000031: E8 00 00 00 00     call        ??_V@YAXPEAX@Z
  0000000000000036: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  000000000000003A: E8 00 00 00 00     call        free
  000000000000003F: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000046: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000049: 40 F6 C7 01        test        dil,1
  000000000000004D: 74 0D              je          000000000000005C
  000000000000004F: BA 30 00 00 00     mov         edx,30h
  0000000000000054: 48 8B CB           mov         rcx,rbx
  0000000000000057: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000005C: 48 8B C3           mov         rax,rbx
  000000000000005F: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000064: 48 83 C4 20        add         rsp,20h
  0000000000000068: 5F                 pop         rdi
  0000000000000069: C3                 ret

??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G?$numpunct@D@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::numpunct<char>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$numpunct@D@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000001D: E8 00 00 00 00     call        free
  0000000000000022: 48 8B 4F 20        mov         rcx,qword ptr [rdi+20h]
  0000000000000026: E8 00 00 00 00     call        free
  000000000000002B: 48 8B 4F 28        mov         rcx,qword ptr [rdi+28h]
  000000000000002F: E8 00 00 00 00     call        free
  0000000000000034: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000003B: 48 89 07           mov         qword ptr [rdi],rax
  000000000000003E: F6 C3 01           test        bl,1
  0000000000000041: 74 0D              je          0000000000000050
  0000000000000043: BA 30 00 00 00     mov         edx,30h
  0000000000000048: 48 8B CF           mov         rcx,rdi
  000000000000004B: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000050: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000055: 48 8B C7           mov         rax,rdi
  0000000000000058: 48 83 C4 20        add         rsp,20h
  000000000000005C: 5F                 pop         rdi
  000000000000005D: C3                 ret

??_G_Facet_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_Facet_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 08 00 00 00     mov         edx,8
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G_Iostream_error_category2@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_Iostream_error_category2::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: F6 C2 01           test        dl,1
  000000000000000C: 74 0A              je          0000000000000018
  000000000000000E: BA 10 00 00 00     mov         edx,10h
  0000000000000013: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: 48 83 C4 20        add         rsp,20h
  000000000000001F: 5B                 pop         rbx
  0000000000000020: C3                 ret

??_G_System_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_System_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_alloc@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_array_new_length@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_cast@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_cast::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gcodecvt_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::codecvt_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gctype_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ctype_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gexception@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::exception::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gfacet@locale@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::locale::facet::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gfailure@ios_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ios_base::failure::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gios_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ios_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000016: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000019: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  000000000000001E: 90                 nop
  000000000000001F: F6 C3 01           test        bl,1
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: BA 48 00 00 00     mov         edx,48h
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000031: 48 8B C7           mov         rax,rdi
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5F                 pop         rdi
  000000000000003E: C3                 ret

??_Gruntime_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::runtime_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gsystem_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::system_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ (public: virtual class std::_Facet_base * __cdecl std::locale::facet::_Decref(void)):
  0000000000000000: F0 83 41 08 FF     lock add    dword ptr [rcx+8],0FFFFFFFFh
  0000000000000005: B8 00 00 00 00     mov         eax,0
  000000000000000A: 48 0F 44 C1        cmove       rax,rcx
  000000000000000E: C3                 ret

?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ (protected: bool __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Endwrite(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000000D: 48 33 C4           xor         rax,rsp
  0000000000000010: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  0000000000000015: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000001A: 48 8B D9           mov         rbx,rcx
  000000000000001D: 0F 84 AF 00 00 00  je          00000000000000D2
  0000000000000023: 80 79 71 00        cmp         byte ptr [rcx+71h],0
  0000000000000027: 0F 84 A5 00 00 00  je          00000000000000D2
  000000000000002D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000030: BA FF FF FF FF     mov         edx,0FFFFFFFFh
  0000000000000035: 48 89 7C 24 78     mov         qword ptr [rsp+78h],rdi
  000000000000003A: FF 50 18           call        qword ptr [rax+18h]
  000000000000003D: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000040: 0F 84 88 00 00 00  je          00000000000000CE
  0000000000000046: 48 8B 4B 68        mov         rcx,qword ptr [rbx+68h]
  000000000000004A: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  000000000000004F: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000054: 48 8D 53 74        lea         rdx,[rbx+74h]
  0000000000000058: 4C 8D 4C 24 58     lea         r9,[rsp+58h]
  000000000000005D: 4C 8D 44 24 38     lea         r8,[rsp+38h]
  0000000000000062: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000065: FF 50 40           call        qword ptr [rax+40h]
  0000000000000068: 85 C0              test        eax,eax
  000000000000006A: 74 28              je          0000000000000094
  000000000000006C: 83 E8 01           sub         eax,1
  000000000000006F: 74 27              je          0000000000000098
  0000000000000071: 83 F8 02           cmp         eax,2
  0000000000000074: 75 58              jne         00000000000000CE
  0000000000000076: C6 43 71 00        mov         byte ptr [rbx+71h],0
  000000000000007A: B0 01              mov         al,1
  000000000000007C: 48 8B 7C 24 78     mov         rdi,qword ptr [rsp+78h]
  0000000000000081: 48 8B 4C 24 58     mov         rcx,qword ptr [rsp+58h]
  0000000000000086: 48 33 CC           xor         rcx,rsp
  0000000000000089: E8 00 00 00 00     call        __security_check_cookie
  000000000000008E: 48 83 C4 60        add         rsp,60h
  0000000000000092: 5B                 pop         rbx
  0000000000000093: C3                 ret
  0000000000000094: C6 43 71 00        mov         byte ptr [rbx+71h],0
  0000000000000098: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  000000000000009D: 48 8D 44 24 38     lea         rax,[rsp+38h]
  00000000000000A2: 48 2B F8           sub         rdi,rax
  00000000000000A5: 74 1E              je          00000000000000C5
  00000000000000A7: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  00000000000000AE: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  00000000000000B3: 4C 8B C7           mov         r8,rdi
  00000000000000B6: BA 01 00 00 00     mov         edx,1
  00000000000000BB: E8 00 00 00 00     call        fwrite
  00000000000000C0: 48 3B F8           cmp         rdi,rax
  00000000000000C3: 75 09              jne         00000000000000CE
  00000000000000C5: 80 7B 71 00        cmp         byte ptr [rbx+71h],0
  00000000000000C9: 0F 94 C0           sete        al
  00000000000000CC: EB AE              jmp         000000000000007C
  00000000000000CE: 32 C0              xor         al,al
  00000000000000D0: EB AA              jmp         000000000000007C
  00000000000000D2: B0 01              mov         al,1
  00000000000000D4: 48 8B 4C 24 58     mov         rcx,qword ptr [rsp+58h]
  00000000000000D9: 48 33 CC           xor         rcx,rsp
  00000000000000DC: E8 00 00 00 00     call        __security_check_cookie
  00000000000000E1: 48 83 C4 60        add         rsp,60h
  00000000000000E5: 5B                 pop         rbx
  00000000000000E6: C3                 ret

?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 55                 push        rbp
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 8D 6C 24 B9     lea         rbp,[rsp-47h]
  0000000000000019: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F1           mov         rsi,rcx
  0000000000000026: 45 33 FF           xor         r15d,r15d
  0000000000000029: 41 8B DF           mov         ebx,r15d
  000000000000002C: 89 5D 67           mov         dword ptr [rbp+67h],ebx
  000000000000002F: 48 85 C9           test        rcx,rcx
  0000000000000032: 0F 84 35 01 00 00  je          000000000000016D
  0000000000000038: 48 39 19           cmp         qword ptr [rcx],rbx
  000000000000003B: 0F 85 2C 01 00 00  jne         000000000000016D
  0000000000000041: B9 10 00 00 00     mov         ecx,10h
  0000000000000046: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000004B: 48 8B F8           mov         rdi,rax
  000000000000004E: 48 89 45 67        mov         qword ptr [rbp+67h],rax
  0000000000000052: 48 85 C0           test        rax,rax
  0000000000000055: 0F 84 88 00 00 00  je          00000000000000E3
  000000000000005B: 49 8B 46 08        mov         rax,qword ptr [r14+8]
  000000000000005F: 48 85 C0           test        rax,rax
  0000000000000062: 74 0F              je          0000000000000073
  0000000000000064: 48 8B 58 28        mov         rbx,qword ptr [rax+28h]
  0000000000000068: 48 85 DB           test        rbx,rbx
  000000000000006B: 75 0D              jne         000000000000007A
  000000000000006D: 48 8D 58 30        lea         rbx,[rax+30h]
  0000000000000071: EB 07              jmp         000000000000007A
  0000000000000073: 48 8D 1D 00 00 00  lea         rbx,[??_C@_00CNPNBAHC@@]
                    00
  000000000000007A: 33 D2              xor         edx,edx
  000000000000007C: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000080: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  0000000000000085: 90                 nop
  0000000000000086: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  000000000000008A: C6 45 E7 00        mov         byte ptr [rbp-19h],0
  000000000000008E: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  0000000000000092: C6 45 F7 00        mov         byte ptr [rbp-9],0
  0000000000000096: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  000000000000009A: 66 44 89 7D 07     mov         word ptr [rbp+7],r15w
  000000000000009F: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  00000000000000A3: 66 44 89 7D 17     mov         word ptr [rbp+17h],r15w
  00000000000000A8: 4C 89 7D 1F        mov         qword ptr [rbp+1Fh],r15
  00000000000000AC: C6 45 27 00        mov         byte ptr [rbp+27h],0
  00000000000000B0: 4C 89 7D 2F        mov         qword ptr [rbp+2Fh],r15
  00000000000000B4: C6 45 37 00        mov         byte ptr [rbp+37h],0
  00000000000000B8: 48 85 DB           test        rbx,rbx
  00000000000000BB: 0F 84 CE 00 00 00  je          000000000000018F
  00000000000000C1: 48 8B D3           mov         rdx,rbx
  00000000000000C4: 48 8D 4D D7        lea         rcx,[rbp-29h]
  00000000000000C8: E8 00 00 00 00     call        ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z
  00000000000000CD: 90                 nop
  00000000000000CE: BB 01 00 00 00     mov         ebx,1
  00000000000000D3: 44 89 7F 08        mov         dword ptr [rdi+8],r15d
  00000000000000D7: 48 8D 05 00 00 00  lea         rax,[??_7?$codecvt@DDU_Mbstatet@@@std@@6B@]
                    00
  00000000000000DE: 48 89 07           mov         qword ptr [rdi],rax
  00000000000000E1: EB 03              jmp         00000000000000E6
  00000000000000E3: 49 8B FF           mov         rdi,r15
  00000000000000E6: 48 89 3E           mov         qword ptr [rsi],rdi
  00000000000000E9: F6 C3 01           test        bl,1
  00000000000000EC: 74 7F              je          000000000000016D
  00000000000000EE: 48 8D 4D D7        lea         rcx,[rbp-29h]
  00000000000000F2: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  00000000000000F7: 48 8B 4D 2F        mov         rcx,qword ptr [rbp+2Fh]
  00000000000000FB: 48 85 C9           test        rcx,rcx
  00000000000000FE: 74 05              je          0000000000000105
  0000000000000100: E8 00 00 00 00     call        free
  0000000000000105: 4C 89 7D 2F        mov         qword ptr [rbp+2Fh],r15
  0000000000000109: 48 8B 4D 1F        mov         rcx,qword ptr [rbp+1Fh]
  000000000000010D: 48 85 C9           test        rcx,rcx
  0000000000000110: 74 05              je          0000000000000117
  0000000000000112: E8 00 00 00 00     call        free
  0000000000000117: 4C 89 7D 1F        mov         qword ptr [rbp+1Fh],r15
  000000000000011B: 48 8B 4D 0F        mov         rcx,qword ptr [rbp+0Fh]
  000000000000011F: 48 85 C9           test        rcx,rcx
  0000000000000122: 74 05              je          0000000000000129
  0000000000000124: E8 00 00 00 00     call        free
  0000000000000129: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  000000000000012D: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  0000000000000131: 48 85 C9           test        rcx,rcx
  0000000000000134: 74 05              je          000000000000013B
  0000000000000136: E8 00 00 00 00     call        free
  000000000000013B: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  000000000000013F: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  0000000000000143: 48 85 C9           test        rcx,rcx
  0000000000000146: 74 05              je          000000000000014D
  0000000000000148: E8 00 00 00 00     call        free
  000000000000014D: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  0000000000000151: 48 8B 4D DF        mov         rcx,qword ptr [rbp-21h]
  0000000000000155: 48 85 C9           test        rcx,rcx
  0000000000000158: 74 05              je          000000000000015F
  000000000000015A: E8 00 00 00 00     call        free
  000000000000015F: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  0000000000000163: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000167: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  000000000000016C: 90                 nop
  000000000000016D: B8 02 00 00 00     mov         eax,2
  0000000000000172: 4C 8D 9C 24 90 00  lea         r11,[rsp+90h]
                    00 00
  000000000000017A: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  000000000000017E: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000182: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  0000000000000186: 49 8B E3           mov         rsp,r11
  0000000000000189: 41 5F              pop         r15
  000000000000018B: 41 5E              pop         r14
  000000000000018D: 5D                 pop         rbp
  000000000000018E: C3                 ret
  000000000000018F: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@ELKIONDK@bad?5locale?5name@]
                    00
  0000000000000196: E8 00 00 00 00     call        ?_Xruntime_error@std@@YAXPEBD@Z
  000000000000019B: CC                 int         3

?dtor$0@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 10 00 00 00     mov         edx,10h
  000000000000000E: 48 8B 8D B0 00 00  mov         rcx,qword ptr [rbp+0B0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?dtor$2@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$3@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 08        add         rcx,8
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$4@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$4):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$5@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$5):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 28        add         rcx,28h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$6@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$6):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 38        add         rcx,38h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$7@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$7):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 48        add         rcx,48h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$8@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$8):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 58        add         rcx,58h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 55                 push        rbp
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 8D 6C 24 B9     lea         rbp,[rsp-47h]
  0000000000000019: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F1           mov         rsi,rcx
  0000000000000026: 45 33 FF           xor         r15d,r15d
  0000000000000029: 41 8B FF           mov         edi,r15d
  000000000000002C: 44 89 7D 67        mov         dword ptr [rbp+67h],r15d
  0000000000000030: 48 85 C9           test        rcx,rcx
  0000000000000033: 0F 84 4E 01 00 00  je          0000000000000187
  0000000000000039: 48 39 39           cmp         qword ptr [rcx],rdi
  000000000000003C: 0F 85 45 01 00 00  jne         0000000000000187
  0000000000000042: B9 30 00 00 00     mov         ecx,30h
  0000000000000047: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000004C: 48 8B D8           mov         rbx,rax
  000000000000004F: 48 89 45 67        mov         qword ptr [rbp+67h],rax
  0000000000000053: 48 85 C0           test        rax,rax
  0000000000000056: 0F 84 A0 00 00 00  je          00000000000000FC
  000000000000005C: 49 8B 46 08        mov         rax,qword ptr [r14+8]
  0000000000000060: 48 85 C0           test        rax,rax
  0000000000000063: 74 0F              je          0000000000000074
  0000000000000065: 48 8B 78 28        mov         rdi,qword ptr [rax+28h]
  0000000000000069: 48 85 FF           test        rdi,rdi
  000000000000006C: 75 0D              jne         000000000000007B
  000000000000006E: 48 8D 78 30        lea         rdi,[rax+30h]
  0000000000000072: EB 07              jmp         000000000000007B
  0000000000000074: 48 8D 3D 00 00 00  lea         rdi,[??_C@_00CNPNBAHC@@]
                    00
  000000000000007B: 33 D2              xor         edx,edx
  000000000000007D: 48 8D 4D B7        lea         rcx,[rbp-49h]
  0000000000000081: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  0000000000000086: 90                 nop
  0000000000000087: 4C 89 7D BF        mov         qword ptr [rbp-41h],r15
  000000000000008B: C6 45 C7 00        mov         byte ptr [rbp-39h],0
  000000000000008F: 4C 89 7D CF        mov         qword ptr [rbp-31h],r15
  0000000000000093: C6 45 D7 00        mov         byte ptr [rbp-29h],0
  0000000000000097: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  000000000000009B: 66 44 89 7D E7     mov         word ptr [rbp-19h],r15w
  00000000000000A0: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  00000000000000A4: 66 44 89 7D F7     mov         word ptr [rbp-9],r15w
  00000000000000A9: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  00000000000000AD: C6 45 07 00        mov         byte ptr [rbp+7],0
  00000000000000B1: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  00000000000000B5: C6 45 17 00        mov         byte ptr [rbp+17h],0
  00000000000000B9: 48 85 FF           test        rdi,rdi
  00000000000000BC: 0F 84 E7 00 00 00  je          00000000000001A9
  00000000000000C2: 48 8B D7           mov         rdx,rdi
  00000000000000C5: 48 8D 4D B7        lea         rcx,[rbp-49h]
  00000000000000C9: E8 00 00 00 00     call        ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z
  00000000000000CE: 90                 nop
  00000000000000CF: BF 01 00 00 00     mov         edi,1
  00000000000000D4: 44 89 7B 08        mov         dword ptr [rbx+8],r15d
  00000000000000D8: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  00000000000000DF: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000E2: 48 8D 4D 1F        lea         rcx,[rbp+1Fh]
  00000000000000E6: E8 00 00 00 00     call        _Getctype
  00000000000000EB: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000000EE: 0F 11 43 10        movups      xmmword ptr [rbx+10h],xmm0
  00000000000000F2: 0F 10 48 10        movups      xmm1,xmmword ptr [rax+10h]
  00000000000000F6: 0F 11 4B 20        movups      xmmword ptr [rbx+20h],xmm1
  00000000000000FA: EB 03              jmp         00000000000000FF
  00000000000000FC: 49 8B DF           mov         rbx,r15
  00000000000000FF: 48 89 1E           mov         qword ptr [rsi],rbx
  0000000000000102: 40 F6 C7 01        test        dil,1
  0000000000000106: 74 7F              je          0000000000000187
  0000000000000108: 48 8D 4D B7        lea         rcx,[rbp-49h]
  000000000000010C: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  0000000000000111: 48 8B 4D 0F        mov         rcx,qword ptr [rbp+0Fh]
  0000000000000115: 48 85 C9           test        rcx,rcx
  0000000000000118: 74 05              je          000000000000011F
  000000000000011A: E8 00 00 00 00     call        free
  000000000000011F: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  0000000000000123: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  0000000000000127: 48 85 C9           test        rcx,rcx
  000000000000012A: 74 05              je          0000000000000131
  000000000000012C: E8 00 00 00 00     call        free
  0000000000000131: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  0000000000000135: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  0000000000000139: 48 85 C9           test        rcx,rcx
  000000000000013C: 74 05              je          0000000000000143
  000000000000013E: E8 00 00 00 00     call        free
  0000000000000143: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  0000000000000147: 48 8B 4D DF        mov         rcx,qword ptr [rbp-21h]
  000000000000014B: 48 85 C9           test        rcx,rcx
  000000000000014E: 74 05              je          0000000000000155
  0000000000000150: E8 00 00 00 00     call        free
  0000000000000155: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  0000000000000159: 48 8B 4D CF        mov         rcx,qword ptr [rbp-31h]
  000000000000015D: 48 85 C9           test        rcx,rcx
  0000000000000160: 74 05              je          0000000000000167
  0000000000000162: E8 00 00 00 00     call        free
  0000000000000167: 4C 89 7D CF        mov         qword ptr [rbp-31h],r15
  000000000000016B: 48 8B 4D BF        mov         rcx,qword ptr [rbp-41h]
  000000000000016F: 48 85 C9           test        rcx,rcx
  0000000000000172: 74 05              je          0000000000000179
  0000000000000174: E8 00 00 00 00     call        free
  0000000000000179: 4C 89 7D BF        mov         qword ptr [rbp-41h],r15
  000000000000017D: 48 8D 4D B7        lea         rcx,[rbp-49h]
  0000000000000181: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000186: 90                 nop
  0000000000000187: B8 02 00 00 00     mov         eax,2
  000000000000018C: 4C 8D 9C 24 B0 00  lea         r11,[rsp+0B0h]
                    00 00
  0000000000000194: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  0000000000000198: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  000000000000019C: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  00000000000001A0: 49 8B E3           mov         rsp,r11
  00000000000001A3: 41 5F              pop         r15
  00000000000001A5: 41 5E              pop         r14
  00000000000001A7: 5D                 pop         rbp
  00000000000001A8: C3                 ret
  00000000000001A9: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@ELKIONDK@bad?5locale?5name@]
                    00
  00000000000001B0: E8 00 00 00 00     call        ?_Xruntime_error@std@@YAXPEBD@Z
  00000000000001B5: CC                 int         3

?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 30 00 00 00     mov         edx,30h
  000000000000000E: 48 8B 8D D0 00 00  mov         rcx,qword ptr [rbp+0D0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?dtor$2@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$3@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 08        add         rcx,8
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$4@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$4):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$5@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$5):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 28        add         rcx,28h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$6@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$6):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 38        add         rcx,38h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$7@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$7):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 48        add         rcx,48h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$8@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$8):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 58        add         rcx,58h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 55                 push        rbp
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 8D 6C 24 B9     lea         rbp,[rsp-47h]
  0000000000000019: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F1           mov         rsi,rcx
  0000000000000026: 45 33 FF           xor         r15d,r15d
  0000000000000029: 41 8B DF           mov         ebx,r15d
  000000000000002C: 89 5D 67           mov         dword ptr [rbp+67h],ebx
  000000000000002F: 48 85 C9           test        rcx,rcx
  0000000000000032: 0F 84 35 01 00 00  je          000000000000016D
  0000000000000038: 48 39 19           cmp         qword ptr [rcx],rbx
  000000000000003B: 0F 85 2C 01 00 00  jne         000000000000016D
  0000000000000041: B9 10 00 00 00     mov         ecx,10h
  0000000000000046: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000004B: 48 8B F8           mov         rdi,rax
  000000000000004E: 48 89 45 67        mov         qword ptr [rbp+67h],rax
  0000000000000052: 48 85 C0           test        rax,rax
  0000000000000055: 0F 84 88 00 00 00  je          00000000000000E3
  000000000000005B: 49 8B 46 08        mov         rax,qword ptr [r14+8]
  000000000000005F: 48 85 C0           test        rax,rax
  0000000000000062: 74 0F              je          0000000000000073
  0000000000000064: 48 8B 58 28        mov         rbx,qword ptr [rax+28h]
  0000000000000068: 48 85 DB           test        rbx,rbx
  000000000000006B: 75 0D              jne         000000000000007A
  000000000000006D: 48 8D 58 30        lea         rbx,[rax+30h]
  0000000000000071: EB 07              jmp         000000000000007A
  0000000000000073: 48 8D 1D 00 00 00  lea         rbx,[??_C@_00CNPNBAHC@@]
                    00
  000000000000007A: 33 D2              xor         edx,edx
  000000000000007C: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000080: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  0000000000000085: 90                 nop
  0000000000000086: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  000000000000008A: C6 45 E7 00        mov         byte ptr [rbp-19h],0
  000000000000008E: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  0000000000000092: C6 45 F7 00        mov         byte ptr [rbp-9],0
  0000000000000096: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  000000000000009A: 66 44 89 7D 07     mov         word ptr [rbp+7],r15w
  000000000000009F: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  00000000000000A3: 66 44 89 7D 17     mov         word ptr [rbp+17h],r15w
  00000000000000A8: 4C 89 7D 1F        mov         qword ptr [rbp+1Fh],r15
  00000000000000AC: C6 45 27 00        mov         byte ptr [rbp+27h],0
  00000000000000B0: 4C 89 7D 2F        mov         qword ptr [rbp+2Fh],r15
  00000000000000B4: C6 45 37 00        mov         byte ptr [rbp+37h],0
  00000000000000B8: 48 85 DB           test        rbx,rbx
  00000000000000BB: 0F 84 CE 00 00 00  je          000000000000018F
  00000000000000C1: 48 8B D3           mov         rdx,rbx
  00000000000000C4: 48 8D 4D D7        lea         rcx,[rbp-29h]
  00000000000000C8: E8 00 00 00 00     call        ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z
  00000000000000CD: 90                 nop
  00000000000000CE: BB 01 00 00 00     mov         ebx,1
  00000000000000D3: 44 89 7F 08        mov         dword ptr [rdi+8],r15d
  00000000000000D7: 48 8D 05 00 00 00  lea         rax,[??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@]
                    00
  00000000000000DE: 48 89 07           mov         qword ptr [rdi],rax
  00000000000000E1: EB 03              jmp         00000000000000E6
  00000000000000E3: 49 8B FF           mov         rdi,r15
  00000000000000E6: 48 89 3E           mov         qword ptr [rsi],rdi
  00000000000000E9: F6 C3 01           test        bl,1
  00000000000000EC: 74 7F              je          000000000000016D
  00000000000000EE: 48 8D 4D D7        lea         rcx,[rbp-29h]
  00000000000000F2: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  00000000000000F7: 48 8B 4D 2F        mov         rcx,qword ptr [rbp+2Fh]
  00000000000000FB: 48 85 C9           test        rcx,rcx
  00000000000000FE: 74 05              je          0000000000000105
  0000000000000100: E8 00 00 00 00     call        free
  0000000000000105: 4C 89 7D 2F        mov         qword ptr [rbp+2Fh],r15
  0000000000000109: 48 8B 4D 1F        mov         rcx,qword ptr [rbp+1Fh]
  000000000000010D: 48 85 C9           test        rcx,rcx
  0000000000000110: 74 05              je          0000000000000117
  0000000000000112: E8 00 00 00 00     call        free
  0000000000000117: 4C 89 7D 1F        mov         qword ptr [rbp+1Fh],r15
  000000000000011B: 48 8B 4D 0F        mov         rcx,qword ptr [rbp+0Fh]
  000000000000011F: 48 85 C9           test        rcx,rcx
  0000000000000122: 74 05              je          0000000000000129
  0000000000000124: E8 00 00 00 00     call        free
  0000000000000129: 4C 89 7D 0F        mov         qword ptr [rbp+0Fh],r15
  000000000000012D: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  0000000000000131: 48 85 C9           test        rcx,rcx
  0000000000000134: 74 05              je          000000000000013B
  0000000000000136: E8 00 00 00 00     call        free
  000000000000013B: 4C 89 7D FF        mov         qword ptr [rbp-1],r15
  000000000000013F: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  0000000000000143: 48 85 C9           test        rcx,rcx
  0000000000000146: 74 05              je          000000000000014D
  0000000000000148: E8 00 00 00 00     call        free
  000000000000014D: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  0000000000000151: 48 8B 4D DF        mov         rcx,qword ptr [rbp-21h]
  0000000000000155: 48 85 C9           test        rcx,rcx
  0000000000000158: 74 05              je          000000000000015F
  000000000000015A: E8 00 00 00 00     call        free
  000000000000015F: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  0000000000000163: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000167: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  000000000000016C: 90                 nop
  000000000000016D: B8 04 00 00 00     mov         eax,4
  0000000000000172: 4C 8D 9C 24 90 00  lea         r11,[rsp+90h]
                    00 00
  000000000000017A: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  000000000000017E: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000182: 49 8B 7B 38        mov         rdi,qword ptr [r11+38h]
  0000000000000186: 49 8B E3           mov         rsp,r11
  0000000000000189: 41 5F              pop         r15
  000000000000018B: 41 5E              pop         r14
  000000000000018D: 5D                 pop         rbp
  000000000000018E: C3                 ret
  000000000000018F: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@ELKIONDK@bad?5locale?5name@]
                    00
  0000000000000196: E8 00 00 00 00     call        ?_Xruntime_error@std@@YAXPEBD@Z
  000000000000019B: CC                 int         3

?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 10 00 00 00     mov         edx,10h
  000000000000000E: 48 8B 8D B0 00 00  mov         rcx,qword ptr [rbp+0B0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?dtor$2@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$3@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 08        add         rcx,8
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$4@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$4):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$5@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$5):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 28        add         rcx,28h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$6@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$6):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 38        add         rcx,38h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$7@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$7):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 48        add         rcx,48h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$8@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$8):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 58        add         rcx,58h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 56              push        r14
  000000000000000A: 41 57              push        r15
  000000000000000C: 48 8D 6C 24 C9     lea         rbp,[rsp-37h]
  0000000000000011: 48 81 EC C0 00 00  sub         rsp,0C0h
                    00
  0000000000000018: 4C 8B F2           mov         r14,rdx
  000000000000001B: 48 8B F1           mov         rsi,rcx
  000000000000001E: 45 33 FF           xor         r15d,r15d
  0000000000000021: 41 8B FF           mov         edi,r15d
  0000000000000024: 44 89 7D 67        mov         dword ptr [rbp+67h],r15d
  0000000000000028: 48 85 C9           test        rcx,rcx
  000000000000002B: 0F 84 D3 01 00 00  je          0000000000000204
  0000000000000031: 48 39 39           cmp         qword ptr [rcx],rdi
  0000000000000034: 0F 85 CA 01 00 00  jne         0000000000000204
  000000000000003A: B9 30 00 00 00     mov         ecx,30h
  000000000000003F: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000044: 48 8B D8           mov         rbx,rax
  0000000000000047: 48 89 45 7F        mov         qword ptr [rbp+7Fh],rax
  000000000000004B: 48 85 C0           test        rax,rax
  000000000000004E: 0F 84 25 01 00 00  je          0000000000000179
  0000000000000054: 49 8B 46 08        mov         rax,qword ptr [r14+8]
  0000000000000058: 48 85 C0           test        rax,rax
  000000000000005B: 74 0F              je          000000000000006C
  000000000000005D: 48 8B 78 28        mov         rdi,qword ptr [rax+28h]
  0000000000000061: 48 85 FF           test        rdi,rdi
  0000000000000064: 75 0D              jne         0000000000000073
  0000000000000066: 48 8D 78 30        lea         rdi,[rax+30h]
  000000000000006A: EB 07              jmp         0000000000000073
  000000000000006C: 48 8D 3D 00 00 00  lea         rdi,[??_C@_00CNPNBAHC@@]
                    00
  0000000000000073: 33 D2              xor         edx,edx
  0000000000000075: 48 8D 4D 97        lea         rcx,[rbp-69h]
  0000000000000079: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000007E: 90                 nop
  000000000000007F: 4C 89 7D 9F        mov         qword ptr [rbp-61h],r15
  0000000000000083: C6 45 A7 00        mov         byte ptr [rbp-59h],0
  0000000000000087: 4C 89 7D AF        mov         qword ptr [rbp-51h],r15
  000000000000008B: C6 45 B7 00        mov         byte ptr [rbp-49h],0
  000000000000008F: 4C 89 7D BF        mov         qword ptr [rbp-41h],r15
  0000000000000093: 66 44 89 7D C7     mov         word ptr [rbp-39h],r15w
  0000000000000098: 4C 89 7D CF        mov         qword ptr [rbp-31h],r15
  000000000000009C: 66 44 89 7D D7     mov         word ptr [rbp-29h],r15w
  00000000000000A1: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  00000000000000A5: C6 45 E7 00        mov         byte ptr [rbp-19h],0
  00000000000000A9: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  00000000000000AD: C6 45 F7 00        mov         byte ptr [rbp-9],0
  00000000000000B1: 48 85 FF           test        rdi,rdi
  00000000000000B4: 0F 84 66 01 00 00  je          0000000000000220
  00000000000000BA: 48 8B D7           mov         rdx,rdi
  00000000000000BD: 48 8D 4D 97        lea         rcx,[rbp-69h]
  00000000000000C1: E8 00 00 00 00     call        ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z
  00000000000000C6: 90                 nop
  00000000000000C7: BF 01 00 00 00     mov         edi,1
  00000000000000CC: 89 7D 67           mov         dword ptr [rbp+67h],edi
  00000000000000CF: 44 89 7B 08        mov         dword ptr [rbx+8],r15d
  00000000000000D3: 48 8D 05 00 00 00  lea         rax,[??_7?$numpunct@D@std@@6B@]
                    00
  00000000000000DA: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000DD: E8 00 00 00 00     call        localeconv
  00000000000000E2: 48 8D 4D FF        lea         rcx,[rbp-1]
  00000000000000E6: E8 00 00 00 00     call        _Getcvt
  00000000000000EB: 4C 89 7B 10        mov         qword ptr [rbx+10h],r15
  00000000000000EF: 4C 89 7B 20        mov         qword ptr [rbx+20h],r15
  00000000000000F3: 4C 89 7B 28        mov         qword ptr [rbx+28h],r15
  00000000000000F7: 48 89 5D 77        mov         qword ptr [rbp+77h],rbx
  00000000000000FB: 8B D7              mov         edx,edi
  00000000000000FD: 8B CF              mov         ecx,edi
  00000000000000FF: E8 00 00 00 00     call        calloc
  0000000000000104: 48 85 C0           test        rax,rax
  0000000000000107: 0F 84 20 01 00 00  je          000000000000022D
  000000000000010D: C6 00 00           mov         byte ptr [rax],0
  0000000000000110: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000114: 8B D7              mov         edx,edi
  0000000000000116: B9 06 00 00 00     mov         ecx,6
  000000000000011B: E8 00 00 00 00     call        calloc
  0000000000000120: 48 8B C8           mov         rcx,rax
  0000000000000123: 48 85 C0           test        rax,rax
  0000000000000126: 0F 84 07 01 00 00  je          0000000000000233
  000000000000012C: 8B 05 00 00 00 00  mov         eax,dword ptr [??_C@_05LAPONLG@false@]
  0000000000000132: 89 01              mov         dword ptr [rcx],eax
  0000000000000134: 0F B7 05 04 00 00  movzx       eax,word ptr [??_C@_05LAPONLG@false@+4]
                    00
  000000000000013B: 66 89 41 04        mov         word ptr [rcx+4],ax
  000000000000013F: 48 89 4B 20        mov         qword ptr [rbx+20h],rcx
  0000000000000143: 8B D7              mov         edx,edi
  0000000000000145: B9 05 00 00 00     mov         ecx,5
  000000000000014A: E8 00 00 00 00     call        calloc
  000000000000014F: 48 8B C8           mov         rcx,rax
  0000000000000152: 48 85 C0           test        rax,rax
  0000000000000155: 0F 84 DE 00 00 00  je          0000000000000239
  000000000000015B: 8B 05 00 00 00 00  mov         eax,dword ptr [??_C@_04LOAJBDKD@true@]
  0000000000000161: 89 01              mov         dword ptr [rcx],eax
  0000000000000163: 0F B6 05 04 00 00  movzx       eax,byte ptr [??_C@_04LOAJBDKD@true@+4]
                    00
  000000000000016A: 88 41 04           mov         byte ptr [rcx+4],al
  000000000000016D: 48 89 4B 28        mov         qword ptr [rbx+28h],rcx
  0000000000000171: 66 C7 43 18 2E 2C  mov         word ptr [rbx+18h],2C2Eh
  0000000000000177: EB 03              jmp         000000000000017C
  0000000000000179: 49 8B DF           mov         rbx,r15
  000000000000017C: 48 89 1E           mov         qword ptr [rsi],rbx
  000000000000017F: 40 F6 C7 01        test        dil,1
  0000000000000183: 74 7F              je          0000000000000204
  0000000000000185: 48 8D 4D 97        lea         rcx,[rbp-69h]
  0000000000000189: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  000000000000018E: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  0000000000000192: 48 85 C9           test        rcx,rcx
  0000000000000195: 74 05              je          000000000000019C
  0000000000000197: E8 00 00 00 00     call        free
  000000000000019C: 4C 89 7D EF        mov         qword ptr [rbp-11h],r15
  00000000000001A0: 48 8B 4D DF        mov         rcx,qword ptr [rbp-21h]
  00000000000001A4: 48 85 C9           test        rcx,rcx
  00000000000001A7: 74 05              je          00000000000001AE
  00000000000001A9: E8 00 00 00 00     call        free
  00000000000001AE: 4C 89 7D DF        mov         qword ptr [rbp-21h],r15
  00000000000001B2: 48 8B 4D CF        mov         rcx,qword ptr [rbp-31h]
  00000000000001B6: 48 85 C9           test        rcx,rcx
  00000000000001B9: 74 05              je          00000000000001C0
  00000000000001BB: E8 00 00 00 00     call        free
  00000000000001C0: 4C 89 7D CF        mov         qword ptr [rbp-31h],r15
  00000000000001C4: 48 8B 4D BF        mov         rcx,qword ptr [rbp-41h]
  00000000000001C8: 48 85 C9           test        rcx,rcx
  00000000000001CB: 74 05              je          00000000000001D2
  00000000000001CD: E8 00 00 00 00     call        free
  00000000000001D2: 4C 89 7D BF        mov         qword ptr [rbp-41h],r15
  00000000000001D6: 48 8B 4D AF        mov         rcx,qword ptr [rbp-51h]
  00000000000001DA: 48 85 C9           test        rcx,rcx
  00000000000001DD: 74 05              je          00000000000001E4
  00000000000001DF: E8 00 00 00 00     call        free
  00000000000001E4: 4C 89 7D AF        mov         qword ptr [rbp-51h],r15
  00000000000001E8: 48 8B 4D 9F        mov         rcx,qword ptr [rbp-61h]
  00000000000001EC: 48 85 C9           test        rcx,rcx
  00000000000001EF: 74 05              je          00000000000001F6
  00000000000001F1: E8 00 00 00 00     call        free
  00000000000001F6: 4C 89 7D 9F        mov         qword ptr [rbp-61h],r15
  00000000000001FA: 48 8D 4D 97        lea         rcx,[rbp-69h]
  00000000000001FE: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000203: 90                 nop
  0000000000000204: B8 04 00 00 00     mov         eax,4
  0000000000000209: 48 8B 9C 24 F8 00  mov         rbx,qword ptr [rsp+0F8h]
                    00 00
  0000000000000211: 48 81 C4 C0 00 00  add         rsp,0C0h
                    00
  0000000000000218: 41 5F              pop         r15
  000000000000021A: 41 5E              pop         r14
  000000000000021C: 5F                 pop         rdi
  000000000000021D: 5E                 pop         rsi
  000000000000021E: 5D                 pop         rbp
  000000000000021F: C3                 ret
  0000000000000220: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@ELKIONDK@bad?5locale?5name@]
                    00
  0000000000000227: E8 00 00 00 00     call        ?_Xruntime_error@std@@YAXPEBD@Z
  000000000000022C: 90                 nop
  000000000000022D: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  0000000000000232: CC                 int         3
  0000000000000233: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  0000000000000238: CC                 int         3
  0000000000000239: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  000000000000023E: CC                 int         3

?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 30 00 00 00     mov         edx,30h
  000000000000000E: 48 8B 8D 08 01 00  mov         rcx,qword ptr [rbp+108h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$1):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: 8B 85 F0 00 00 00  mov         eax,dword ptr [rbp+0F0h]
  000000000000000F: 83 E0 01           and         eax,1
  0000000000000012: 85 C0              test        eax,eax
  0000000000000014: 74 10              je          0000000000000026
  0000000000000016: 83 A5 F0 00 00 00  and         dword ptr [rbp+0F0h],0FFFFFFFEh
                    FE
  000000000000001D: 48 8D 4D 20        lea         rcx,[rbp+20h]
  0000000000000021: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  0000000000000026: 48 83 C4 20        add         rsp,20h
  000000000000002A: 5D                 pop         rbp
  000000000000002B: C3                 ret

?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$2):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$3@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 08        add         rcx,8
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$4@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$4):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$5@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$5):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 28        add         rcx,28h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$6@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$6):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 38        add         rcx,38h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$7@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$7):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 48        add         rcx,48h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$8@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$8):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: 48 83 C1 58        add         rcx,58h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$9@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$9):
  0000000000000000: 48 8B 8A 08 01 00  mov         rcx,qword ptr [rdx+108h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1facet@locale@std@@MEAA@XZ

?dtor$11@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$11):
  0000000000000000: 48 8D 8A 00 01 00  lea         rcx,[rdx+100h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ

?_Incref@facet@locale@std@@UEAAXXZ (public: virtual void __cdecl std::locale::facet::_Incref(void)):
  0000000000000000: F0 FF 41 08        lock inc    dword ptr [rcx+8]
  0000000000000004: C3                 ret

?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z (protected: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Init(struct _iobuf *,enum std::basic_filebuf<char,struct std::char_traits<char> >::_Initfl)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 57                 push        rdi
  0000000000000004: 48 83 EC 20        sub         rsp,20h
  0000000000000008: C6 41 71 00        mov         byte ptr [rcx+71h],0
  000000000000000C: 4C 8D 51 08        lea         r10,[rcx+8]
  0000000000000010: 4C 89 51 18        mov         qword ptr [rcx+18h],r10
  0000000000000014: 4C 8D 49 28        lea         r9,[rcx+28h]
  0000000000000018: 4C 89 49 38        mov         qword ptr [rcx+38h],r9
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 41 83 F8 01        cmp         r8d,1
  0000000000000023: 48 8B FA           mov         rdi,rdx
  0000000000000026: 4C 8D 41 10        lea         r8,[rcx+10h]
  000000000000002A: 4C 89 41 20        mov         qword ptr [rcx+20h],r8
  000000000000002E: 48 8D 53 48        lea         rdx,[rbx+48h]
  0000000000000032: 48 89 53 50        mov         qword ptr [rbx+50h],rdx
  0000000000000036: 0F 94 C0           sete        al
  0000000000000039: 88 41 7C           mov         byte ptr [rcx+7Ch],al
  000000000000003C: 33 F6              xor         esi,esi
  000000000000003E: 48 83 C1 30        add         rcx,30h
  0000000000000042: 48 8D 43 4C        lea         rax,[rbx+4Ch]
  0000000000000046: 48 89 4B 40        mov         qword ptr [rbx+40h],rcx
  000000000000004A: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  000000000000004E: 49 89 30           mov         qword ptr [r8],rsi
  0000000000000051: 48 89 31           mov         qword ptr [rcx],rsi
  0000000000000054: 89 30              mov         dword ptr [rax],esi
  0000000000000056: 49 89 32           mov         qword ptr [r10],rsi
  0000000000000059: 49 89 31           mov         qword ptr [r9],rsi
  000000000000005C: 89 32              mov         dword ptr [rdx],esi
  000000000000005E: 48 85 FF           test        rdi,rdi
  0000000000000061: 74 4D              je          00000000000000B0
  0000000000000063: 4C 8D 4C 24 58     lea         r9,[rsp+58h]
  0000000000000068: 48 89 74 24 40     mov         qword ptr [rsp+40h],rsi
  000000000000006D: 4C 8D 44 24 48     lea         r8,[rsp+48h]
  0000000000000072: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  0000000000000077: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000007C: 48 89 74 24 58     mov         qword ptr [rsp+58h],rsi
  0000000000000081: 48 8B CF           mov         rcx,rdi
  0000000000000084: E8 00 00 00 00     call        _get_stream_buffer_pointers
  0000000000000089: 48 8B 44 24 40     mov         rax,qword ptr [rsp+40h]
  000000000000008E: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000092: 48 89 43 20        mov         qword ptr [rbx+20h],rax
  0000000000000096: 48 8B 44 24 48     mov         rax,qword ptr [rsp+48h]
  000000000000009B: 48 89 43 38        mov         qword ptr [rbx+38h],rax
  000000000000009F: 48 89 43 40        mov         qword ptr [rbx+40h],rax
  00000000000000A3: 48 8B 44 24 58     mov         rax,qword ptr [rsp+58h]
  00000000000000A8: 48 89 43 50        mov         qword ptr [rbx+50h],rax
  00000000000000AC: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  00000000000000B0: 48 89 BB 80 00 00  mov         qword ptr [rbx+80h],rdi
                    00
  00000000000000B7: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000000BE: 48 89 43 74        mov         qword ptr [rbx+74h],rax
  00000000000000C2: 48 89 73 68        mov         qword ptr [rbx+68h],rsi
  00000000000000C6: 48 83 C4 20        add         rsp,20h
  00000000000000CA: 5F                 pop         rdi
  00000000000000CB: 5E                 pop         rsi
  00000000000000CC: 5B                 pop         rbx
  00000000000000CD: C3                 ret

?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z (protected: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Initcvt(class std::codecvt<char,char,struct _Mbstatet> const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 8B CA           mov         rcx,rdx
  0000000000000013: 48 8B FA           mov         rdi,rdx
  0000000000000016: FF 50 18           call        qword ptr [rax+18h]
  0000000000000019: 45 33 DB           xor         r11d,r11d
  000000000000001C: 84 C0              test        al,al
  000000000000001E: 74 0F              je          000000000000002F
  0000000000000020: 4C 89 5B 68        mov         qword ptr [rbx+68h],r11
  0000000000000024: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000029: 48 83 C4 20        add         rsp,20h
  000000000000002D: 5F                 pop         rdi
  000000000000002E: C3                 ret
  000000000000002F: 48 89 7B 68        mov         qword ptr [rbx+68h],rdi
  0000000000000033: 4C 8D 53 08        lea         r10,[rbx+8]
  0000000000000037: 4C 89 53 18        mov         qword ptr [rbx+18h],r10
  000000000000003B: 4C 8D 43 10        lea         r8,[rbx+10h]
  000000000000003F: 4C 89 43 20        mov         qword ptr [rbx+20h],r8
  0000000000000043: 4C 8D 4B 28        lea         r9,[rbx+28h]
  0000000000000047: 4C 89 4B 38        mov         qword ptr [rbx+38h],r9
  000000000000004B: 48 8D 4B 30        lea         rcx,[rbx+30h]
  000000000000004F: 48 89 4B 40        mov         qword ptr [rbx+40h],rcx
  0000000000000053: 48 8D 53 48        lea         rdx,[rbx+48h]
  0000000000000057: 48 89 53 50        mov         qword ptr [rbx+50h],rdx
  000000000000005B: 48 8D 43 4C        lea         rax,[rbx+4Ch]
  000000000000005F: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  0000000000000063: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000068: 4D 89 18           mov         qword ptr [r8],r11
  000000000000006B: 4C 89 19           mov         qword ptr [rcx],r11
  000000000000006E: 44 89 18           mov         dword ptr [rax],r11d
  0000000000000071: 4D 89 1A           mov         qword ptr [r10],r11
  0000000000000074: 4D 89 19           mov         qword ptr [r9],r11
  0000000000000077: 44 89 1A           mov         dword ptr [rdx],r11d
  000000000000007A: 48 83 C4 20        add         rsp,20h
  000000000000007E: 5F                 pop         rdi
  000000000000007F: C3                 ret

?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z (public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  0000000000000015: 0F B6 F2           movzx       esi,dl
  0000000000000018: 48 8B D9           mov         rbx,rcx
  000000000000001B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000022: 48 03 CB           add         rcx,rbx
  0000000000000025: 8B 51 10           mov         edx,dword ptr [rcx+10h]
  0000000000000028: 85 D2              test        edx,edx
  000000000000002A: 74 2B              je          0000000000000057
  000000000000002C: B8 04 00 00 00     mov         eax,4
  0000000000000031: 45 33 C0           xor         r8d,r8d
  0000000000000034: 4C 39 41 48        cmp         qword ptr [rcx+48h],r8
  0000000000000038: 41 0F 45 C0        cmovne      eax,r8d
  000000000000003C: 0B C2              or          eax,edx
  000000000000003E: 83 E0 15           and         eax,15h
  0000000000000041: 83 C8 02           or          eax,2
  0000000000000044: 89 41 10           mov         dword ptr [rcx+10h],eax
  0000000000000047: 23 41 14           and         eax,dword ptr [rcx+14h]
  000000000000004A: 0F 85 48 01 00 00  jne         0000000000000198
  0000000000000050: 32 C0              xor         al,al
  0000000000000052: E9 2D 01 00 00     jmp         0000000000000184
  0000000000000057: 48 8B 49 50        mov         rcx,qword ptr [rcx+50h]
  000000000000005B: 48 85 C9           test        rcx,rcx
  000000000000005E: 74 05              je          0000000000000065
  0000000000000060: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000065: 40 32 FF           xor         dil,dil
  0000000000000068: 40 88 BC 24 B0 00  mov         byte ptr [rsp+0B0h],dil
                    00 00
  0000000000000070: 40 84 F6           test        sil,sil
  0000000000000073: 0F 85 FC 00 00 00  jne         0000000000000175
  0000000000000079: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000007C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000080: F6 44 19 18 01     test        byte ptr [rcx+rbx+18h],1
  0000000000000085: 0F 84 EA 00 00 00  je          0000000000000175
  000000000000008B: 48 8B 44 19 40     mov         rax,qword ptr [rcx+rbx+40h]
  0000000000000090: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  0000000000000094: 48 89 74 24 28     mov         qword ptr [rsp+28h],rsi
  0000000000000099: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000009C: 48 8B CE           mov         rcx,rsi
  000000000000009F: FF 50 08           call        qword ptr [rax+8]
  00000000000000A2: 90                 nop
  00000000000000A3: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000A8: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000AD: 4C 8B F0           mov         r14,rax
  00000000000000B0: 48 85 F6           test        rsi,rsi
  00000000000000B3: 74 20              je          00000000000000D5
  00000000000000B5: 48 8B 16           mov         rdx,qword ptr [rsi]
  00000000000000B8: 48 8B CE           mov         rcx,rsi
  00000000000000BB: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000BE: 48 85 C0           test        rax,rax
  00000000000000C1: 74 12              je          00000000000000D5
  00000000000000C3: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000C6: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000C9: BA 01 00 00 00     mov         edx,1
  00000000000000CE: 48 8B C8           mov         rcx,rax
  00000000000000D1: 41 FF D0           call        r8
  00000000000000D4: 90                 nop
  00000000000000D5: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000D8: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000DC: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  00000000000000E1: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000E5: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000000E8: 48 85 D2           test        rdx,rdx
  00000000000000EB: 74 0E              je          00000000000000FB
  00000000000000ED: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  00000000000000F1: 83 38 00           cmp         dword ptr [rax],0
  00000000000000F4: 7E 05              jle         00000000000000FB
  00000000000000F6: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000F9: EB 06              jmp         0000000000000101
  00000000000000FB: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000FE: FF 50 30           call        qword ptr [rax+30h]
  0000000000000101: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000104: 75 0D              jne         0000000000000113
  0000000000000106: 40 B7 01           mov         dil,1
  0000000000000109: 40 88 BC 24 B0 00  mov         byte ptr [rsp+0B0h],dil
                    00 00
  0000000000000111: EB 0D              jmp         0000000000000120
  0000000000000113: 0F B6 C8           movzx       ecx,al
  0000000000000116: 49 8B 46 18        mov         rax,qword ptr [r14+18h]
  000000000000011A: F6 04 48 48        test        byte ptr [rax+rcx*2],48h
  000000000000011E: 75 02              jne         0000000000000122
  0000000000000120: EB 23              jmp         0000000000000145
  0000000000000122: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000125: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000129: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  000000000000012E: E8 00 00 00 00     call        ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  0000000000000133: EB CC              jmp         0000000000000101
$LN18:
  0000000000000135: 48 8B 9C 24 A0 00  mov         rbx,qword ptr [rsp+0A0h]
                    00 00
  000000000000013D: 0F B6 BC 24 B0 00  movzx       edi,byte ptr [rsp+0B0h]
                    00 00
  0000000000000145: 40 84 FF           test        dil,dil
  0000000000000148: 74 2B              je          0000000000000175
  000000000000014A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000014D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000151: 48 03 CB           add         rcx,rbx
  0000000000000154: B8 04 00 00 00     mov         eax,4
  0000000000000159: 45 33 C0           xor         r8d,r8d
  000000000000015C: 4C 39 41 48        cmp         qword ptr [rcx+48h],r8
  0000000000000160: 41 0F 45 C0        cmovne      eax,r8d
  0000000000000164: 0B 41 10           or          eax,dword ptr [rcx+10h]
  0000000000000167: 83 E0 14           and         eax,14h
  000000000000016A: 83 C8 03           or          eax,3
  000000000000016D: 89 41 10           mov         dword ptr [rcx+10h],eax
  0000000000000170: 23 41 14           and         eax,dword ptr [rcx+14h]
  0000000000000173: 75 75              jne         00000000000001EA
  0000000000000175: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000178: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000017C: 83 7C 19 10 00     cmp         dword ptr [rcx+rbx+10h],0
  0000000000000181: 0F 94 C0           sete        al
  0000000000000184: 48 8B 9C 24 A8 00  mov         rbx,qword ptr [rsp+0A8h]
                    00 00
  000000000000018C: 48 81 C4 80 00 00  add         rsp,80h
                    00
  0000000000000193: 41 5E              pop         r14
  0000000000000195: 5F                 pop         rdi
  0000000000000196: 5E                 pop         rsi
  0000000000000197: C3                 ret
  0000000000000198: A8 04              test        al,4
  000000000000019A: 74 09              je          00000000000001A5
  000000000000019C: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001A3: EB 14              jmp         00000000000001B9
  00000000000001A5: A8 02              test        al,2
  00000000000001A7: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000001AE: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000001B5: 48 0F 44 D8        cmove       rbx,rax
  00000000000001B9: BA 01 00 00 00     mov         edx,1
  00000000000001BE: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001C3: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001C8: 4C 8B C0           mov         r8,rax
  00000000000001CB: 48 8B D3           mov         rdx,rbx
  00000000000001CE: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001D3: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001D8: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001DF: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001E4: E8 00 00 00 00     call        _CxxThrowException
  00000000000001E9: CC                 int         3
  00000000000001EA: A8 04              test        al,4
  00000000000001EC: 74 09              je          00000000000001F7
  00000000000001EE: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001F5: EB 14              jmp         000000000000020B
  00000000000001F7: A8 02              test        al,2
  00000000000001F9: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000200: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000207: 48 0F 44 D8        cmove       rbx,rax
  000000000000020B: BA 01 00 00 00     mov         edx,1
  0000000000000210: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000215: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000021A: 4C 8B C0           mov         r8,rax
  000000000000021D: 48 8B D3           mov         rdx,rbx
  0000000000000220: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000225: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000022A: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000231: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000236: E8 00 00 00 00     call        _CxxThrowException
  000000000000023B: CC                 int         3

?dtor$0@?0??_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z@4HA (int `public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?catch$2@?0??_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z@4HA (int `public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)'::`1'::catch$2):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,char *,unsigned __int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 F1     lea         rbp,[rsp-0Fh]
  0000000000000015: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000001C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000023: 48 33 C4           xor         rax,rsp
  0000000000000026: 48 89 45 07        mov         qword ptr [rbp+7],rax
  000000000000002A: 4D 8B E1           mov         r12,r9
  000000000000002D: 4C 89 4D AF        mov         qword ptr [rbp-51h],r9
  0000000000000031: 4C 89 45 A7        mov         qword ptr [rbp-59h],r8
  0000000000000035: 48 89 55 BF        mov         qword ptr [rbp-41h],rdx
  0000000000000039: 44 0F B6 7D 6F     movzx       r15d,byte ptr [rbp+6Fh]
  000000000000003E: 48 8B 7D 77        mov         rdi,qword ptr [rbp+77h]
  0000000000000042: 4C 8B 75 7F        mov         r14,qword ptr [rbp+7Fh]
  0000000000000046: 4D 85 F6           test        r14,r14
  0000000000000049: 74 11              je          000000000000005C
  000000000000004B: 0F B6 07           movzx       eax,byte ptr [rdi]
  000000000000004E: 2C 2B              sub         al,2Bh
  0000000000000050: A8 FD              test        al,0FDh
  0000000000000052: 75 08              jne         000000000000005C
  0000000000000054: 41 BD 01 00 00 00  mov         r13d,1
  000000000000005A: EB 03              jmp         000000000000005F
  000000000000005C: 45 33 ED           xor         r13d,r13d
  000000000000005F: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000063: 25 00 0E 00 00     and         eax,0E00h
  0000000000000068: 3D 00 08 00 00     cmp         eax,800h
  000000000000006D: 75 1E              jne         000000000000008D
  000000000000006F: 49 8D 4D 02        lea         rcx,[r13+2]
  0000000000000073: 49 3B CE           cmp         rcx,r14
  0000000000000076: 77 15              ja          000000000000008D
  0000000000000078: 42 80 3C 2F 30     cmp         byte ptr [rdi+r13],30h
  000000000000007D: 75 0E              jne         000000000000008D
  000000000000007F: 42 0F B6 44 2F 01  movzx       eax,byte ptr [rdi+r13+1]
  0000000000000085: 2C 58              sub         al,58h
  0000000000000087: A8 DF              test        al,0DFh
  0000000000000089: 4C 0F 44 E9        cmove       r13,rcx
  000000000000008D: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  0000000000000091: 48 8B 58 08        mov         rbx,qword ptr [rax+8]
  0000000000000095: 48 89 5D 97        mov         qword ptr [rbp-69h],rbx
  0000000000000099: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000009C: 48 8B CB           mov         rcx,rbx
  000000000000009F: FF 50 08           call        qword ptr [rax+8]
  00000000000000A2: 90                 nop
  00000000000000A3: 48 8D 4D 8F        lea         rcx,[rbp-71h]
  00000000000000A7: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000AC: 48 8B F0           mov         rsi,rax
  00000000000000AF: 48 85 DB           test        rbx,rbx
  00000000000000B2: 74 1B              je          00000000000000CF
  00000000000000B4: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000B7: 48 8B CB           mov         rcx,rbx
  00000000000000BA: FF 50 10           call        qword ptr [rax+10h]
  00000000000000BD: 48 8B C8           mov         rcx,rax
  00000000000000C0: 48 85 C0           test        rax,rax
  00000000000000C3: 74 0A              je          00000000000000CF
  00000000000000C5: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000000C8: BA 01 00 00 00     mov         edx,1
  00000000000000CD: FF 10              call        qword ptr [rax]
  00000000000000CF: 45 33 C0           xor         r8d,r8d
  00000000000000D2: 49 8B D6           mov         rdx,r14
  00000000000000D5: 48 8D 4D C7        lea         rcx,[rbp-39h]
  00000000000000D9: E8 00 00 00 00     call        ??0?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@_KD@Z
  00000000000000DE: 90                 nop
  00000000000000DF: 4C 8D 4D C7        lea         r9,[rbp-39h]
  00000000000000E3: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000000E8: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  00000000000000ED: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000F0: 4D 8D 04 3E        lea         r8,[r14+rdi]
  00000000000000F4: 48 8B D7           mov         rdx,rdi
  00000000000000F7: 48 8B CE           mov         rcx,rsi
  00000000000000FA: FF 50 38           call        qword ptr [rax+38h]
  00000000000000FD: 49 8B 44 24 40     mov         rax,qword ptr [r12+40h]
  0000000000000102: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000106: 48 89 7D 97        mov         qword ptr [rbp-69h],rdi
  000000000000010A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000010D: 48 8B CF           mov         rcx,rdi
  0000000000000110: FF 50 08           call        qword ptr [rax+8]
  0000000000000113: 90                 nop
  0000000000000114: 48 8D 4D 8F        lea         rcx,[rbp-71h]
  0000000000000118: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  000000000000011D: 48 8B D8           mov         rbx,rax
  0000000000000120: 48 85 FF           test        rdi,rdi
  0000000000000123: 74 1B              je          0000000000000140
  0000000000000125: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000128: 48 8B CF           mov         rcx,rdi
  000000000000012B: FF 50 10           call        qword ptr [rax+10h]
  000000000000012E: 48 8B C8           mov         rcx,rax
  0000000000000131: 48 85 C0           test        rax,rax
  0000000000000134: 74 0A              je          0000000000000140
  0000000000000136: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000139: BA 01 00 00 00     mov         edx,1
  000000000000013E: FF 10              call        qword ptr [rax]
  0000000000000140: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000143: 48 8D 55 E7        lea         rdx,[rbp-19h]
  0000000000000147: 48 8B CB           mov         rcx,rbx
  000000000000014A: FF 50 28           call        qword ptr [rax+28h]
  000000000000014D: 90                 nop
  000000000000014E: 48 8D 75 E7        lea         rsi,[rbp-19h]
  0000000000000152: 48 83 7D FF 0F     cmp         qword ptr [rbp-1],0Fh
  0000000000000157: 48 0F 47 75 E7     cmova       rsi,qword ptr [rbp-19h]
  000000000000015C: 0F B6 06           movzx       eax,byte ptr [rsi]
  000000000000015F: FE C8              dec         al
  0000000000000161: 3C 7D              cmp         al,7Dh
  0000000000000163: 0F 87 C2 00 00 00  ja          000000000000022B
  0000000000000169: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000016C: 48 8B CB           mov         rcx,rbx
  000000000000016F: FF 50 20           call        qword ptr [rax+20h]
  0000000000000172: 44 0F BE E0        movsx       r12d,al
  0000000000000176: 0F B6 06           movzx       eax,byte ptr [rsi]
  0000000000000179: 3C 7F              cmp         al,7Fh
  000000000000017B: 0F 84 AA 00 00 00  je          000000000000022B
  0000000000000181: 0F B6 5D 9F        movzx       ebx,byte ptr [rbp-61h]
  0000000000000185: 84 C0              test        al,al
  0000000000000187: 0F 8E 9E 00 00 00  jle         000000000000022B
  000000000000018D: 48 0F BE 0E        movsx       rcx,byte ptr [rsi]
  0000000000000191: 49 8B C6           mov         rax,r14
  0000000000000194: 49 2B C5           sub         rax,r13
  0000000000000197: 48 3B C8           cmp         rcx,rax
  000000000000019A: 0F 83 8B 00 00 00  jae         000000000000022B
  00000000000001A0: 4C 2B F1           sub         r14,rcx
  00000000000001A3: 4C 8B 45 D7        mov         r8,qword ptr [rbp-29h]
  00000000000001A7: 4D 3B C6           cmp         r8,r14
  00000000000001AA: 0F 82 A6 04 00 00  jb          0000000000000656
  00000000000001B0: 48 8B 4D DF        mov         rcx,qword ptr [rbp-21h]
  00000000000001B4: 48 8B C1           mov         rax,rcx
  00000000000001B7: 49 2B C0           sub         rax,r8
  00000000000001BA: 48 83 F8 01        cmp         rax,1
  00000000000001BE: 72 32              jb          00000000000001F2
  00000000000001C0: 49 8D 40 01        lea         rax,[r8+1]
  00000000000001C4: 48 89 45 D7        mov         qword ptr [rbp-29h],rax
  00000000000001C8: 48 8D 7D C7        lea         rdi,[rbp-39h]
  00000000000001CC: 48 83 F9 0F        cmp         rcx,0Fh
  00000000000001D0: 48 0F 47 7D C7     cmova       rdi,qword ptr [rbp-39h]
  00000000000001D5: 49 03 FE           add         rdi,r14
  00000000000001D8: 4D 2B C6           sub         r8,r14
  00000000000001DB: 49 FF C0           inc         r8
  00000000000001DE: 48 8D 4F 01        lea         rcx,[rdi+1]
  00000000000001E2: 48 8B D7           mov         rdx,rdi
  00000000000001E5: E8 00 00 00 00     call        memmove
  00000000000001EA: 41 0F B6 C4        movzx       eax,r12b
  00000000000001EE: 88 07              mov         byte ptr [rdi],al
  00000000000001F0: EB 23              jmp         0000000000000215
  00000000000001F2: 44 88 64 24 28     mov         byte ptr [rsp+28h],r12b
  00000000000001F7: 48 C7 44 24 20 01  mov         qword ptr [rsp+20h],1
                    00 00 00
  0000000000000200: 4D 8B CE           mov         r9,r14
  0000000000000203: 44 0F B6 C3        movzx       r8d,bl
  0000000000000207: BA 01 00 00 00     mov         edx,1
  000000000000020C: 48 8D 4D C7        lea         rcx,[rbp-39h]
  0000000000000210: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z
  0000000000000215: 48 8D 46 01        lea         rax,[rsi+1]
  0000000000000219: 80 38 00           cmp         byte ptr [rax],0
  000000000000021C: 48 0F 4F F0        cmovg       rsi,rax
  0000000000000220: 0F B6 06           movzx       eax,byte ptr [rsi]
  0000000000000223: 3C 7F              cmp         al,7Fh
  0000000000000225: 0F 85 5A FF FF FF  jne         0000000000000185
  000000000000022B: 4C 8B 65 D7        mov         r12,qword ptr [rbp-29h]
  000000000000022F: 48 8B 45 AF        mov         rax,qword ptr [rbp-51h]
  0000000000000233: 48 8B 78 28        mov         rdi,qword ptr [rax+28h]
  0000000000000237: 48 85 FF           test        rdi,rdi
  000000000000023A: 7E 0A              jle         0000000000000246
  000000000000023C: 49 3B FC           cmp         rdi,r12
  000000000000023F: 76 05              jbe         0000000000000246
  0000000000000241: 49 2B FC           sub         rdi,r12
  0000000000000244: EB 02              jmp         0000000000000248
  0000000000000246: 33 FF              xor         edi,edi
  0000000000000248: 8B 40 18           mov         eax,dword ptr [rax+18h]
  000000000000024B: 25 C0 01 00 00     and         eax,1C0h
  0000000000000250: 83 F8 40           cmp         eax,40h
  0000000000000253: 0F 84 D0 01 00 00  je          0000000000000429
  0000000000000259: 3D 00 01 00 00     cmp         eax,100h
  000000000000025E: 48 8B 45 A7        mov         rax,qword ptr [rbp-59h]
  0000000000000262: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  0000000000000265: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  0000000000000269: 0F 84 DA 00 00 00  je          0000000000000349
  000000000000026F: 48 85 FF           test        rdi,rdi
  0000000000000272: 74 56              je          00000000000002CA
  0000000000000274: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  0000000000000278: 48 85 DB           test        rbx,rbx
  000000000000027B: 74 3F              je          00000000000002BC
  000000000000027D: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000281: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000285: 74 24              je          00000000000002AB
  0000000000000287: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  000000000000028B: 8B 01              mov         eax,dword ptr [rcx]
  000000000000028D: 85 C0              test        eax,eax
  000000000000028F: 7E 1A              jle         00000000000002AB
  0000000000000291: FF C8              dec         eax
  0000000000000293: 89 01              mov         dword ptr [rcx],eax
  0000000000000295: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000299: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000029C: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000002A0: 48 89 01           mov         qword ptr [rcx],rax
  00000000000002A3: 44 88 3A           mov         byte ptr [rdx],r15b
  00000000000002A6: 41 8B C7           mov         eax,r15d
  00000000000002A9: EB 0C              jmp         00000000000002B7
  00000000000002AB: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000002AE: 41 8B D7           mov         edx,r15d
  00000000000002B1: 48 8B CB           mov         rcx,rbx
  00000000000002B4: FF 50 18           call        qword ptr [rax+18h]
  00000000000002B7: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000002BA: 75 04              jne         00000000000002C0
  00000000000002BC: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  00000000000002C0: 48 83 EF 01        sub         rdi,1
  00000000000002C4: 75 B2              jne         0000000000000278
  00000000000002C6: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  00000000000002CA: 33 FF              xor         edi,edi
  00000000000002CC: 48 8D 75 C7        lea         rsi,[rbp-39h]
  00000000000002D0: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000002D5: 48 0F 47 75 C7     cmova       rsi,qword ptr [rbp-39h]
  00000000000002DA: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  00000000000002DE: 4D 8B F5           mov         r14,r13
  00000000000002E1: 4D 85 ED           test        r13,r13
  00000000000002E4: 0F 84 BF 01 00 00  je          00000000000004A9
  00000000000002EA: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  00000000000002EE: 66 90              nop
  00000000000002F0: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  00000000000002F4: 48 85 DB           test        rbx,rbx
  00000000000002F7: 74 3E              je          0000000000000337
  00000000000002F9: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000002FD: 48 39 38           cmp         qword ptr [rax],rdi
  0000000000000300: 74 24              je          0000000000000326
  0000000000000302: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000306: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000308: 85 C0              test        eax,eax
  000000000000030A: 7E 1A              jle         0000000000000326
  000000000000030C: FF C8              dec         eax
  000000000000030E: 89 01              mov         dword ptr [rcx],eax
  0000000000000310: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000314: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000317: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000031B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000031E: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000321: 41 8B C0           mov         eax,r8d
  0000000000000324: EB 0C              jmp         0000000000000332
  0000000000000326: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000329: 41 8B D0           mov         edx,r8d
  000000000000032C: 48 8B CB           mov         rcx,rbx
  000000000000032F: FF 50 18           call        qword ptr [rax+18h]
  0000000000000332: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000335: 75 04              jne         000000000000033B
  0000000000000337: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  000000000000033B: 48 FF C6           inc         rsi
  000000000000033E: 49 83 EE 01        sub         r14,1
  0000000000000342: 75 AC              jne         00000000000002F0
  0000000000000344: E9 5C 01 00 00     jmp         00000000000004A5
  0000000000000349: 48 8D 75 C7        lea         rsi,[rbp-39h]
  000000000000034D: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000352: 48 0F 47 75 C7     cmova       rsi,qword ptr [rbp-39h]
  0000000000000357: 4D 8B F5           mov         r14,r13
  000000000000035A: 4D 85 ED           test        r13,r13
  000000000000035D: 74 5D              je          00000000000003BC
  000000000000035F: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  0000000000000363: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  0000000000000367: 48 85 DB           test        rbx,rbx
  000000000000036A: 74 3F              je          00000000000003AB
  000000000000036C: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000370: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000374: 74 24              je          000000000000039A
  0000000000000376: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  000000000000037A: 8B 01              mov         eax,dword ptr [rcx]
  000000000000037C: 85 C0              test        eax,eax
  000000000000037E: 7E 1A              jle         000000000000039A
  0000000000000380: FF C8              dec         eax
  0000000000000382: 89 01              mov         dword ptr [rcx],eax
  0000000000000384: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000388: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000038B: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000038F: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000392: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000395: 41 8B C0           mov         eax,r8d
  0000000000000398: EB 0C              jmp         00000000000003A6
  000000000000039A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000039D: 41 8B D0           mov         edx,r8d
  00000000000003A0: 48 8B CB           mov         rcx,rbx
  00000000000003A3: FF 50 18           call        qword ptr [rax+18h]
  00000000000003A6: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000003A9: 75 04              jne         00000000000003AF
  00000000000003AB: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  00000000000003AF: 48 FF C6           inc         rsi
  00000000000003B2: 49 83 EE 01        sub         r14,1
  00000000000003B6: 75 AB              jne         0000000000000363
  00000000000003B8: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  00000000000003BC: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  00000000000003C0: 48 85 FF           test        rdi,rdi
  00000000000003C3: 74 5D              je          0000000000000422
  00000000000003C5: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  00000000000003C9: 0F 1F 80 00 00 00  nop         dword ptr [rax]
                    00
  00000000000003D0: 48 85 DB           test        rbx,rbx
  00000000000003D3: 74 3F              je          0000000000000414
  00000000000003D5: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000003D9: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000003DD: 74 24              je          0000000000000403
  00000000000003DF: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000003E3: 8B 01              mov         eax,dword ptr [rcx]
  00000000000003E5: 85 C0              test        eax,eax
  00000000000003E7: 7E 1A              jle         0000000000000403
  00000000000003E9: FF C8              dec         eax
  00000000000003EB: 89 01              mov         dword ptr [rcx],eax
  00000000000003ED: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000003F1: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000003F4: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000003F8: 48 89 01           mov         qword ptr [rcx],rax
  00000000000003FB: 44 88 3A           mov         byte ptr [rdx],r15b
  00000000000003FE: 41 8B C7           mov         eax,r15d
  0000000000000401: EB 0C              jmp         000000000000040F
  0000000000000403: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000406: 41 8B D7           mov         edx,r15d
  0000000000000409: 48 8B CB           mov         rcx,rbx
  000000000000040C: FF 50 18           call        qword ptr [rax+18h]
  000000000000040F: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000412: 75 04              jne         0000000000000418
  0000000000000414: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  0000000000000418: 48 83 EF 01        sub         rdi,1
  000000000000041C: 75 B2              jne         00000000000003D0
  000000000000041E: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  0000000000000422: 33 FF              xor         edi,edi
  0000000000000424: E9 80 00 00 00     jmp         00000000000004A9
  0000000000000429: 48 8D 75 C7        lea         rsi,[rbp-39h]
  000000000000042D: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000432: 48 0F 47 75 C7     cmova       rsi,qword ptr [rbp-39h]
  0000000000000437: 48 8B 45 A7        mov         rax,qword ptr [rbp-59h]
  000000000000043B: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000043E: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  0000000000000442: 4D 8B F5           mov         r14,r13
  0000000000000445: 4D 85 ED           test        r13,r13
  0000000000000448: 74 63              je          00000000000004AD
  000000000000044A: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  000000000000044E: 66 90              nop
  0000000000000450: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  0000000000000454: 48 85 DB           test        rbx,rbx
  0000000000000457: 74 3F              je          0000000000000498
  0000000000000459: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000045D: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000461: 74 24              je          0000000000000487
  0000000000000463: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000467: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000469: 85 C0              test        eax,eax
  000000000000046B: 7E 1A              jle         0000000000000487
  000000000000046D: FF C8              dec         eax
  000000000000046F: 89 01              mov         dword ptr [rcx],eax
  0000000000000471: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000475: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000478: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000047C: 48 89 01           mov         qword ptr [rcx],rax
  000000000000047F: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000482: 41 8B C0           mov         eax,r8d
  0000000000000485: EB 0C              jmp         0000000000000493
  0000000000000487: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000048A: 41 8B D0           mov         edx,r8d
  000000000000048D: 48 8B CB           mov         rcx,rbx
  0000000000000490: FF 50 18           call        qword ptr [rax+18h]
  0000000000000493: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000496: 75 04              jne         000000000000049C
  0000000000000498: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  000000000000049C: 48 FF C6           inc         rsi
  000000000000049F: 49 83 EE 01        sub         r14,1
  00000000000004A3: 75 AB              jne         0000000000000450
  00000000000004A5: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  00000000000004A9: 48 8B 45 A7        mov         rax,qword ptr [rbp-59h]
  00000000000004AD: 0F 11 00           movups      xmmword ptr [rax],xmm0
  00000000000004B0: 48 8D 75 C7        lea         rsi,[rbp-39h]
  00000000000004B4: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000004B9: 48 0F 47 75 C7     cmova       rsi,qword ptr [rbp-39h]
  00000000000004BE: 49 03 F5           add         rsi,r13
  00000000000004C1: 48 8B 45 A7        mov         rax,qword ptr [rbp-59h]
  00000000000004C5: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000004C8: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  00000000000004CC: 4D 2B E5           sub         r12,r13
  00000000000004CF: 74 5D              je          000000000000052E
  00000000000004D1: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  00000000000004D5: 44 0F B6 06        movzx       r8d,byte ptr [rsi]
  00000000000004D9: 48 85 DB           test        rbx,rbx
  00000000000004DC: 74 3F              je          000000000000051D
  00000000000004DE: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000004E2: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000004E6: 74 24              je          000000000000050C
  00000000000004E8: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000004EC: 8B 01              mov         eax,dword ptr [rcx]
  00000000000004EE: 85 C0              test        eax,eax
  00000000000004F0: 7E 1A              jle         000000000000050C
  00000000000004F2: FF C8              dec         eax
  00000000000004F4: 89 01              mov         dword ptr [rcx],eax
  00000000000004F6: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000004FA: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000004FD: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000501: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000504: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000507: 41 8B C0           mov         eax,r8d
  000000000000050A: EB 0C              jmp         0000000000000518
  000000000000050C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000050F: 41 8B D0           mov         edx,r8d
  0000000000000512: 48 8B CB           mov         rcx,rbx
  0000000000000515: FF 50 18           call        qword ptr [rax+18h]
  0000000000000518: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000051B: 75 04              jne         0000000000000521
  000000000000051D: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  0000000000000521: 48 FF C6           inc         rsi
  0000000000000524: 49 83 EC 01        sub         r12,1
  0000000000000528: 75 AB              jne         00000000000004D5
  000000000000052A: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  000000000000052E: 48 8B 45 AF        mov         rax,qword ptr [rbp-51h]
  0000000000000532: 48 C7 40 28 00 00  mov         qword ptr [rax+28h],0
                    00 00
  000000000000053A: 0F 29 45 8F        movaps      xmmword ptr [rbp-71h],xmm0
  000000000000053E: 48 85 FF           test        rdi,rdi
  0000000000000541: 74 56              je          0000000000000599
  0000000000000543: 48 8B 5D 97        mov         rbx,qword ptr [rbp-69h]
  0000000000000547: 48 85 DB           test        rbx,rbx
  000000000000054A: 74 3F              je          000000000000058B
  000000000000054C: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000550: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000554: 74 24              je          000000000000057A
  0000000000000556: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  000000000000055A: 8B 01              mov         eax,dword ptr [rcx]
  000000000000055C: 85 C0              test        eax,eax
  000000000000055E: 7E 1A              jle         000000000000057A
  0000000000000560: FF C8              dec         eax
  0000000000000562: 89 01              mov         dword ptr [rcx],eax
  0000000000000564: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000568: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000056B: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000056F: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000572: 44 88 3A           mov         byte ptr [rdx],r15b
  0000000000000575: 41 8B C7           mov         eax,r15d
  0000000000000578: EB 0C              jmp         0000000000000586
  000000000000057A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000057D: 41 8B D7           mov         edx,r15d
  0000000000000580: 48 8B CB           mov         rcx,rbx
  0000000000000583: FF 50 18           call        qword ptr [rax+18h]
  0000000000000586: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000589: 75 04              jne         000000000000058F
  000000000000058B: C6 45 8F 01        mov         byte ptr [rbp-71h],1
  000000000000058F: 48 83 EF 01        sub         rdi,1
  0000000000000593: 75 B2              jne         0000000000000547
  0000000000000595: 0F 28 45 8F        movaps      xmm0,xmmword ptr [rbp-71h]
  0000000000000599: 48 8B 5D BF        mov         rbx,qword ptr [rbp-41h]
  000000000000059D: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  00000000000005A0: 48 8B 55 FF        mov         rdx,qword ptr [rbp-1]
  00000000000005A4: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000005A8: 76 31              jbe         00000000000005DB
  00000000000005AA: 48 FF C2           inc         rdx
  00000000000005AD: 48 8B 4D E7        mov         rcx,qword ptr [rbp-19h]
  00000000000005B1: 48 8B C1           mov         rax,rcx
  00000000000005B4: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000005BB: 72 19              jb          00000000000005D6
  00000000000005BD: 48 83 C2 27        add         rdx,27h
  00000000000005C1: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000005C5: 48 2B C1           sub         rax,rcx
  00000000000005C8: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000005CC: 48 83 F8 1F        cmp         rax,1Fh
  00000000000005D0: 0F 87 86 00 00 00  ja          000000000000065C
  00000000000005D6: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000005DB: 48 C7 45 F7 00 00  mov         qword ptr [rbp-9],0
                    00 00
  00000000000005E3: 48 C7 45 FF 0F 00  mov         qword ptr [rbp-1],0Fh
                    00 00
  00000000000005EB: C6 45 E7 00        mov         byte ptr [rbp-19h],0
  00000000000005EF: 48 8B 55 DF        mov         rdx,qword ptr [rbp-21h]
  00000000000005F3: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000005F7: 76 2D              jbe         0000000000000626
  00000000000005F9: 48 FF C2           inc         rdx
  00000000000005FC: 48 8B 4D C7        mov         rcx,qword ptr [rbp-39h]
  0000000000000600: 48 8B C1           mov         rax,rcx
  0000000000000603: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000060A: 72 15              jb          0000000000000621
  000000000000060C: 48 83 C2 27        add         rdx,27h
  0000000000000610: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000614: 48 2B C1           sub         rax,rcx
  0000000000000617: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000061B: 48 83 F8 1F        cmp         rax,1Fh
  000000000000061F: 77 2F              ja          0000000000000650
  0000000000000621: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000626: 48 8B C3           mov         rax,rbx
  0000000000000629: 48 8B 4D 07        mov         rcx,qword ptr [rbp+7]
  000000000000062D: 48 33 CC           xor         rcx,rsp
  0000000000000630: E8 00 00 00 00     call        __security_check_cookie
  0000000000000635: 48 8B 9C 24 F0 00  mov         rbx,qword ptr [rsp+0F0h]
                    00 00
  000000000000063D: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000644: 41 5F              pop         r15
  0000000000000646: 41 5E              pop         r14
  0000000000000648: 41 5D              pop         r13
  000000000000064A: 41 5C              pop         r12
  000000000000064C: 5F                 pop         rdi
  000000000000064D: 5E                 pop         rsi
  000000000000064E: 5D                 pop         rbp
  000000000000064F: C3                 ret
  0000000000000650: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000655: 90                 nop
  0000000000000656: E8 00 00 00 00     call        ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
  000000000000065B: 90                 nop
  000000000000065C: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000661: CC                 int         3

?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 68 00 00  lea         rcx,[rdx+68h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$2):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$3):
  0000000000000000: 48 8D 8A 88 00 00  lea         rcx,[rdx+88h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Lock(void)):
  0000000000000000: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000007: 48 85 C9           test        rcx,rcx
  000000000000000A: 0F 85 00 00 00 00  jne         _lock_file
  0000000000000010: C3                 ret

?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::_Lock(void)):
  0000000000000000: C2 00 00           ret         0

?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z (private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class std::error_code,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 70        sub         rsp,70h
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 44 24 60     mov         qword ptr [rsp+60h],rax
  000000000000001B: 49 8B D8           mov         rbx,r8
  000000000000001E: 48 8B F2           mov         rsi,rdx
  0000000000000021: 48 8B F9           mov         rdi,rcx
  0000000000000024: 48 89 4C 24 38     mov         qword ptr [rsp+38h],rcx
  0000000000000029: 48 89 5C 24 38     mov         qword ptr [rsp+38h],rbx
  000000000000002E: 33 ED              xor         ebp,ebp
  0000000000000030: 49 8B 48 10        mov         rcx,qword ptr [r8+10h]
  0000000000000034: 48 85 C9           test        rcx,rcx
  0000000000000037: 74 54              je          000000000000008D
  0000000000000039: 49 8B 50 18        mov         rdx,qword ptr [r8+18h]
  000000000000003D: 48 8B C2           mov         rax,rdx
  0000000000000040: 48 2B C1           sub         rax,rcx
  0000000000000043: 48 83 F8 02        cmp         rax,2
  0000000000000047: 72 21              jb          000000000000006A
  0000000000000049: 48 8D 41 02        lea         rax,[rcx+2]
  000000000000004D: 49 89 40 10        mov         qword ptr [r8+10h],rax
  0000000000000051: 48 8B C3           mov         rax,rbx
  0000000000000054: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000058: 76 03              jbe         000000000000005D
  000000000000005A: 49 8B 00           mov         rax,qword ptr [r8]
  000000000000005D: 66 C7 04 08 3A 20  mov         word ptr [rax+rcx],203Ah
  0000000000000063: C6 44 08 02 00     mov         byte ptr [rax+rcx+2],0
  0000000000000068: EB 23              jmp         000000000000008D
  000000000000006A: 48 C7 44 24 20 02  mov         qword ptr [rsp+20h],2
                    00 00 00
  0000000000000073: 4C 8D 0D 00 00 00  lea         r9,[??_C@_02LMMGGCAJ@?3?5@]
                    00
  000000000000007A: 44 0F B6 44 24 30  movzx       r8d,byte ptr [rsp+30h]
  0000000000000080: BA 02 00 00 00     mov         edx,2
  0000000000000085: 48 8B CB           mov         rcx,rbx
  0000000000000088: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
  000000000000008D: 48 8B 4E 08        mov         rcx,qword ptr [rsi+8]
  0000000000000091: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000094: 44 8B 06           mov         r8d,dword ptr [rsi]
  0000000000000097: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000009C: FF 50 10           call        qword ptr [rax+10h]
  000000000000009F: 90                 nop
  00000000000000A0: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  00000000000000A5: 48 83 7C 24 58 0F  cmp         qword ptr [rsp+58h],0Fh
  00000000000000AB: 48 0F 47 54 24 40  cmova       rdx,qword ptr [rsp+40h]
  00000000000000B1: 4C 8B 44 24 50     mov         r8,qword ptr [rsp+50h]
  00000000000000B6: 48 8B CB           mov         rcx,rbx
  00000000000000B9: E8 00 00 00 00     call        ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
  00000000000000BE: 90                 nop
  00000000000000BF: 48 8B 54 24 58     mov         rdx,qword ptr [rsp+58h]
  00000000000000C4: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000000C8: 76 32              jbe         00000000000000FC
  00000000000000CA: 48 FF C2           inc         rdx
  00000000000000CD: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  00000000000000D2: 48 8B C1           mov         rax,rcx
  00000000000000D5: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000DC: 72 19              jb          00000000000000F7
  00000000000000DE: 48 83 C2 27        add         rdx,27h
  00000000000000E2: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000000E6: 48 2B C1           sub         rax,rcx
  00000000000000E9: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000000ED: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000F1: 0F 87 95 00 00 00  ja          000000000000018C
  00000000000000F7: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000FC: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000FF: 0F 11 07           movups      xmmword ptr [rdi],xmm0
  0000000000000102: 48 89 6F 10        mov         qword ptr [rdi+10h],rbp
  0000000000000106: 48 89 6F 18        mov         qword ptr [rdi+18h],rbp
  000000000000010A: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  000000000000010D: 0F 11 07           movups      xmmword ptr [rdi],xmm0
  0000000000000110: 0F 10 4B 10        movups      xmm1,xmmword ptr [rbx+10h]
  0000000000000114: 0F 11 4F 10        movups      xmmword ptr [rdi+10h],xmm1
  0000000000000118: 48 89 6B 10        mov         qword ptr [rbx+10h],rbp
  000000000000011C: 48 C7 43 18 0F 00  mov         qword ptr [rbx+18h],0Fh
                    00 00
  0000000000000124: C6 03 00           mov         byte ptr [rbx],0
  0000000000000127: 48 8B 53 18        mov         rdx,qword ptr [rbx+18h]
  000000000000012B: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000012F: 76 2C              jbe         000000000000015D
  0000000000000131: 48 FF C2           inc         rdx
  0000000000000134: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000137: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000013E: 72 18              jb          0000000000000158
  0000000000000140: 48 83 C2 27        add         rdx,27h
  0000000000000144: 4C 8B 41 F8        mov         r8,qword ptr [rcx-8]
  0000000000000148: 49 2B C8           sub         rcx,r8
  000000000000014B: 48 8D 41 F8        lea         rax,[rcx-8]
  000000000000014F: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000153: 77 3D              ja          0000000000000192
  0000000000000155: 49 8B C8           mov         rcx,r8
  0000000000000158: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000015D: 48 89 6B 10        mov         qword ptr [rbx+10h],rbp
  0000000000000161: 48 C7 43 18 0F 00  mov         qword ptr [rbx+18h],0Fh
                    00 00
  0000000000000169: C6 03 00           mov         byte ptr [rbx],0
  000000000000016C: 48 8B C7           mov         rax,rdi
  000000000000016F: 48 8B 4C 24 60     mov         rcx,qword ptr [rsp+60h]
  0000000000000174: 48 33 CC           xor         rcx,rsp
  0000000000000177: E8 00 00 00 00     call        __security_check_cookie
  000000000000017C: 48 8B 9C 24 A8 00  mov         rbx,qword ptr [rsp+0A8h]
                    00 00
  0000000000000184: 48 83 C4 70        add         rsp,70h
  0000000000000188: 5F                 pop         rdi
  0000000000000189: 5E                 pop         rsi
  000000000000018A: 5D                 pop         rbp
  000000000000018B: C3                 ret
  000000000000018C: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000191: 90                 nop
  0000000000000192: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000197: CC                 int         3

?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA (int `private: static class _System_error::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class _System_error::error_code,class _System_error::std)'::`1'::dtor$0):
  0000000000000000: 48 8B 8A 38 00 00  mov         rcx,qword ptr [rdx+38h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA (int `private: static class _System_error::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class _System_error::error_code,class _System_error::std)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000C: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000010: 83 7C 0A 10 00     cmp         dword ptr [rdx+rcx+10h],0
  0000000000000015: 75 32              jne         $LN10
  0000000000000017: F6 44 0A 18 02     test        byte ptr [rdx+rcx+18h],2
  000000000000001C: 74 2B              je          $LN10
  000000000000001E: 48 8B 4C 0A 48     mov         rcx,qword ptr [rdx+rcx+48h]
  0000000000000023: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000026: FF 50 68           call        qword ptr [rax+68h]
  0000000000000029: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000002C: 75 1B              jne         $LN10
  000000000000002E: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000031: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000035: 8B 44 19 10        mov         eax,dword ptr [rcx+rbx+10h]
  0000000000000039: 83 E0 13           and         eax,13h
  000000000000003C: 83 C8 04           or          eax,4
  000000000000003F: 89 44 19 10        mov         dword ptr [rcx+rbx+10h],eax
  0000000000000043: 23 44 19 14        and         eax,dword ptr [rcx+rbx+14h]
  0000000000000047: 75 06              jne         000000000000004F
$LN10:
  0000000000000049: 48 83 C4 60        add         rsp,60h
  000000000000004D: 5B                 pop         rbx
  000000000000004E: C3                 ret
  000000000000004F: A8 04              test        al,4
  0000000000000051: 74 09              je          000000000000005C
  0000000000000053: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000005A: EB 14              jmp         0000000000000070
  000000000000005C: A8 02              test        al,2
  000000000000005E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000065: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000006C: 48 0F 44 D8        cmove       rbx,rax
  0000000000000070: BA 01 00 00 00     mov         edx,1
  0000000000000075: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000007A: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000007F: 4C 8B C0           mov         r8,rax
  0000000000000082: 48 8B D3           mov         rdx,rbx
  0000000000000085: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000008A: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000008F: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000096: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000009B: E8 00 00 00 00     call        _CxxThrowException
  00000000000000A0: CC                 int         3
$LN31:
  00000000000000A1: CC                 int         3

?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA (int `public: void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void)'::`1'::catch$0):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:
  000000000000000D: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5D                 pop         rbp
  000000000000001C: C3                 ret
  000000000000001D: CC                 int         3

?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Rep(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,char,unsigned __int64)const ):
  0000000000000000: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000000F: 41 56              push        r14
  0000000000000011: 48 83 EC 20        sub         rsp,20h
  0000000000000015: 48 8B 7C 24 50     mov         rdi,qword ptr [rsp+50h]
  000000000000001A: 49 8B F0           mov         rsi,r8
  000000000000001D: 41 0F B6 E9        movzx       ebp,r9b
  0000000000000021: 4C 8B F2           mov         r14,rdx
  0000000000000024: 48 85 FF           test        rdi,rdi
  0000000000000027: 74 59              je          0000000000000082
  0000000000000029: 48 89 5C 24 30     mov         qword ptr [rsp+30h],rbx
  000000000000002E: 49 8B 58 08        mov         rbx,qword ptr [r8+8]
  0000000000000032: 48 85 DB           test        rbx,rbx
  0000000000000035: 74 3D              je          0000000000000074
  0000000000000037: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000003B: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000003F: 74 23              je          0000000000000064
  0000000000000041: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000045: 8B 01              mov         eax,dword ptr [rcx]
  0000000000000047: 85 C0              test        eax,eax
  0000000000000049: 7E 19              jle         0000000000000064
  000000000000004B: FF C8              dec         eax
  000000000000004D: 89 01              mov         dword ptr [rcx],eax
  000000000000004F: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000053: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000056: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000005A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000005D: 8B C5              mov         eax,ebp
  000000000000005F: 40 88 2A           mov         byte ptr [rdx],bpl
  0000000000000062: EB 0B              jmp         000000000000006F
  0000000000000064: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000067: 8B D5              mov         edx,ebp
  0000000000000069: 48 8B CB           mov         rcx,rbx
  000000000000006C: FF 50 18           call        qword ptr [rax+18h]
  000000000000006F: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000072: 75 03              jne         0000000000000077
  0000000000000074: C6 06 01           mov         byte ptr [rsi],1
  0000000000000077: 48 83 EF 01        sub         rdi,1
  000000000000007B: 75 B5              jne         0000000000000032
  000000000000007D: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000082: 0F 10 06           movups      xmm0,xmmword ptr [rsi]
  0000000000000085: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000008A: 49 8B C6           mov         rax,r14
  000000000000008D: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000092: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000097: 41 0F 11 06        movups      xmmword ptr [r14],xmm0
  000000000000009B: 48 83 C4 20        add         rsp,20h
  000000000000009F: 41 5E              pop         r14
  00000000000000A1: C3                 ret

?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ (private: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Reset_back(void)):
  0000000000000000: 4C 8B 49 18        mov         r9,qword ptr [rcx+18h]
  0000000000000004: 48 8D 41 70        lea         rax,[rcx+70h]
  0000000000000008: 49 39 01           cmp         qword ptr [r9],rax
  000000000000000B: 75 22              jne         000000000000002F
  000000000000000D: 48 8B 91 88 00 00  mov         rdx,qword ptr [rcx+0000000000000088h]
                    00
  0000000000000014: 4C 8B 81 90 00 00  mov         r8,qword ptr [rcx+0000000000000090h]
                    00
  000000000000001B: 49 89 11           mov         qword ptr [r9],rdx
  000000000000001E: 44 2B C2           sub         r8d,edx
  0000000000000021: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000025: 48 89 10           mov         qword ptr [rax],rdx
  0000000000000028: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  000000000000002C: 44 89 00           mov         dword ptr [rax],r8d
  000000000000002F: C3                 ret

?_Throw_bad_array_new_length@std@@YAXXZ (void __cdecl std::_Throw_bad_array_new_length(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_array_new_length@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI3?AVbad_array_new_length@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Throw_bad_cast@std@@YAXXZ (void __cdecl std::_Throw_bad_cast(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_cast@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI2?AVbad_cast@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Unlock(void)):
  0000000000000000: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000007: 48 85 C9           test        rcx,rcx
  000000000000000A: 0F 85 00 00 00 00  jne         _unlock_file
  0000000000000010: C3                 ret

?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::_Unlock(void)):
  0000000000000000: C2 00 00           ret         0

?_Xlen_string@std@@YAXXZ (void __cdecl std::_Xlen_string(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@JFNIOLAK@string?5too?5long@]
                    00
  000000000000000B: E8 00 00 00 00     call        ?_Xlength_error@std@@YAXPEBD@Z
  0000000000000010: CC                 int         3

?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ (public: static void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Xran(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@CFPLBAOH@invalid?5string?5position@]
                    00
  000000000000000B: E8 00 00 00 00     call        ?_Xout_of_range@std@@YAXPEBD@Z
  0000000000000010: CC                 int         3

?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z (void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 55              push        r13
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 8D AC 24 60 FF  lea         rbp,[rsp-0A0h]
                    FF FF
  000000000000001A: 48 81 EC A0 01 00  sub         rsp,1A0h
                    00
  0000000000000021: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000028: 48 33 C4           xor         rax,rsp
  000000000000002B: 48 89 85 98 00 00  mov         qword ptr [rbp+98h],rax
                    00
  0000000000000032: 48 8B FA           mov         rdi,rdx
  0000000000000035: 48 8B D9           mov         rbx,rcx
  0000000000000038: 48 8B D1           mov         rdx,rcx
  000000000000003B: 48 83 79 18 0F     cmp         qword ptr [rcx+18h],0Fh
  0000000000000040: 76 03              jbe         0000000000000045
  0000000000000042: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000045: C7 44 24 20 01 00  mov         dword ptr [rsp+20h],1
                    00 00
  000000000000004D: 41 B9 40 00 00 00  mov         r9d,40h
  0000000000000053: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000059: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000005E: E8 00 00 00 00     call        ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
  0000000000000063: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000068: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000006C: 4C 8D 2D 00 00 00  lea         r13,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000073: 4C 89 6C 0C 30     mov         qword ptr [rsp+rcx+30h],r13
  0000000000000078: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  000000000000007D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000081: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  0000000000000087: 89 54 0C 2C        mov         dword ptr [rsp+rcx+2Ch],edx
  000000000000008B: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000090: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000094: F6 44 04 40 06     test        byte ptr [rsp+rax+40h],6
  0000000000000099: 74 58              je          00000000000000F3
  000000000000009B: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BP@CLEANGEK@Failed?5to?5open?5assembly?5file?3?5@]
                    00
  00000000000000A2: 48 8D 0D 00 00 00  lea         rcx,[?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000000A9: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000000AE: 4C 8B 43 10        mov         r8,qword ptr [rbx+10h]
  00000000000000B2: 48 83 7B 18 0F     cmp         qword ptr [rbx+18h],0Fh
  00000000000000B7: 76 03              jbe         00000000000000BC
  00000000000000B9: 48 8B 1B           mov         rbx,qword ptr [rbx]
  00000000000000BC: 48 8B D3           mov         rdx,rbx
  00000000000000BF: 48 8B C8           mov         rcx,rax
  00000000000000C2: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000000C7: 48 8B D8           mov         rbx,rax
  00000000000000CA: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000CD: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000000D1: 48 03 C8           add         rcx,rax
  00000000000000D4: B2 0A              mov         dl,0Ah
  00000000000000D6: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000000DB: 0F B6 D0           movzx       edx,al
  00000000000000DE: 48 8B CB           mov         rcx,rbx
  00000000000000E1: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000000E6: 48 8B CB           mov         rcx,rbx
  00000000000000E9: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000000EE: E9 D8 03 00 00     jmp         00000000000004CB
  00000000000000F3: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000F6: 0F 11 45 78        movups      xmmword ptr [rbp+78h],xmm0
  00000000000000FA: 48 C7 85 88 00 00  mov         qword ptr [rbp+88h],0
                    00 00 00 00 00
  0000000000000105: 48 C7 85 90 00 00  mov         qword ptr [rbp+90h],0Fh
                    00 0F 00 00 00
  0000000000000110: C6 45 78 00        mov         byte ptr [rbp+78h],0
  0000000000000114: 45 32 F6           xor         r14b,r14b
  0000000000000117: 45 33 FF           xor         r15d,r15d
  000000000000011A: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000011E: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000123: 48 03 C8           add         rcx,rax
  0000000000000126: B2 0A              mov         dl,0Ah
  0000000000000128: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  000000000000012D: 44 0F B6 C0        movzx       r8d,al
  0000000000000131: 48 8D 55 78        lea         rdx,[rbp+78h]
  0000000000000135: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000013A: E8 00 00 00 00     call        ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  000000000000013F: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000142: 48 63 51 04        movsxd      rdx,dword ptr [rcx+4]
  0000000000000146: F6 44 02 10 06     test        byte ptr [rdx+rax+10h],6
  000000000000014B: 0F 85 33 02 00 00  jne         0000000000000384
  0000000000000151: 45 84 F6           test        r14b,r14b
  0000000000000154: 0F 85 C6 00 00 00  jne         0000000000000220
  000000000000015A: 4C 8B 4F 10        mov         r9,qword ptr [rdi+10h]
  000000000000015E: 4C 8B C7           mov         r8,rdi
  0000000000000161: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  0000000000000166: 76 03              jbe         000000000000016B
  0000000000000168: 4C 8B 07           mov         r8,qword ptr [rdi]
  000000000000016B: 48 8D 75 78        lea         rsi,[rbp+78h]
  000000000000016F: 48 83 BD 90 00 00  cmp         qword ptr [rbp+90h],0Fh
                    00 0F
  0000000000000177: 48 0F 47 75 78     cmova       rsi,qword ptr [rbp+78h]
  000000000000017C: 48 8B 85 88 00 00  mov         rax,qword ptr [rbp+88h]
                    00
  0000000000000183: 4C 3B C8           cmp         r9,rax
  0000000000000186: 0F 87 BC 01 00 00  ja          0000000000000348
  000000000000018C: 4D 85 C9           test        r9,r9
  000000000000018F: 74 25              je          00000000000001B6
  0000000000000191: 48 8D 1C 30        lea         rbx,[rax+rsi]
  0000000000000195: 48 8B D3           mov         rdx,rbx
  0000000000000198: 48 8B CE           mov         rcx,rsi
  000000000000019B: E8 00 00 00 00     call        __std_search_1
  00000000000001A0: 48 3B C3           cmp         rax,rbx
  00000000000001A3: 0F 84 9F 01 00 00  je          0000000000000348
  00000000000001A9: 48 2B C6           sub         rax,rsi
  00000000000001AC: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000001B0: 0F 84 92 01 00 00  je          0000000000000348
  00000000000001B6: 41 B6 01           mov         r14b,1
  00000000000001B9: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BD@ONCPFNCC@?6?9?9?9?5Assembly?5for?5@]
                    00
  00000000000001C0: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000001C7: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000001CC: 48 8B D7           mov         rdx,rdi
  00000000000001CF: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  00000000000001D4: 76 03              jbe         00000000000001D9
  00000000000001D6: 48 8B 17           mov         rdx,qword ptr [rdi]
  00000000000001D9: 4C 8B 47 10        mov         r8,qword ptr [rdi+10h]
  00000000000001DD: 48 8B C8           mov         rcx,rax
  00000000000001E0: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000001E5: 48 8D 15 00 00 00  lea         rdx,[??_C@_06DNEENEDP@?$CI?$CJ?5?9?9?9@]
                    00
  00000000000001EC: 48 8B C8           mov         rcx,rax
  00000000000001EF: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000001F4: 48 8B D8           mov         rbx,rax
  00000000000001F7: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000001FA: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000001FE: 48 03 C8           add         rcx,rax
  0000000000000201: B2 0A              mov         dl,0Ah
  0000000000000203: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000208: 0F B6 D0           movzx       edx,al
  000000000000020B: 48 8B CB           mov         rcx,rbx
  000000000000020E: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  0000000000000213: 48 8B CB           mov         rcx,rbx
  0000000000000216: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  000000000000021B: E9 28 01 00 00     jmp         0000000000000348
  0000000000000220: 4C 8B 85 88 00 00  mov         r8,qword ptr [rbp+88h]
                    00
  0000000000000227: 4D 85 C0           test        r8,r8
  000000000000022A: 0F 84 54 01 00 00  je          0000000000000384
  0000000000000230: 48 8D 75 78        lea         rsi,[rbp+78h]
  0000000000000234: 48 8B 4D 78        mov         rcx,qword ptr [rbp+78h]
  0000000000000238: 4C 8B 8D 90 00 00  mov         r9,qword ptr [rbp+90h]
                    00
  000000000000023F: 49 83 F9 0F        cmp         r9,0Fh
  0000000000000243: 48 0F 47 F1        cmova       rsi,rcx
  0000000000000247: 49 83 F8 04        cmp         r8,4
  000000000000024B: 72 40              jb          000000000000028D
  000000000000024D: 49 8D 1C 30        lea         rbx,[r8+rsi]
  0000000000000251: 41 B9 04 00 00 00  mov         r9d,4
  0000000000000257: 4C 8D 05 00 00 00  lea         r8,[??_C@_04BPCNIIJN@ENDP@]
                    00
  000000000000025E: 48 8B D3           mov         rdx,rbx
  0000000000000261: 48 8B CE           mov         rcx,rsi
  0000000000000264: E8 00 00 00 00     call        __std_search_1
  0000000000000269: 48 3B C3           cmp         rax,rbx
  000000000000026C: 74 0D              je          000000000000027B
  000000000000026E: 48 2B C6           sub         rax,rsi
  0000000000000271: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000275: 0F 85 09 01 00 00  jne         0000000000000384
  000000000000027B: 4C 8B 8D 90 00 00  mov         r9,qword ptr [rbp+90h]
                    00
  0000000000000282: 4C 8B 85 88 00 00  mov         r8,qword ptr [rbp+88h]
                    00
  0000000000000289: 48 8B 4D 78        mov         rcx,qword ptr [rbp+78h]
  000000000000028D: 48 8D 75 78        lea         rsi,[rbp+78h]
  0000000000000291: 49 83 F9 0F        cmp         r9,0Fh
  0000000000000295: 48 0F 47 F1        cmova       rsi,rcx
  0000000000000299: 49 83 F8 0C        cmp         r8,0Ch
  000000000000029D: 72 40              jb          00000000000002DF
  000000000000029F: 49 8D 1C 30        lea         rbx,[r8+rsi]
  00000000000002A3: 41 B9 0C 00 00 00  mov         r9d,0Ch
  00000000000002A9: 4C 8D 05 00 00 00  lea         r8,[??_C@_0N@DLPPFFCM@?4cfi_endproc@]
                    00
  00000000000002B0: 48 8B D3           mov         rdx,rbx
  00000000000002B3: 48 8B CE           mov         rcx,rsi
  00000000000002B6: E8 00 00 00 00     call        __std_search_1
  00000000000002BB: 48 3B C3           cmp         rax,rbx
  00000000000002BE: 74 0D              je          00000000000002CD
  00000000000002C0: 48 2B C6           sub         rax,rsi
  00000000000002C3: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000002C7: 0F 85 B7 00 00 00  jne         0000000000000384
  00000000000002CD: 4C 8B 8D 90 00 00  mov         r9,qword ptr [rbp+90h]
                    00
  00000000000002D4: 4C 8B 85 88 00 00  mov         r8,qword ptr [rbp+88h]
                    00
  00000000000002DB: 48 8B 4D 78        mov         rcx,qword ptr [rbp+78h]
  00000000000002DF: 4D 85 C0           test        r8,r8
  00000000000002E2: 74 64              je          0000000000000348
  00000000000002E4: 48 8D 45 78        lea         rax,[rbp+78h]
  00000000000002E8: 49 83 F9 0F        cmp         r9,0Fh
  00000000000002EC: 48 0F 47 C1        cmova       rax,rcx
  00000000000002F0: 80 38 09           cmp         byte ptr [rax],9
  00000000000002F3: 74 11              je          0000000000000306
  00000000000002F5: 48 8D 45 78        lea         rax,[rbp+78h]
  00000000000002F9: 49 83 F9 0F        cmp         r9,0Fh
  00000000000002FD: 48 0F 47 C1        cmova       rax,rcx
  0000000000000301: 80 38 20           cmp         byte ptr [rax],20h
  0000000000000304: 75 42              jne         0000000000000348
  0000000000000306: 48 8D 55 78        lea         rdx,[rbp+78h]
  000000000000030A: 49 83 F9 0F        cmp         r9,0Fh
  000000000000030E: 48 0F 47 D1        cmova       rdx,rcx
  0000000000000312: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000319: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  000000000000031E: 48 8B D8           mov         rbx,rax
  0000000000000321: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000324: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000328: 48 03 C8           add         rcx,rax
  000000000000032B: B2 0A              mov         dl,0Ah
  000000000000032D: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000332: 0F B6 D0           movzx       edx,al
  0000000000000335: 48 8B CB           mov         rcx,rbx
  0000000000000338: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  000000000000033D: 48 8B CB           mov         rcx,rbx
  0000000000000340: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000345: 41 FF C7           inc         r15d
  0000000000000348: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  000000000000034D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000351: 48 8D 44 24 30     lea         rax,[rsp+30h]
  0000000000000356: 48 03 C8           add         rcx,rax
  0000000000000359: B2 0A              mov         dl,0Ah
  000000000000035B: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000360: 44 0F B6 C0        movzx       r8d,al
  0000000000000364: 48 8D 55 78        lea         rdx,[rbp+78h]
  0000000000000368: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000036D: E8 00 00 00 00     call        ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z
  0000000000000372: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000375: 48 63 51 04        movsxd      rdx,dword ptr [rcx+4]
  0000000000000379: F6 44 02 10 06     test        byte ptr [rdx+rax+10h],6
  000000000000037E: 0F 84 CD FD FF FF  je          0000000000000151
  0000000000000384: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000389: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  000000000000038E: 48 85 C0           test        rax,rax
  0000000000000391: 75 33              jne         00000000000003C6
  0000000000000393: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000398: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000039C: B8 06 00 00 00     mov         eax,6
  00000000000003A1: BA 02 00 00 00     mov         edx,2
  00000000000003A6: 48 83 7C 0C 78 00  cmp         qword ptr [rsp+rcx+78h],0
  00000000000003AC: 0F 45 C2           cmovne      eax,edx
  00000000000003AF: 0B 44 0C 40        or          eax,dword ptr [rsp+rcx+40h]
  00000000000003B3: 83 E0 17           and         eax,17h
  00000000000003B6: 89 44 0C 40        mov         dword ptr [rsp+rcx+40h],eax
  00000000000003BA: 8B 54 0C 44        mov         edx,dword ptr [rsp+rcx+44h]
  00000000000003BE: 23 D0              and         edx,eax
  00000000000003C0: 0F 85 9B 01 00 00  jne         0000000000000561
  00000000000003C6: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BJ@GBOBHEAK@?9?9?9?5End?5of?5Assembly?5?9?9?9?6@]
                    00
  00000000000003CD: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000003D4: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003D9: 48 8B D8           mov         rbx,rax
  00000000000003DC: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000003DF: 48 63 4A 04        movsxd      rcx,dword ptr [rdx+4]
  00000000000003E3: 48 03 C8           add         rcx,rax
  00000000000003E6: B2 0A              mov         dl,0Ah
  00000000000003E8: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000003ED: 0F B6 D0           movzx       edx,al
  00000000000003F0: 48 8B CB           mov         rcx,rbx
  00000000000003F3: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000003F8: 48 8B CB           mov         rcx,rbx
  00000000000003FB: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000400: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_GREEN@Color@@3PEBDEB]
                    00
  0000000000000407: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000040E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000413: 48 8B C8           mov         rcx,rax
  0000000000000416: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@GAEEPCAL@Assembly?5Lines?3?5?5?5?5?5@]
                    00
  000000000000041D: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000422: 41 8B D7           mov         edx,r15d
  0000000000000425: 48 8B C8           mov         rcx,rax
  0000000000000428: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  000000000000042D: 48 8B C8           mov         rcx,rax
  0000000000000430: 48 8D 15 00 00 00  lea         rdx,[??_C@_0O@JCHDNDCO@?5instructions@]
                    00
  0000000000000437: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000043C: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000443: 48 8B C8           mov         rcx,rax
  0000000000000446: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000044B: 48 8B D8           mov         rbx,rax
  000000000000044E: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000451: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000455: 48 03 C8           add         rcx,rax
  0000000000000458: B2 0A              mov         dl,0Ah
  000000000000045A: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  000000000000045F: 0F B6 D0           movzx       edx,al
  0000000000000462: 48 8B CB           mov         rcx,rbx
  0000000000000465: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  000000000000046A: 48 8B CB           mov         rcx,rbx
  000000000000046D: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000472: 90                 nop
  0000000000000473: 48 8B 95 90 00 00  mov         rdx,qword ptr [rbp+90h]
                    00
  000000000000047A: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000047E: 76 31              jbe         00000000000004B1
  0000000000000480: 48 FF C2           inc         rdx
  0000000000000483: 48 8B 4D 78        mov         rcx,qword ptr [rbp+78h]
  0000000000000487: 48 8B C1           mov         rax,rcx
  000000000000048A: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000491: 72 19              jb          00000000000004AC
  0000000000000493: 48 83 C2 27        add         rdx,27h
  0000000000000497: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000049B: 48 2B C1           sub         rax,rcx
  000000000000049E: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000004A2: 48 83 F8 1F        cmp         rax,1Fh
  00000000000004A6: 0F 87 AF 00 00 00  ja          000000000000055B
  00000000000004AC: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000004B1: 48 C7 85 88 00 00  mov         qword ptr [rbp+88h],0
                    00 00 00 00 00
  00000000000004BC: 48 C7 85 90 00 00  mov         qword ptr [rbp+90h],0Fh
                    00 0F 00 00 00
  00000000000004C7: C6 45 78 00        mov         byte ptr [rbp+78h],0
  00000000000004CB: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  00000000000004D0: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000004D4: 4C 89 6C 0C 30     mov         qword ptr [rsp+rcx+30h],r13
  00000000000004D9: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  00000000000004DE: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000004E2: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  00000000000004E8: 89 54 0C 2C        mov         dword ptr [rsp+rcx+2Ch],edx
  00000000000004EC: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000004F1: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00000000000004F6: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  00000000000004FB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000004FF: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000506: 48 89 44 0C 30     mov         qword ptr [rsp+rcx+30h],rax
  000000000000050B: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000510: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000514: 8D 51 E8           lea         edx,[rcx-18h]
  0000000000000517: 89 54 0C 2C        mov         dword ptr [rsp+rcx+2Ch],edx
  000000000000051B: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000522: 48 89 45 E0        mov         qword ptr [rbp-20h],rax
  0000000000000526: 48 8D 4D E0        lea         rcx,[rbp-20h]
  000000000000052A: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  000000000000052F: 90                 nop
  0000000000000530: 48 8B 8D 98 00 00  mov         rcx,qword ptr [rbp+98h]
                    00
  0000000000000537: 48 33 CC           xor         rcx,rsp
  000000000000053A: E8 00 00 00 00     call        __security_check_cookie
  000000000000053F: 4C 8D 9C 24 A0 01  lea         r11,[rsp+1A0h]
                    00 00
  0000000000000547: 49 8B 5B 40        mov         rbx,qword ptr [r11+40h]
  000000000000054B: 49 8B 73 48        mov         rsi,qword ptr [r11+48h]
  000000000000054F: 49 8B E3           mov         rsp,r11
  0000000000000552: 41 5F              pop         r15
  0000000000000554: 41 5E              pop         r14
  0000000000000556: 41 5D              pop         r13
  0000000000000558: 5F                 pop         rdi
  0000000000000559: 5D                 pop         rbp
  000000000000055A: C3                 ret
  000000000000055B: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000560: 90                 nop
  0000000000000561: F6 C2 04           test        dl,4
  0000000000000564: 74 09              je          000000000000056F
  0000000000000566: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000056D: EB 15              jmp         0000000000000584
  000000000000056F: F6 C2 02           test        dl,2
  0000000000000572: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000579: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000580: 48 0F 44 D8        cmove       rbx,rax
  0000000000000584: BA 01 00 00 00     mov         edx,1
  0000000000000589: 48 8D 4D 40        lea         rcx,[rbp+40h]
  000000000000058D: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000592: 4C 8B C0           mov         r8,rax
  0000000000000595: 48 8B D3           mov         rdx,rbx
  0000000000000598: 48 8D 4D 50        lea         rcx,[rbp+50h]
  000000000000059C: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000005A1: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000005A8: 48 8D 4D 50        lea         rcx,[rbp+50h]
  00000000000005AC: E8 00 00 00 00     call        _CxxThrowException
  00000000000005B1: CC                 int         3

?dtor$0@?0??analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA (int `void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ

?dtor$1@?0??analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA (int `void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 78 01 00  lea         rcx,[rdx+178h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z (public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)):
  0000000000000000: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B F9           mov         rdi,rcx
  000000000000000D: 49 8B F0           mov         rsi,r8
  0000000000000010: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000014: 4C 8B 47 18        mov         r8,qword ptr [rdi+18h]
  0000000000000018: 49 8B C0           mov         rax,r8
  000000000000001B: 48 2B C1           sub         rax,rcx
  000000000000001E: 48 3B F0           cmp         rsi,rax
  0000000000000021: 77 3F              ja          0000000000000062
  0000000000000023: 48 89 5C 24 48     mov         qword ptr [rsp+48h],rbx
  0000000000000028: 48 8D 04 31        lea         rax,[rcx+rsi]
  000000000000002C: 48 89 47 10        mov         qword ptr [rdi+10h],rax
  0000000000000030: 48 8B C7           mov         rax,rdi
  0000000000000033: 49 83 F8 0F        cmp         r8,0Fh
  0000000000000037: 76 03              jbe         000000000000003C
  0000000000000039: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000003C: 48 8D 1C 08        lea         rbx,[rax+rcx]
  0000000000000040: 4C 8B C6           mov         r8,rsi
  0000000000000043: 48 8B CB           mov         rcx,rbx
  0000000000000046: E8 00 00 00 00     call        memmove
  000000000000004B: C6 04 33 00        mov         byte ptr [rbx+rsi],0
  000000000000004F: 48 8B C7           mov         rax,rdi
  0000000000000052: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000057: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000005C: 48 83 C4 30        add         rsp,30h
  0000000000000060: 5F                 pop         rdi
  0000000000000061: C3                 ret
  0000000000000062: 44 0F B6 44 24 40  movzx       r8d,byte ptr [rsp+40h]
  0000000000000068: 4C 8B CA           mov         r9,rdx
  000000000000006B: 48 8B D6           mov         rdx,rsi
  000000000000006E: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000073: 48 8B CF           mov         rcx,rdi
  0000000000000076: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
  000000000000007B: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000080: 48 83 C4 30        add         rsp,30h
  0000000000000084: 5F                 pop         rdi
  0000000000000085: C3                 ret

?clear@ios_base@std@@QEAAXH@Z (public: void __cdecl std::ios_base::clear(int)):
  0000000000000000: 48 83 EC 68        sub         rsp,68h
  0000000000000004: 83 E2 17           and         edx,17h
  0000000000000007: 89 51 10           mov         dword ptr [rcx+10h],edx
  000000000000000A: 23 51 14           and         edx,dword ptr [rcx+14h]
  000000000000000D: 75 05              jne         0000000000000014
  000000000000000F: 48 83 C4 68        add         rsp,68h
  0000000000000013: C3                 ret
  0000000000000014: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  0000000000000019: F6 C2 04           test        dl,4
  000000000000001C: 74 09              je          0000000000000027
  000000000000001E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000025: EB 15              jmp         000000000000003C
  0000000000000027: F6 C2 02           test        dl,2
  000000000000002A: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000031: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000038: 48 0F 44 D8        cmove       rbx,rax
  000000000000003C: BA 01 00 00 00     mov         edx,1
  0000000000000041: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000046: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000004B: 4C 8B C0           mov         r8,rax
  000000000000004E: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000053: 48 8B D3           mov         rdx,rbx
  0000000000000056: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000005B: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000062: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000067: E8 00 00 00 00     call        _CxxThrowException
  000000000000006C: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]

?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ (public: class std::basic_filebuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::close(void)):
  0000000000000000: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 41 56              push        r14
  000000000000000D: 41 57              push        r15
  000000000000000F: 48 83 EC 20        sub         rsp,20h
  0000000000000013: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 74 60              je          0000000000000080
  0000000000000020: 4C 8B 41 18        mov         r8,qword ptr [rcx+18h]
  0000000000000024: 48 8D 41 70        lea         rax,[rcx+70h]
  0000000000000028: 48 89 5C 24 40     mov         qword ptr [rsp+40h],rbx
  000000000000002D: 49 39 00           cmp         qword ptr [r8],rax
  0000000000000030: 75 20              jne         0000000000000052
  0000000000000032: 48 8B 91 90 00 00  mov         rdx,qword ptr [rcx+90h]
                    00
  0000000000000039: 48 8B 89 88 00 00  mov         rcx,qword ptr [rcx+88h]
                    00
  0000000000000040: 49 89 08           mov         qword ptr [r8],rcx
  0000000000000043: 2B D1              sub         edx,ecx
  0000000000000045: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000049: 48 89 08           mov         qword ptr [rax],rcx
  000000000000004C: 48 8B 47 50        mov         rax,qword ptr [rdi+50h]
  0000000000000050: 89 10              mov         dword ptr [rax],edx
  0000000000000052: 48 8B CF           mov         rcx,rdi
  0000000000000055: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  000000000000005A: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000061: 33 ED              xor         ebp,ebp
  0000000000000063: 84 C0              test        al,al
  0000000000000065: 8B DD              mov         ebx,ebp
  0000000000000067: 48 0F 45 DF        cmovne      rbx,rdi
  000000000000006B: E8 00 00 00 00     call        fclose
  0000000000000070: 85 C0              test        eax,eax
  0000000000000072: 44 8B CD           mov         r9d,ebp
  0000000000000075: 4C 0F 44 CB        cmove       r9,rbx
  0000000000000079: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000007E: EB 05              jmp         0000000000000085
  0000000000000080: 33 ED              xor         ebp,ebp
  0000000000000082: 44 8B CD           mov         r9d,ebp
  0000000000000085: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  000000000000008A: 48 8D 4F 4C        lea         rcx,[rdi+4Ch]
  000000000000008E: 48 89 4F 58        mov         qword ptr [rdi+58h],rcx
  0000000000000092: 48 8D 47 08        lea         rax,[rdi+8]
  0000000000000096: 48 89 47 18        mov         qword ptr [rdi+18h],rax
  000000000000009A: 4C 8D 47 10        lea         r8,[rdi+10h]
  000000000000009E: C6 47 7C 00        mov         byte ptr [rdi+7Ch],0
  00000000000000A2: 48 8D 47 28        lea         rax,[rdi+28h]
  00000000000000A6: 48 89 47 38        mov         qword ptr [rdi+38h],rax
  00000000000000AA: 48 8D 57 30        lea         rdx,[rdi+30h]
  00000000000000AE: C6 47 71 00        mov         byte ptr [rdi+71h],0
  00000000000000B2: 48 8D 47 48        lea         rax,[rdi+48h]
  00000000000000B6: 48 89 47 50        mov         qword ptr [rdi+50h],rax
  00000000000000BA: 49 8B C1           mov         rax,r9
  00000000000000BD: 4C 89 47 20        mov         qword ptr [rdi+20h],r8
  00000000000000C1: 48 89 57 40        mov         qword ptr [rdi+40h],rdx
  00000000000000C5: 49 89 28           mov         qword ptr [r8],rbp
  00000000000000C8: 48 89 2A           mov         qword ptr [rdx],rbp
  00000000000000CB: 89 29              mov         dword ptr [rcx],ebp
  00000000000000CD: 48 8B 4F 18        mov         rcx,qword ptr [rdi+18h]
  00000000000000D1: 48 89 29           mov         qword ptr [rcx],rbp
  00000000000000D4: 48 8B 4F 38        mov         rcx,qword ptr [rdi+38h]
  00000000000000D8: 48 89 29           mov         qword ptr [rcx],rbp
  00000000000000DB: 48 8B 4F 50        mov         rcx,qword ptr [rdi+50h]
  00000000000000DF: 89 29              mov         dword ptr [rcx],ebp
  00000000000000E1: 48 89 AF 80 00 00  mov         qword ptr [rdi+80h],rbp
                    00
  00000000000000E8: 48 8B 0D 00 00 00  mov         rcx,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000000EF: 48 89 6F 68        mov         qword ptr [rdi+68h],rbp
  00000000000000F3: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  00000000000000F8: 48 89 4F 74        mov         qword ptr [rdi+74h],rcx
  00000000000000FC: 48 83 C4 20        add         rsp,20h
  0000000000000100: 41 5F              pop         r15
  0000000000000102: 41 5E              pop         r14
  0000000000000104: 5F                 pop         rdi
  0000000000000105: C3                 ret

?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z (public: virtual class std::error_condition __cdecl std::error_category::default_error_condition(int)const ):
  0000000000000000: 44 89 02           mov         dword ptr [rdx],r8d
  0000000000000003: 48 8B C2           mov         rax,rdx
  0000000000000006: 48 89 4A 08        mov         qword ptr [rdx+8],rcx
  000000000000000A: C3                 ret

?do_always_noconv@?$codecvt@DDU_Mbstatet@@@std@@MEBA_NXZ (protected: virtual bool __cdecl std::codecvt<char,char,struct _Mbstatet>::do_always_noconv(void)const ):
  0000000000000000: B0 01              mov         al,1
  0000000000000002: C3                 ret

?do_always_noconv@codecvt_base@std@@MEBA_NXZ (protected: virtual bool __cdecl std::codecvt_base::do_always_noconv(void)const ):
  0000000000000000: 32 C0              xor         al,al
  0000000000000002: C3                 ret

?do_decimal_point@?$numpunct@D@std@@MEBADXZ (protected: virtual char __cdecl std::numpunct<char>::do_decimal_point(void)const ):
  0000000000000000: 0F B6 41 18        movzx       eax,byte ptr [rcx+18h]
  0000000000000004: C3                 ret

?do_encoding@codecvt_base@std@@MEBAHXZ (protected: virtual int __cdecl std::codecvt_base::do_encoding(void)const ):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_falsename(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 20        mov         rdx,qword ptr [rcx+20h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000019: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  000000000000001C: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000020: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000024: 49 FF C0           inc         r8
  0000000000000027: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  000000000000002B: 75 F7              jne         0000000000000024
  000000000000002D: 48 8B CB           mov         rcx,rbx
  0000000000000030: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000035: 48 8B C3           mov         rax,rbx
  0000000000000038: 48 83 C4 30        add         rsp,30h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_grouping(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000019: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  000000000000001C: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000020: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000024: 49 FF C0           inc         r8
  0000000000000027: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  000000000000002B: 75 F7              jne         0000000000000024
  000000000000002D: 48 8B CB           mov         rcx,rbx
  0000000000000030: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000035: 48 8B C3           mov         rax,rbx
  0000000000000038: 48 83 C4 30        add         rsp,30h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

?do_in@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_in(struct _Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  000000000000000A: 4C 89 00           mov         qword ptr [rax],r8
  000000000000000D: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000012: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000015: B8 03 00 00 00     mov         eax,3
  000000000000001A: C3                 ret

?do_length@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_length(struct _Mbstatet &,char const *,char const *,unsigned __int64)const ):
  0000000000000000: 4D 2B C8           sub         r9,r8
  0000000000000003: B8 FF FF FF 7F     mov         eax,7FFFFFFFh
  0000000000000008: 4C 3B C8           cmp         r9,rax
  000000000000000B: 4C 0F 4F C8        cmovg       r9,rax
  000000000000000F: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000014: 4C 3B C8           cmp         r9,rax
  0000000000000017: 41 0F 42 C1        cmovb       eax,r9d
  000000000000001B: C3                 ret

?do_max_length@codecvt_base@std@@MEBAHXZ (protected: virtual int __cdecl std::codecvt_base::do_max_length(void)const ):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?do_narrow@?$ctype@D@std@@MEBADDD@Z (protected: virtual char __cdecl std::ctype<char>::do_narrow(char,char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: C3                 ret

?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_narrow(char const *,char const *,char,char *)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  000000000000000B: 49 8B D8           mov         rbx,r8
  000000000000000E: 4C 2B C2           sub         r8,rdx
  0000000000000011: E8 00 00 00 00     call        memcpy
  0000000000000016: 48 8B C3           mov         rax,rbx
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 5B                 pop         rbx
  000000000000001E: C3                 ret

?do_out@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_out(struct _Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  000000000000000A: 4C 89 00           mov         qword ptr [rax],r8
  000000000000000D: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000012: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000015: B8 03 00 00 00     mov         eax,3
  000000000000001A: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,long)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000016: 48 33 C4           xor         rax,rsp
  0000000000000019: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000021: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000025: 48 8B FA           mov         rdi,rdx
  0000000000000028: 8B D0              mov         edx,eax
  000000000000002A: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  000000000000002F: 49 8B D9           mov         rbx,r9
  0000000000000032: 49 8B E8           mov         rbp,r8
  0000000000000035: 48 8B F1           mov         rsi,rcx
  0000000000000038: 83 E2 20           and         edx,20h
  000000000000003B: 74 05              je          0000000000000042
  000000000000003D: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  0000000000000042: 85 D2              test        edx,edx
  0000000000000044: 48 8D 4C 24 51     lea         rcx,[rsp+51h]
  0000000000000049: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004E: 49 0F 45 C8        cmovne      rcx,r8
  0000000000000052: A8 08              test        al,8
  0000000000000054: 74 06              je          000000000000005C
  0000000000000056: C6 01 23           mov         byte ptr [rcx],23h
  0000000000000059: 48 FF C1           inc         rcx
  000000000000005C: 8B D0              mov         edx,eax
  000000000000005E: C6 01 6C           mov         byte ptr [rcx],6Ch
  0000000000000061: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000067: 81 FA 00 04 00 00  cmp         edx,400h
  000000000000006D: 75 04              jne         0000000000000073
  000000000000006F: B0 6F              mov         al,6Fh
  0000000000000071: EB 15              jmp         0000000000000088
  0000000000000073: 81 FA 00 08 00 00  cmp         edx,800h
  0000000000000079: 74 04              je          000000000000007F
  000000000000007B: B0 64              mov         al,64h
  000000000000007D: EB 09              jmp         0000000000000088
  000000000000007F: C0 E0 03           shl         al,3
  0000000000000082: F6 D0              not         al
  0000000000000084: 24 20              and         al,20h
  0000000000000086: 0C 58              or          al,58h
  0000000000000088: 44 8B 8C 24 F8 00  mov         r9d,dword ptr [rsp+0F8h]
                    00 00
  0000000000000090: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000095: 88 41 01           mov         byte ptr [rcx+1],al
  0000000000000098: BA 40 00 00 00     mov         edx,40h
  000000000000009D: C6 41 02 00        mov         byte ptr [rcx+2],0
  00000000000000A1: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A6: E8 00 00 00 00     call        sprintf_s
  00000000000000AB: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000AF: 48 63 C8           movsxd      rcx,eax
  00000000000000B2: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000B7: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  00000000000000BC: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000C1: 0F B6 8C 24 F0 00  movzx       ecx,byte ptr [rsp+0F0h]
                    00 00
  00000000000000C9: 4C 8B CB           mov         r9,rbx
  00000000000000CC: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000D1: 48 8B D7           mov         rdx,rdi
  00000000000000D4: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000D8: 48 8B CE           mov         rcx,rsi
  00000000000000DB: 0F 29 44 24 40     movaps      xmmword ptr [rsp+40h],xmm0
  00000000000000E0: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000E5: 48 8B C7           mov         rax,rdi
  00000000000000E8: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000F0: 48 33 CC           xor         rcx,rsp
  00000000000000F3: E8 00 00 00 00     call        __security_check_cookie
  00000000000000F8: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  0000000000000100: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000107: 5F                 pop         rdi
  0000000000000108: 5E                 pop         rsi
  0000000000000109: 5D                 pop         rbp
  000000000000010A: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,unsigned long)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000016: 48 33 C4           xor         rax,rsp
  0000000000000019: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000021: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000025: 48 8B FA           mov         rdi,rdx
  0000000000000028: 8B D0              mov         edx,eax
  000000000000002A: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  000000000000002F: 49 8B D9           mov         rbx,r9
  0000000000000032: 49 8B E8           mov         rbp,r8
  0000000000000035: 48 8B F1           mov         rsi,rcx
  0000000000000038: 83 E2 20           and         edx,20h
  000000000000003B: 74 05              je          0000000000000042
  000000000000003D: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  0000000000000042: 85 D2              test        edx,edx
  0000000000000044: 48 8D 4C 24 51     lea         rcx,[rsp+51h]
  0000000000000049: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004E: 49 0F 45 C8        cmovne      rcx,r8
  0000000000000052: A8 08              test        al,8
  0000000000000054: 74 06              je          000000000000005C
  0000000000000056: C6 01 23           mov         byte ptr [rcx],23h
  0000000000000059: 48 FF C1           inc         rcx
  000000000000005C: 8B D0              mov         edx,eax
  000000000000005E: C6 01 6C           mov         byte ptr [rcx],6Ch
  0000000000000061: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000067: 81 FA 00 04 00 00  cmp         edx,400h
  000000000000006D: 75 04              jne         0000000000000073
  000000000000006F: B0 6F              mov         al,6Fh
  0000000000000071: EB 15              jmp         0000000000000088
  0000000000000073: 81 FA 00 08 00 00  cmp         edx,800h
  0000000000000079: 74 04              je          000000000000007F
  000000000000007B: B0 75              mov         al,75h
  000000000000007D: EB 09              jmp         0000000000000088
  000000000000007F: C0 E0 03           shl         al,3
  0000000000000082: F6 D0              not         al
  0000000000000084: 24 20              and         al,20h
  0000000000000086: 0C 58              or          al,58h
  0000000000000088: 44 8B 8C 24 F8 00  mov         r9d,dword ptr [rsp+0F8h]
                    00 00
  0000000000000090: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000095: 88 41 01           mov         byte ptr [rcx+1],al
  0000000000000098: BA 40 00 00 00     mov         edx,40h
  000000000000009D: C6 41 02 00        mov         byte ptr [rcx+2],0
  00000000000000A1: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A6: E8 00 00 00 00     call        sprintf_s
  00000000000000AB: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000AF: 48 63 C8           movsxd      rcx,eax
  00000000000000B2: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000B7: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  00000000000000BC: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000C1: 0F B6 8C 24 F0 00  movzx       ecx,byte ptr [rsp+0F0h]
                    00 00
  00000000000000C9: 4C 8B CB           mov         r9,rbx
  00000000000000CC: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000D1: 48 8B D7           mov         rdx,rdi
  00000000000000D4: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000D8: 48 8B CE           mov         rcx,rsi
  00000000000000DB: 0F 29 44 24 40     movaps      xmmword ptr [rsp+40h],xmm0
  00000000000000E0: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000E5: 48 8B C7           mov         rax,rdi
  00000000000000E8: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000F0: 48 33 CC           xor         rcx,rsp
  00000000000000F3: E8 00 00 00 00     call        __security_check_cookie
  00000000000000F8: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  0000000000000100: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000107: 5F                 pop         rdi
  0000000000000108: 5E                 pop         rsi
  0000000000000109: 5D                 pop         rbp
  000000000000010A: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,double)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 E9     lea         rbp,[rsp-17h]
  0000000000000015: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  000000000000001C: 0F 29 B4 24 90 00  movaps      xmmword ptr [rsp+90h],xmm6
                    00 00
  0000000000000024: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000002B: 48 33 C4           xor         rax,rsp
  000000000000002E: 48 89 45 FF        mov         qword ptr [rbp-1],rax
  0000000000000032: 4D 8B F1           mov         r14,r9
  0000000000000035: 4D 8B E8           mov         r13,r8
  0000000000000038: 4C 8B FA           mov         r15,rdx
  000000000000003B: 4C 8B E1           mov         r12,rcx
  000000000000003E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000041: 0F 11 45 D7        movups      xmmword ptr [rbp-29h],xmm0
  0000000000000045: 33 D2              xor         edx,edx
  0000000000000047: 48 89 55 E7        mov         qword ptr [rbp-19h],rdx
  000000000000004B: 41 B8 0F 00 00 00  mov         r8d,0Fh
  0000000000000051: 4C 89 45 EF        mov         qword ptr [rbp-11h],r8
  0000000000000055: 88 55 D7           mov         byte ptr [rbp-29h],dl
  0000000000000058: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  000000000000005C: 25 00 30 00 00     and         eax,3000h
  0000000000000061: F2 0F 10 75 7F     movsd       xmm6,mmword ptr [rbp+7Fh]
  0000000000000066: 3D 00 30 00 00     cmp         eax,3000h
  000000000000006B: 75 0E              jne         000000000000007B
  000000000000006D: 48 C7 C6 FF FF FF  mov         rsi,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000074: BB 0D 00 00 00     mov         ebx,0Dh
  0000000000000079: EB 7A              jmp         00000000000000F5
  000000000000007B: 49 8B 71 20        mov         rsi,qword ptr [r9+20h]
  000000000000007F: 48 85 F6           test        rsi,rsi
  0000000000000082: 7E 04              jle         0000000000000088
  0000000000000084: 8B CE              mov         ecx,esi
  0000000000000086: EB 16              jmp         000000000000009E
  0000000000000088: 75 0F              jne         0000000000000099
  000000000000008A: 85 C0              test        eax,eax
  000000000000008C: 75 07              jne         0000000000000095
  000000000000008E: BB 01 00 00 00     mov         ebx,1
  0000000000000093: EB 60              jmp         00000000000000F5
  0000000000000095: 8B CA              mov         ecx,edx
  0000000000000097: EB 05              jmp         000000000000009E
  0000000000000099: B9 06 00 00 00     mov         ecx,6
  000000000000009E: 48 63 D9           movsxd      rbx,ecx
  00000000000000A1: 3D 00 20 00 00     cmp         eax,2000h
  00000000000000A6: 75 4D              jne         00000000000000F5
  00000000000000A8: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000AB: 0F 54 05 00 00 00  andps       xmm0,xmmword ptr [__xmm@7fffffffffffffff7fffffffffffffff]
                    00
  00000000000000B2: 66 0F 2F 05 00 00  comisd      xmm0,mmword ptr [__real@4202a05f20000000]
                    00 00
  00000000000000BA: 76 39              jbe         00000000000000F5
  00000000000000BC: 48 8D 55 BB        lea         rdx,[rbp-45h]
  00000000000000C0: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000C3: E8 00 00 00 00     call        frexp
  00000000000000C8: 8B 4D BB           mov         ecx,dword ptr [rbp-45h]
  00000000000000CB: F7 D9              neg         ecx
  00000000000000CD: 0F 48 4D BB        cmovs       ecx,dword ptr [rbp-45h]
  00000000000000D1: 69 C9 97 75 00 00  imul        ecx,ecx,7597h
  00000000000000D7: B8 89 B5 F8 14     mov         eax,14F8B589h
  00000000000000DC: F7 E9              imul        ecx
  00000000000000DE: C1 FA 0D           sar         edx,0Dh
  00000000000000E1: 8B C2              mov         eax,edx
  00000000000000E3: C1 E8 1F           shr         eax,1Fh
  00000000000000E6: 03 C2              add         eax,edx
  00000000000000E8: 48 98              cdqe
  00000000000000EA: 48 03 D8           add         rbx,rax
  00000000000000ED: 4C 8B 45 EF        mov         r8,qword ptr [rbp-11h]
  00000000000000F1: 48 8B 55 E7        mov         rdx,qword ptr [rbp-19h]
  00000000000000F5: 48 8D 4B 32        lea         rcx,[rbx+32h]
  00000000000000F9: 48 3B CA           cmp         rcx,rdx
  00000000000000FC: 77 17              ja          0000000000000115
  00000000000000FE: 48 89 4D E7        mov         qword ptr [rbp-19h],rcx
  0000000000000102: 48 8D 45 D7        lea         rax,[rbp-29h]
  0000000000000106: 49 83 F8 0F        cmp         r8,0Fh
  000000000000010A: 48 0F 47 45 D7     cmova       rax,qword ptr [rbp-29h]
  000000000000010F: C6 04 08 00        mov         byte ptr [rax+rcx],0
  0000000000000113: EB 51              jmp         0000000000000166
  0000000000000115: 48 8B F9           mov         rdi,rcx
  0000000000000118: 48 2B FA           sub         rdi,rdx
  000000000000011B: 49 8B C0           mov         rax,r8
  000000000000011E: 48 2B C2           sub         rax,rdx
  0000000000000121: 48 3B F8           cmp         rdi,rax
  0000000000000124: 77 27              ja          000000000000014D
  0000000000000126: 48 89 4D E7        mov         qword ptr [rbp-19h],rcx
  000000000000012A: 48 8D 5D D7        lea         rbx,[rbp-29h]
  000000000000012E: 49 83 F8 0F        cmp         r8,0Fh
  0000000000000132: 48 0F 47 5D D7     cmova       rbx,qword ptr [rbp-29h]
  0000000000000137: 48 03 DA           add         rbx,rdx
  000000000000013A: 4C 8B C7           mov         r8,rdi
  000000000000013D: 33 D2              xor         edx,edx
  000000000000013F: 48 8B CB           mov         rcx,rbx
  0000000000000142: E8 00 00 00 00     call        memset
  0000000000000147: C6 04 3B 00        mov         byte ptr [rbx+rdi],0
  000000000000014B: EB 19              jmp         0000000000000166
  000000000000014D: C6 44 24 20 00     mov         byte ptr [rsp+20h],0
  0000000000000152: 4C 8B CF           mov         r9,rdi
  0000000000000155: 44 0F B6 45 B7     movzx       r8d,byte ptr [rbp-49h]
  000000000000015A: 48 8B D7           mov         rdx,rdi
  000000000000015D: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000161: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z
  0000000000000166: 66 48 0F 7E F0     movq        rax,xmm6
  000000000000016B: 48 C1 E8 34        shr         rax,34h
  000000000000016F: 25 FF 07 00 00     and         eax,7FFh
  0000000000000174: 3D FF 07 00 00     cmp         eax,7FFh
  0000000000000179: 0F 95 C3           setne       bl
  000000000000017C: 45 8B 46 18        mov         r8d,dword ptr [r14+18h]
  0000000000000180: 41 8B C0           mov         eax,r8d
  0000000000000183: 83 E0 EF           and         eax,0FFFFFFEFh
  0000000000000186: 84 DB              test        bl,bl
  0000000000000188: 44 0F 44 C0        cmove       r8d,eax
  000000000000018C: C6 45 F7 25        mov         byte ptr [rbp-9],25h
  0000000000000190: 41 8B C0           mov         eax,r8d
  0000000000000193: 83 E0 20           and         eax,20h
  0000000000000196: 74 04              je          000000000000019C
  0000000000000198: C6 45 F8 2B        mov         byte ptr [rbp-8],2Bh
  000000000000019C: 48 8D 4D F8        lea         rcx,[rbp-8]
  00000000000001A0: 48 8D 55 F9        lea         rdx,[rbp-7]
  00000000000001A4: 85 C0              test        eax,eax
  00000000000001A6: 48 0F 45 CA        cmovne      rcx,rdx
  00000000000001AA: 41 F6 C0 10        test        r8b,10h
  00000000000001AE: 74 06              je          00000000000001B6
  00000000000001B0: C6 01 23           mov         byte ptr [rcx],23h
  00000000000001B3: 48 FF C1           inc         rcx
  00000000000001B6: 66 C7 01 2E 2A     mov         word ptr [rcx],2A2Eh
  00000000000001BB: 41 8B D0           mov         edx,r8d
  00000000000001BE: 81 E2 00 30 00 00  and         edx,3000h
  00000000000001C4: 41 F6 C0 04        test        r8b,4
  00000000000001C8: 74 25              je          00000000000001EF
  00000000000001CA: 81 FA 00 20 00 00  cmp         edx,2000h
  00000000000001D0: 75 04              jne         00000000000001D6
  00000000000001D2: B0 66              mov         al,66h
  00000000000001D4: EB 46              jmp         000000000000021C
  00000000000001D6: 81 FA 00 30 00 00  cmp         edx,3000h
  00000000000001DC: 75 04              jne         00000000000001E2
  00000000000001DE: B0 41              mov         al,41h
  00000000000001E0: EB 3A              jmp         000000000000021C
  00000000000001E2: B8 47 00 00 00     mov         eax,47h
  00000000000001E7: 41 B8 45 00 00 00  mov         r8d,45h
  00000000000001ED: EB 23              jmp         0000000000000212
  00000000000001EF: 81 FA 00 20 00 00  cmp         edx,2000h
  00000000000001F5: 75 04              jne         00000000000001FB
  00000000000001F7: B0 66              mov         al,66h
  00000000000001F9: EB 21              jmp         000000000000021C
  00000000000001FB: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000201: 75 04              jne         0000000000000207
  0000000000000203: B0 61              mov         al,61h
  0000000000000205: EB 15              jmp         000000000000021C
  0000000000000207: B8 67 00 00 00     mov         eax,67h
  000000000000020C: 41 B8 65 00 00 00  mov         r8d,65h
  0000000000000212: 81 FA 00 10 00 00  cmp         edx,1000h
  0000000000000218: 41 0F 44 C0        cmove       eax,r8d
  000000000000021C: 88 41 02           mov         byte ptr [rcx+2],al
  000000000000021F: C6 41 03 00        mov         byte ptr [rcx+3],0
  0000000000000223: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000227: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  000000000000022C: 48 0F 47 4D D7     cmova       rcx,qword ptr [rbp-29h]
  0000000000000231: F2 0F 11 74 24 20  movsd       mmword ptr [rsp+20h],xmm6
  0000000000000237: 44 8B CE           mov         r9d,esi
  000000000000023A: 4C 8D 45 F7        lea         r8,[rbp-9]
  000000000000023E: 48 8B 55 E7        mov         rdx,qword ptr [rbp-19h]
  0000000000000242: E8 00 00 00 00     call        sprintf_s
  0000000000000247: 48 63 C8           movsxd      rcx,eax
  000000000000024A: 48 8D 45 D7        lea         rax,[rbp-29h]
  000000000000024E: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  0000000000000253: 48 0F 47 45 D7     cmova       rax,qword ptr [rbp-29h]
  0000000000000258: 41 0F 10 45 00     movups      xmm0,xmmword ptr [r13]
  000000000000025D: 0F 29 45 C7        movaps      xmmword ptr [rbp-39h],xmm0
  0000000000000261: 88 5C 24 38        mov         byte ptr [rsp+38h],bl
  0000000000000265: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000026A: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000026F: 0F B6 45 77        movzx       eax,byte ptr [rbp+77h]
  0000000000000273: 88 44 24 20        mov         byte ptr [rsp+20h],al
  0000000000000277: 4D 8B CE           mov         r9,r14
  000000000000027A: 4C 8D 45 C7        lea         r8,[rbp-39h]
  000000000000027E: 49 8B D7           mov         rdx,r15
  0000000000000281: 49 8B CC           mov         rcx,r12
  0000000000000284: E8 00 00 00 00     call        ??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
  0000000000000289: 90                 nop
  000000000000028A: 48 8B 55 EF        mov         rdx,qword ptr [rbp-11h]
  000000000000028E: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000292: 76 2D              jbe         00000000000002C1
  0000000000000294: 48 FF C2           inc         rdx
  0000000000000297: 48 8B 4D D7        mov         rcx,qword ptr [rbp-29h]
  000000000000029B: 48 8B C1           mov         rax,rcx
  000000000000029E: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000002A5: 72 15              jb          00000000000002BC
  00000000000002A7: 48 83 C2 27        add         rdx,27h
  00000000000002AB: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000002AF: 48 2B C1           sub         rax,rcx
  00000000000002B2: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000002B6: 48 83 F8 1F        cmp         rax,1Fh
  00000000000002BA: 77 37              ja          00000000000002F3
  00000000000002BC: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000002C1: 49 8B C7           mov         rax,r15
  00000000000002C4: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  00000000000002C8: 48 33 CC           xor         rcx,rsp
  00000000000002CB: E8 00 00 00 00     call        __security_check_cookie
  00000000000002D0: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  00000000000002D8: 0F 28 B4 24 90 00  movaps      xmm6,xmmword ptr [rsp+90h]
                    00 00
  00000000000002E0: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  00000000000002E7: 41 5F              pop         r15
  00000000000002E9: 41 5E              pop         r14
  00000000000002EB: 41 5D              pop         r13
  00000000000002ED: 41 5C              pop         r12
  00000000000002EF: 5F                 pop         rdi
  00000000000002F0: 5E                 pop         rsi
  00000000000002F1: 5D                 pop         rbp
  00000000000002F2: C3                 ret
  00000000000002F3: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000002F8: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,double)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,long double)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 E9     lea         rbp,[rsp-17h]
  0000000000000015: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  000000000000001C: 0F 29 B4 24 90 00  movaps      xmmword ptr [rsp+90h],xmm6
                    00 00
  0000000000000024: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000002B: 48 33 C4           xor         rax,rsp
  000000000000002E: 48 89 45 FF        mov         qword ptr [rbp-1],rax
  0000000000000032: 4D 8B F1           mov         r14,r9
  0000000000000035: 4D 8B E8           mov         r13,r8
  0000000000000038: 4C 8B FA           mov         r15,rdx
  000000000000003B: 4C 8B E1           mov         r12,rcx
  000000000000003E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000041: 0F 11 45 D7        movups      xmmword ptr [rbp-29h],xmm0
  0000000000000045: 33 D2              xor         edx,edx
  0000000000000047: 48 89 55 E7        mov         qword ptr [rbp-19h],rdx
  000000000000004B: 41 B8 0F 00 00 00  mov         r8d,0Fh
  0000000000000051: 4C 89 45 EF        mov         qword ptr [rbp-11h],r8
  0000000000000055: 88 55 D7           mov         byte ptr [rbp-29h],dl
  0000000000000058: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  000000000000005C: 25 00 30 00 00     and         eax,3000h
  0000000000000061: F2 0F 10 75 7F     movsd       xmm6,mmword ptr [rbp+7Fh]
  0000000000000066: 3D 00 30 00 00     cmp         eax,3000h
  000000000000006B: 75 0E              jne         000000000000007B
  000000000000006D: 48 C7 C6 FF FF FF  mov         rsi,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000074: BB 0D 00 00 00     mov         ebx,0Dh
  0000000000000079: EB 7A              jmp         00000000000000F5
  000000000000007B: 49 8B 71 20        mov         rsi,qword ptr [r9+20h]
  000000000000007F: 48 85 F6           test        rsi,rsi
  0000000000000082: 7E 04              jle         0000000000000088
  0000000000000084: 8B CE              mov         ecx,esi
  0000000000000086: EB 16              jmp         000000000000009E
  0000000000000088: 75 0F              jne         0000000000000099
  000000000000008A: 85 C0              test        eax,eax
  000000000000008C: 75 07              jne         0000000000000095
  000000000000008E: BB 01 00 00 00     mov         ebx,1
  0000000000000093: EB 60              jmp         00000000000000F5
  0000000000000095: 8B CA              mov         ecx,edx
  0000000000000097: EB 05              jmp         000000000000009E
  0000000000000099: B9 06 00 00 00     mov         ecx,6
  000000000000009E: 48 63 D9           movsxd      rbx,ecx
  00000000000000A1: 3D 00 20 00 00     cmp         eax,2000h
  00000000000000A6: 75 4D              jne         00000000000000F5
  00000000000000A8: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000AB: 0F 54 05 00 00 00  andps       xmm0,xmmword ptr [__xmm@7fffffffffffffff7fffffffffffffff]
                    00
  00000000000000B2: 66 0F 2F 05 00 00  comisd      xmm0,mmword ptr [__real@4202a05f20000000]
                    00 00
  00000000000000BA: 76 39              jbe         00000000000000F5
  00000000000000BC: 48 8D 55 BB        lea         rdx,[rbp-45h]
  00000000000000C0: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000C3: E8 00 00 00 00     call        frexp
  00000000000000C8: 8B 4D BB           mov         ecx,dword ptr [rbp-45h]
  00000000000000CB: F7 D9              neg         ecx
  00000000000000CD: 0F 48 4D BB        cmovs       ecx,dword ptr [rbp-45h]
  00000000000000D1: 69 C9 97 75 00 00  imul        ecx,ecx,7597h
  00000000000000D7: B8 89 B5 F8 14     mov         eax,14F8B589h
  00000000000000DC: F7 E9              imul        ecx
  00000000000000DE: C1 FA 0D           sar         edx,0Dh
  00000000000000E1: 8B C2              mov         eax,edx
  00000000000000E3: C1 E8 1F           shr         eax,1Fh
  00000000000000E6: 03 C2              add         eax,edx
  00000000000000E8: 48 98              cdqe
  00000000000000EA: 48 03 D8           add         rbx,rax
  00000000000000ED: 4C 8B 45 EF        mov         r8,qword ptr [rbp-11h]
  00000000000000F1: 48 8B 55 E7        mov         rdx,qword ptr [rbp-19h]
  00000000000000F5: 48 8D 4B 32        lea         rcx,[rbx+32h]
  00000000000000F9: 48 3B CA           cmp         rcx,rdx
  00000000000000FC: 77 17              ja          0000000000000115
  00000000000000FE: 48 89 4D E7        mov         qword ptr [rbp-19h],rcx
  0000000000000102: 48 8D 45 D7        lea         rax,[rbp-29h]
  0000000000000106: 49 83 F8 0F        cmp         r8,0Fh
  000000000000010A: 48 0F 47 45 D7     cmova       rax,qword ptr [rbp-29h]
  000000000000010F: C6 04 08 00        mov         byte ptr [rax+rcx],0
  0000000000000113: EB 51              jmp         0000000000000166
  0000000000000115: 48 8B F9           mov         rdi,rcx
  0000000000000118: 48 2B FA           sub         rdi,rdx
  000000000000011B: 49 8B C0           mov         rax,r8
  000000000000011E: 48 2B C2           sub         rax,rdx
  0000000000000121: 48 3B F8           cmp         rdi,rax
  0000000000000124: 77 27              ja          000000000000014D
  0000000000000126: 48 89 4D E7        mov         qword ptr [rbp-19h],rcx
  000000000000012A: 48 8D 5D D7        lea         rbx,[rbp-29h]
  000000000000012E: 49 83 F8 0F        cmp         r8,0Fh
  0000000000000132: 48 0F 47 5D D7     cmova       rbx,qword ptr [rbp-29h]
  0000000000000137: 48 03 DA           add         rbx,rdx
  000000000000013A: 4C 8B C7           mov         r8,rdi
  000000000000013D: 33 D2              xor         edx,edx
  000000000000013F: 48 8B CB           mov         rcx,rbx
  0000000000000142: E8 00 00 00 00     call        memset
  0000000000000147: C6 04 3B 00        mov         byte ptr [rbx+rdi],0
  000000000000014B: EB 19              jmp         0000000000000166
  000000000000014D: C6 44 24 20 00     mov         byte ptr [rsp+20h],0
  0000000000000152: 4C 8B CF           mov         r9,rdi
  0000000000000155: 44 0F B6 45 B7     movzx       r8d,byte ptr [rbp-49h]
  000000000000015A: 48 8B D7           mov         rdx,rdi
  000000000000015D: 48 8D 4D D7        lea         rcx,[rbp-29h]
  0000000000000161: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z
  0000000000000166: 66 48 0F 7E F0     movq        rax,xmm6
  000000000000016B: 48 C1 E8 34        shr         rax,34h
  000000000000016F: 25 FF 07 00 00     and         eax,7FFh
  0000000000000174: 3D FF 07 00 00     cmp         eax,7FFh
  0000000000000179: 0F 95 C3           setne       bl
  000000000000017C: 45 8B 46 18        mov         r8d,dword ptr [r14+18h]
  0000000000000180: 41 8B C0           mov         eax,r8d
  0000000000000183: 83 E0 EF           and         eax,0FFFFFFEFh
  0000000000000186: 84 DB              test        bl,bl
  0000000000000188: 44 0F 44 C0        cmove       r8d,eax
  000000000000018C: C6 45 F7 25        mov         byte ptr [rbp-9],25h
  0000000000000190: 41 8B C0           mov         eax,r8d
  0000000000000193: 83 E0 20           and         eax,20h
  0000000000000196: 74 04              je          000000000000019C
  0000000000000198: C6 45 F8 2B        mov         byte ptr [rbp-8],2Bh
  000000000000019C: 48 8D 4D F8        lea         rcx,[rbp-8]
  00000000000001A0: 48 8D 55 F9        lea         rdx,[rbp-7]
  00000000000001A4: 85 C0              test        eax,eax
  00000000000001A6: 48 0F 45 CA        cmovne      rcx,rdx
  00000000000001AA: 41 F6 C0 10        test        r8b,10h
  00000000000001AE: 74 06              je          00000000000001B6
  00000000000001B0: C6 01 23           mov         byte ptr [rcx],23h
  00000000000001B3: 48 FF C1           inc         rcx
  00000000000001B6: 66 C7 01 2E 2A     mov         word ptr [rcx],2A2Eh
  00000000000001BB: C6 41 02 4C        mov         byte ptr [rcx+2],4Ch
  00000000000001BF: 41 8B D0           mov         edx,r8d
  00000000000001C2: 81 E2 00 30 00 00  and         edx,3000h
  00000000000001C8: 41 F6 C0 04        test        r8b,4
  00000000000001CC: 74 25              je          00000000000001F3
  00000000000001CE: 81 FA 00 20 00 00  cmp         edx,2000h
  00000000000001D4: 75 04              jne         00000000000001DA
  00000000000001D6: B0 66              mov         al,66h
  00000000000001D8: EB 46              jmp         0000000000000220
  00000000000001DA: 81 FA 00 30 00 00  cmp         edx,3000h
  00000000000001E0: 75 04              jne         00000000000001E6
  00000000000001E2: B0 41              mov         al,41h
  00000000000001E4: EB 3A              jmp         0000000000000220
  00000000000001E6: B8 47 00 00 00     mov         eax,47h
  00000000000001EB: 41 B8 45 00 00 00  mov         r8d,45h
  00000000000001F1: EB 23              jmp         0000000000000216
  00000000000001F3: 81 FA 00 20 00 00  cmp         edx,2000h
  00000000000001F9: 75 04              jne         00000000000001FF
  00000000000001FB: B0 66              mov         al,66h
  00000000000001FD: EB 21              jmp         0000000000000220
  00000000000001FF: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000205: 75 04              jne         000000000000020B
  0000000000000207: B0 61              mov         al,61h
  0000000000000209: EB 15              jmp         0000000000000220
  000000000000020B: B8 67 00 00 00     mov         eax,67h
  0000000000000210: 41 B8 65 00 00 00  mov         r8d,65h
  0000000000000216: 81 FA 00 10 00 00  cmp         edx,1000h
  000000000000021C: 41 0F 44 C0        cmove       eax,r8d
  0000000000000220: 88 41 03           mov         byte ptr [rcx+3],al
  0000000000000223: C6 41 04 00        mov         byte ptr [rcx+4],0
  0000000000000227: 48 8D 4D D7        lea         rcx,[rbp-29h]
  000000000000022B: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  0000000000000230: 48 0F 47 4D D7     cmova       rcx,qword ptr [rbp-29h]
  0000000000000235: F2 0F 11 74 24 20  movsd       mmword ptr [rsp+20h],xmm6
  000000000000023B: 44 8B CE           mov         r9d,esi
  000000000000023E: 4C 8D 45 F7        lea         r8,[rbp-9]
  0000000000000242: 48 8B 55 E7        mov         rdx,qword ptr [rbp-19h]
  0000000000000246: E8 00 00 00 00     call        sprintf_s
  000000000000024B: 48 63 C8           movsxd      rcx,eax
  000000000000024E: 48 8D 45 D7        lea         rax,[rbp-29h]
  0000000000000252: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  0000000000000257: 48 0F 47 45 D7     cmova       rax,qword ptr [rbp-29h]
  000000000000025C: 41 0F 10 45 00     movups      xmm0,xmmword ptr [r13]
  0000000000000261: 0F 29 45 C7        movaps      xmmword ptr [rbp-39h],xmm0
  0000000000000265: 88 5C 24 38        mov         byte ptr [rsp+38h],bl
  0000000000000269: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000026E: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000273: 0F B6 45 77        movzx       eax,byte ptr [rbp+77h]
  0000000000000277: 88 44 24 20        mov         byte ptr [rsp+20h],al
  000000000000027B: 4D 8B CE           mov         r9,r14
  000000000000027E: 4C 8D 45 C7        lea         r8,[rbp-39h]
  0000000000000282: 49 8B D7           mov         rdx,r15
  0000000000000285: 49 8B CC           mov         rcx,r12
  0000000000000288: E8 00 00 00 00     call        ??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
  000000000000028D: 90                 nop
  000000000000028E: 48 8B 55 EF        mov         rdx,qword ptr [rbp-11h]
  0000000000000292: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000296: 76 2D              jbe         00000000000002C5
  0000000000000298: 48 FF C2           inc         rdx
  000000000000029B: 48 8B 4D D7        mov         rcx,qword ptr [rbp-29h]
  000000000000029F: 48 8B C1           mov         rax,rcx
  00000000000002A2: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000002A9: 72 15              jb          00000000000002C0
  00000000000002AB: 48 83 C2 27        add         rdx,27h
  00000000000002AF: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000002B3: 48 2B C1           sub         rax,rcx
  00000000000002B6: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000002BA: 48 83 F8 1F        cmp         rax,1Fh
  00000000000002BE: 77 37              ja          00000000000002F7
  00000000000002C0: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000002C5: 49 8B C7           mov         rax,r15
  00000000000002C8: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  00000000000002CC: 48 33 CC           xor         rcx,rsp
  00000000000002CF: E8 00 00 00 00     call        __security_check_cookie
  00000000000002D4: 48 8B 9C 24 E0 00  mov         rbx,qword ptr [rsp+0E0h]
                    00 00
  00000000000002DC: 0F 28 B4 24 90 00  movaps      xmm6,xmmword ptr [rsp+90h]
                    00 00
  00000000000002E4: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  00000000000002EB: 41 5F              pop         r15
  00000000000002ED: 41 5E              pop         r14
  00000000000002EF: 41 5D              pop         r13
  00000000000002F1: 41 5C              pop         r12
  00000000000002F3: 5F                 pop         rdi
  00000000000002F4: 5E                 pop         rsi
  00000000000002F5: 5D                 pop         rbp
  00000000000002F6: C3                 ret
  00000000000002F7: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000002FC: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,long double)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,void const *)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000016: 48 33 C4           xor         rax,rsp
  0000000000000019: 48 89 84 24 90 00  mov         qword ptr [rsp+90h],rax
                    00 00
  0000000000000021: 49 8B F1           mov         rsi,r9
  0000000000000024: 49 8B D8           mov         rbx,r8
  0000000000000027: 4C 8B 8C 24 E8 00  mov         r9,qword ptr [rsp+0E8h]
                    00 00
  000000000000002F: 4C 8D 05 00 00 00  lea         r8,[??_C@_02BBAHNLBA@?$CFp@]
                    00
  0000000000000036: 48 8B EA           mov         rbp,rdx
  0000000000000039: 48 8B F9           mov         rdi,rcx
  000000000000003C: BA 40 00 00 00     mov         edx,40h
  0000000000000041: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000046: E8 00 00 00 00     call        sprintf_s
  000000000000004B: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  000000000000004E: 0F B6 8C 24 E0 00  movzx       ecx,byte ptr [rsp+0E0h]
                    00 00
  0000000000000056: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  000000000000005B: 48 63 D0           movsxd      rdx,eax
  000000000000005E: 4C 8B CE           mov         r9,rsi
  0000000000000061: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000066: 48 8D 44 24 50     lea         rax,[rsp+50h]
  000000000000006B: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000070: 48 8B D5           mov         rdx,rbp
  0000000000000073: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  0000000000000077: 48 8B CF           mov         rcx,rdi
  000000000000007A: 0F 29 44 24 40     movaps      xmmword ptr [rsp+40h],xmm0
  000000000000007F: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  0000000000000084: 48 8B C5           mov         rax,rbp
  0000000000000087: 48 8B 8C 24 90 00  mov         rcx,qword ptr [rsp+90h]
                    00 00
  000000000000008F: 48 33 CC           xor         rcx,rsp
  0000000000000092: E8 00 00 00 00     call        __security_check_cookie
  0000000000000097: 48 8B 9C 24 C0 00  mov         rbx,qword ptr [rsp+0C0h]
                    00 00
  000000000000009F: 48 81 C4 A0 00 00  add         rsp,0A0h
                    00
  00000000000000A6: 5F                 pop         rdi
  00000000000000A7: 5E                 pop         rsi
  00000000000000A8: 5D                 pop         rbp
  00000000000000A9: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,__int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000016: 48 33 C4           xor         rax,rsp
  0000000000000019: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000021: 49 8B D9           mov         rbx,r9
  0000000000000024: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  0000000000000029: 48 8B FA           mov         rdi,rdx
  000000000000002C: 49 8B E8           mov         rbp,r8
  000000000000002F: 41 8B 51 18        mov         edx,dword ptr [r9+18h]
  0000000000000033: 48 8B F1           mov         rsi,rcx
  0000000000000036: 44 8B CA           mov         r9d,edx
  0000000000000039: 41 83 E1 20        and         r9d,20h
  000000000000003D: 74 05              je          0000000000000044
  000000000000003F: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  0000000000000044: 45 85 C9           test        r9d,r9d
  0000000000000047: 48 8D 44 24 51     lea         rax,[rsp+51h]
  000000000000004C: 48 8D 4C 24 52     lea         rcx,[rsp+52h]
  0000000000000051: 48 0F 45 C1        cmovne      rax,rcx
  0000000000000055: F6 C2 08           test        dl,8
  0000000000000058: 74 06              je          0000000000000060
  000000000000005A: C6 00 23           mov         byte ptr [rax],23h
  000000000000005D: 48 FF C0           inc         rax
  0000000000000060: 8B CA              mov         ecx,edx
  0000000000000062: 66 C7 00 49 36     mov         word ptr [rax],3649h
  0000000000000067: 81 E1 00 0E 00 00  and         ecx,0E00h
  000000000000006D: C6 40 02 34        mov         byte ptr [rax+2],34h
  0000000000000071: 81 F9 00 04 00 00  cmp         ecx,400h
  0000000000000077: 75 04              jne         000000000000007D
  0000000000000079: B2 6F              mov         dl,6Fh
  000000000000007B: EB 17              jmp         0000000000000094
  000000000000007D: 81 F9 00 08 00 00  cmp         ecx,800h
  0000000000000083: 74 04              je          0000000000000089
  0000000000000085: B2 64              mov         dl,64h
  0000000000000087: EB 0B              jmp         0000000000000094
  0000000000000089: C0 E2 03           shl         dl,3
  000000000000008C: F6 D2              not         dl
  000000000000008E: 80 E2 20           and         dl,20h
  0000000000000091: 80 CA 58           or          dl,58h
  0000000000000094: 4C 8B 8C 24 F8 00  mov         r9,qword ptr [rsp+0F8h]
                    00 00
  000000000000009C: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  00000000000000A1: 88 50 03           mov         byte ptr [rax+3],dl
  00000000000000A4: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A9: BA 40 00 00 00     mov         edx,40h
  00000000000000AE: C6 40 04 00        mov         byte ptr [rax+4],0
  00000000000000B2: E8 00 00 00 00     call        sprintf_s
  00000000000000B7: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000BB: 48 63 C8           movsxd      rcx,eax
  00000000000000BE: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000C3: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  00000000000000C8: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000CD: 0F B6 8C 24 F0 00  movzx       ecx,byte ptr [rsp+0F0h]
                    00 00
  00000000000000D5: 4C 8B CB           mov         r9,rbx
  00000000000000D8: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000DD: 48 8B D7           mov         rdx,rdi
  00000000000000E0: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000E4: 48 8B CE           mov         rcx,rsi
  00000000000000E7: 0F 29 44 24 40     movaps      xmmword ptr [rsp+40h],xmm0
  00000000000000EC: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000F1: 48 8B C7           mov         rax,rdi
  00000000000000F4: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000FC: 48 33 CC           xor         rcx,rsp
  00000000000000FF: E8 00 00 00 00     call        __security_check_cookie
  0000000000000104: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  000000000000010C: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000113: 5F                 pop         rdi
  0000000000000114: 5E                 pop         rsi
  0000000000000115: 5D                 pop         rbp
  0000000000000116: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,unsigned __int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000000F: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000016: 48 33 C4           xor         rax,rsp
  0000000000000019: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000021: 49 8B D9           mov         rbx,r9
  0000000000000024: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  0000000000000029: 48 8B FA           mov         rdi,rdx
  000000000000002C: 49 8B E8           mov         rbp,r8
  000000000000002F: 41 8B 51 18        mov         edx,dword ptr [r9+18h]
  0000000000000033: 48 8B F1           mov         rsi,rcx
  0000000000000036: 44 8B CA           mov         r9d,edx
  0000000000000039: 41 83 E1 20        and         r9d,20h
  000000000000003D: 74 05              je          0000000000000044
  000000000000003F: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  0000000000000044: 45 85 C9           test        r9d,r9d
  0000000000000047: 48 8D 44 24 51     lea         rax,[rsp+51h]
  000000000000004C: 48 8D 4C 24 52     lea         rcx,[rsp+52h]
  0000000000000051: 48 0F 45 C1        cmovne      rax,rcx
  0000000000000055: F6 C2 08           test        dl,8
  0000000000000058: 74 06              je          0000000000000060
  000000000000005A: C6 00 23           mov         byte ptr [rax],23h
  000000000000005D: 48 FF C0           inc         rax
  0000000000000060: 8B CA              mov         ecx,edx
  0000000000000062: 66 C7 00 49 36     mov         word ptr [rax],3649h
  0000000000000067: 81 E1 00 0E 00 00  and         ecx,0E00h
  000000000000006D: C6 40 02 34        mov         byte ptr [rax+2],34h
  0000000000000071: 81 F9 00 04 00 00  cmp         ecx,400h
  0000000000000077: 75 04              jne         000000000000007D
  0000000000000079: B2 6F              mov         dl,6Fh
  000000000000007B: EB 17              jmp         0000000000000094
  000000000000007D: 81 F9 00 08 00 00  cmp         ecx,800h
  0000000000000083: 74 04              je          0000000000000089
  0000000000000085: B2 75              mov         dl,75h
  0000000000000087: EB 0B              jmp         0000000000000094
  0000000000000089: C0 E2 03           shl         dl,3
  000000000000008C: F6 D2              not         dl
  000000000000008E: 80 E2 20           and         dl,20h
  0000000000000091: 80 CA 58           or          dl,58h
  0000000000000094: 4C 8B 8C 24 F8 00  mov         r9,qword ptr [rsp+0F8h]
                    00 00
  000000000000009C: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  00000000000000A1: 88 50 03           mov         byte ptr [rax+3],dl
  00000000000000A4: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A9: BA 40 00 00 00     mov         edx,40h
  00000000000000AE: C6 40 04 00        mov         byte ptr [rax+4],0
  00000000000000B2: E8 00 00 00 00     call        sprintf_s
  00000000000000B7: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000BB: 48 63 C8           movsxd      rcx,eax
  00000000000000BE: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000C3: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  00000000000000C8: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000CD: 0F B6 8C 24 F0 00  movzx       ecx,byte ptr [rsp+0F0h]
                    00 00
  00000000000000D5: 4C 8B CB           mov         r9,rbx
  00000000000000D8: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000DD: 48 8B D7           mov         rdx,rdi
  00000000000000E0: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000E4: 48 8B CE           mov         rcx,rsi
  00000000000000E7: 0F 29 44 24 40     movaps      xmmword ptr [rsp+40h],xmm0
  00000000000000EC: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000F1: 48 8B C7           mov         rax,rdi
  00000000000000F4: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000FC: 48 33 CC           xor         rcx,rsp
  00000000000000FF: E8 00 00 00 00     call        __security_check_cookie
  0000000000000104: 48 8B 9C 24 D0 00  mov         rbx,qword ptr [rsp+0D0h]
                    00 00
  000000000000010C: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  0000000000000113: 5F                 pop         rdi
  0000000000000114: 5E                 pop         rsi
  0000000000000115: 5D                 pop         rbp
  0000000000000116: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,bool)const ):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 55                 push        rbp
  0000000000000004: 53                 push        rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 57                 push        rdi
  0000000000000007: 41 54              push        r12
  0000000000000009: 41 55              push        r13
  000000000000000B: 41 56              push        r14
  000000000000000D: 41 57              push        r15
  000000000000000F: 48 8D 68 B1        lea         rbp,[rax-4Fh]
  0000000000000013: 48 81 EC D8 00 00  sub         rsp,0D8h
                    00
  000000000000001A: 0F 29 70 A8        movaps      xmmword ptr [rax-58h],xmm6
  000000000000001E: 0F 29 78 98        movaps      xmmword ptr [rax-68h],xmm7
  0000000000000022: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000029: 48 33 C4           xor         rax,rsp
  000000000000002C: 48 89 45 D7        mov         qword ptr [rbp-29h],rax
  0000000000000030: 4D 8B E9           mov         r13,r9
  0000000000000033: 4C 89 4C 24 40     mov         qword ptr [rsp+40h],r9
  0000000000000038: 4D 8B F8           mov         r15,r8
  000000000000003B: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  0000000000000040: 48 8B DA           mov         rbx,rdx
  0000000000000043: 48 89 54 24 48     mov         qword ptr [rsp+48h],rdx
  0000000000000048: 48 89 4D 87        mov         qword ptr [rbp-79h],rcx
  000000000000004C: 44 0F B6 65 77     movzx       r12d,byte ptr [rbp+77h]
  0000000000000051: 33 F6              xor         esi,esi
  0000000000000053: 41 F7 41 18 00 40  test        dword ptr [r9+18h],4000h
                    00 00
  000000000000005B: 75 2D              jne         000000000000008A
  000000000000005D: 41 0F 10 00        movups      xmm0,xmmword ptr [r8]
  0000000000000061: 0F 29 45 97        movaps      xmmword ptr [rbp-69h],xmm0
  0000000000000065: 44 0F B6 45 7F     movzx       r8d,byte ptr [rbp+7Fh]
  000000000000006A: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000006D: 4C 8B 52 48        mov         r10,qword ptr [rdx+48h]
  0000000000000071: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  0000000000000076: 44 88 64 24 20     mov         byte ptr [rsp+20h],r12b
  000000000000007B: 4C 8D 45 97        lea         r8,[rbp-69h]
  000000000000007F: 48 8B D3           mov         rdx,rbx
  0000000000000082: 41 FF D2           call        r10
  0000000000000085: E9 03 02 00 00     jmp         000000000000028D
  000000000000008A: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  000000000000008E: 48 8B 58 08        mov         rbx,qword ptr [rax+8]
  0000000000000092: 48 89 5D 9F        mov         qword ptr [rbp-61h],rbx
  0000000000000096: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000099: 48 8B CB           mov         rcx,rbx
  000000000000009C: FF 50 08           call        qword ptr [rax+8]
  000000000000009F: 90                 nop
  00000000000000A0: 48 8D 4D 97        lea         rcx,[rbp-69h]
  00000000000000A4: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  00000000000000A9: 48 8B F8           mov         rdi,rax
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 74 1F              je          00000000000000D0
  00000000000000B1: 48 8B 13           mov         rdx,qword ptr [rbx]
  00000000000000B4: 48 8B CB           mov         rcx,rbx
  00000000000000B7: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000BA: 48 85 C0           test        rax,rax
  00000000000000BD: 74 11              je          00000000000000D0
  00000000000000BF: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000C2: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000C5: BA 01 00 00 00     mov         edx,1
  00000000000000CA: 48 8B C8           mov         rcx,rax
  00000000000000CD: 41 FF D0           call        r8
  00000000000000D0: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000D3: 0F 11 45 B7        movups      xmmword ptr [rbp-49h],xmm0
  00000000000000D7: 48 89 75 C7        mov         qword ptr [rbp-39h],rsi
  00000000000000DB: 48 C7 45 CF 0F 00  mov         qword ptr [rbp-31h],0Fh
                    00 00
  00000000000000E3: C6 45 B7 00        mov         byte ptr [rbp-49h],0
  00000000000000E7: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000EA: 48 8D 55 97        lea         rdx,[rbp-69h]
  00000000000000EE: 48 8B CF           mov         rcx,rdi
  00000000000000F1: 80 7D 7F 00        cmp         byte ptr [rbp+7Fh],0
  00000000000000F5: 74 05              je          00000000000000FC
  00000000000000F7: FF 50 38           call        qword ptr [rax+38h]
  00000000000000FA: EB 03              jmp         00000000000000FF
  00000000000000FC: FF 50 30           call        qword ptr [rax+30h]
  00000000000000FF: 0F 10 75 A7        movups      xmm6,xmmword ptr [rbp-59h]
  0000000000000103: 0F 10 7D 97        movups      xmm7,xmmword ptr [rbp-69h]
  0000000000000107: 0F 11 75 C7        movups      xmmword ptr [rbp-39h],xmm6
  000000000000010B: 0F 11 7D B7        movups      xmmword ptr [rbp-49h],xmm7
  000000000000010F: 49 8B 75 28        mov         rsi,qword ptr [r13+28h]
  0000000000000113: 66 49 0F 7E F6     movq        r14,xmm6
  0000000000000118: 48 85 F6           test        rsi,rsi
  000000000000011B: 7E 0A              jle         0000000000000127
  000000000000011D: 49 3B F6           cmp         rsi,r14
  0000000000000120: 76 05              jbe         0000000000000127
  0000000000000122: 49 2B F6           sub         rsi,r14
  0000000000000125: EB 02              jmp         0000000000000129
  0000000000000127: 33 F6              xor         esi,esi
  0000000000000129: 41 8B 45 18        mov         eax,dword ptr [r13+18h]
  000000000000012D: 25 C0 01 00 00     and         eax,1C0h
  0000000000000132: 83 F8 40           cmp         eax,40h
  0000000000000135: 74 69              je          00000000000001A0
  0000000000000137: 41 0F 10 07        movups      xmm0,xmmword ptr [r15]
  000000000000013B: 0F 29 45 97        movaps      xmmword ptr [rbp-69h],xmm0
  000000000000013F: 48 85 F6           test        rsi,rsi
  0000000000000142: 74 56              je          000000000000019A
  0000000000000144: 48 8B 5D 9F        mov         rbx,qword ptr [rbp-61h]
  0000000000000148: 48 85 DB           test        rbx,rbx
  000000000000014B: 74 3F              je          000000000000018C
  000000000000014D: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000151: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000155: 74 24              je          000000000000017B
  0000000000000157: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  000000000000015B: 8B 01              mov         eax,dword ptr [rcx]
  000000000000015D: 85 C0              test        eax,eax
  000000000000015F: 7E 1A              jle         000000000000017B
  0000000000000161: FF C8              dec         eax
  0000000000000163: 89 01              mov         dword ptr [rcx],eax
  0000000000000165: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  0000000000000169: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000016C: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000170: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000173: 44 88 22           mov         byte ptr [rdx],r12b
  0000000000000176: 41 8B C4           mov         eax,r12d
  0000000000000179: EB 0C              jmp         0000000000000187
  000000000000017B: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000017E: 41 8B D4           mov         edx,r12d
  0000000000000181: 48 8B CB           mov         rcx,rbx
  0000000000000184: FF 50 18           call        qword ptr [rax+18h]
  0000000000000187: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000018A: 75 04              jne         0000000000000190
  000000000000018C: C6 45 97 01        mov         byte ptr [rbp-69h],1
  0000000000000190: 48 83 EE 01        sub         rsi,1
  0000000000000194: 75 B2              jne         0000000000000148
  0000000000000196: 0F 28 45 97        movaps      xmm0,xmmword ptr [rbp-69h]
  000000000000019A: 41 0F 11 07        movups      xmmword ptr [r15],xmm0
  000000000000019E: 33 F6              xor         esi,esi
  00000000000001A0: 48 8D 7D B7        lea         rdi,[rbp-49h]
  00000000000001A4: 66 49 0F 7E FF     movq        r15,xmm7
  00000000000001A9: 66 0F 73 DE 08     psrldq      xmm6,8
  00000000000001AE: 66 49 0F 7E F5     movq        r13,xmm6
  00000000000001B3: 49 83 FD 0F        cmp         r13,0Fh
  00000000000001B7: 49 0F 47 FF        cmova       rdi,r15
  00000000000001BB: 48 8B 44 24 38     mov         rax,qword ptr [rsp+38h]
  00000000000001C0: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000001C3: 0F 29 45 97        movaps      xmmword ptr [rbp-69h],xmm0
  00000000000001C7: 4D 85 F6           test        r14,r14
  00000000000001CA: 74 5D              je          0000000000000229
  00000000000001CC: 48 8B 5D 9F        mov         rbx,qword ptr [rbp-61h]
  00000000000001D0: 44 0F B6 07        movzx       r8d,byte ptr [rdi]
  00000000000001D4: 48 85 DB           test        rbx,rbx
  00000000000001D7: 74 3F              je          0000000000000218
  00000000000001D9: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  00000000000001DD: 48 83 38 00        cmp         qword ptr [rax],0
  00000000000001E1: 74 24              je          0000000000000207
  00000000000001E3: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  00000000000001E7: 8B 01              mov         eax,dword ptr [rcx]
  00000000000001E9: 85 C0              test        eax,eax
  00000000000001EB: 7E 1A              jle         0000000000000207
  00000000000001ED: FF C8              dec         eax
  00000000000001EF: 89 01              mov         dword ptr [rcx],eax
  00000000000001F1: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000001F5: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000001F8: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000001FC: 48 89 01           mov         qword ptr [rcx],rax
  00000000000001FF: 44 88 02           mov         byte ptr [rdx],r8b
  0000000000000202: 41 8B C0           mov         eax,r8d
  0000000000000205: EB 0C              jmp         0000000000000213
  0000000000000207: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000020A: 41 8B D0           mov         edx,r8d
  000000000000020D: 48 8B CB           mov         rcx,rbx
  0000000000000210: FF 50 18           call        qword ptr [rax+18h]
  0000000000000213: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000216: 75 04              jne         000000000000021C
  0000000000000218: C6 45 97 01        mov         byte ptr [rbp-69h],1
  000000000000021C: 48 FF C7           inc         rdi
  000000000000021F: 49 83 EE 01        sub         r14,1
  0000000000000223: 75 AB              jne         00000000000001D0
  0000000000000225: 0F 28 45 97        movaps      xmm0,xmmword ptr [rbp-69h]
  0000000000000229: 48 8B 44 24 40     mov         rax,qword ptr [rsp+40h]
  000000000000022E: 48 C7 40 28 00 00  mov         qword ptr [rax+28h],0
                    00 00
  0000000000000236: 66 0F 7F 45 97     movdqa      xmmword ptr [rbp-69h],xmm0
  000000000000023B: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  0000000000000240: 45 0F B6 CC        movzx       r9d,r12b
  0000000000000244: 4C 8D 45 97        lea         r8,[rbp-69h]
  0000000000000248: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000024D: 48 8B D3           mov         rdx,rbx
  0000000000000250: 48 8B 4D 87        mov         rcx,qword ptr [rbp-79h]
  0000000000000254: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000259: 90                 nop
  000000000000025A: 49 83 FD 0F        cmp         r13,0Fh
  000000000000025E: 76 2D              jbe         000000000000028D
  0000000000000260: 49 8D 55 01        lea         rdx,[r13+1]
  0000000000000264: 49 8B C7           mov         rax,r15
  0000000000000267: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000026E: 72 15              jb          0000000000000285
  0000000000000270: 48 83 C2 27        add         rdx,27h
  0000000000000274: 4D 8B 7F F8        mov         r15,qword ptr [r15-8]
  0000000000000278: 49 2B C7           sub         rax,r15
  000000000000027B: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000027F: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000283: 77 3B              ja          00000000000002C0
  0000000000000285: 49 8B CF           mov         rcx,r15
  0000000000000288: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000028D: 48 8B C3           mov         rax,rbx
  0000000000000290: 48 8B 4D D7        mov         rcx,qword ptr [rbp-29h]
  0000000000000294: 48 33 CC           xor         rcx,rsp
  0000000000000297: E8 00 00 00 00     call        __security_check_cookie
  000000000000029C: 0F 28 B4 24 C0 00  movaps      xmm6,xmmword ptr [rsp+0C0h]
                    00 00
  00000000000002A4: 0F 28 BC 24 B0 00  movaps      xmm7,xmmword ptr [rsp+0B0h]
                    00 00
  00000000000002AC: 48 81 C4 D8 00 00  add         rsp,0D8h
                    00
  00000000000002B3: 41 5F              pop         r15
  00000000000002B5: 41 5E              pop         r14
  00000000000002B7: 41 5D              pop         r13
  00000000000002B9: 41 5C              pop         r12
  00000000000002BB: 5F                 pop         rdi
  00000000000002BC: 5E                 pop         rsi
  00000000000002BD: 5B                 pop         rbx
  00000000000002BE: 5D                 pop         rbp
  00000000000002BF: C3                 ret
  00000000000002C0: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000002C5: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,bool)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,bool)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 80 00 00  lea         rcx,[rdx+80h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_thousands_sep@?$numpunct@D@std@@MEBADXZ (protected: virtual char __cdecl std::numpunct<char>::do_thousands_sep(void)const ):
  0000000000000000: 0F B6 41 19        movzx       eax,byte ptr [rcx+19h]
  0000000000000004: C3                 ret

?do_tolower@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_tolower(char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: 48 8D 51 10        lea         rdx,[rcx+10h]
  0000000000000007: 8B C8              mov         ecx,eax
  0000000000000009: E9 00 00 00 00     jmp         _Tolower

?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_tolower(char *,char const *)const ):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 49 8B F8           mov         rdi,r8
  000000000000000D: 48 8B DA           mov         rbx,rdx
  0000000000000010: 49 3B D0           cmp         rdx,r8
  0000000000000013: 74 25              je          000000000000003A
  0000000000000015: 48 89 74 24 30     mov         qword ptr [rsp+30h],rsi
  000000000000001A: 48 8D 71 10        lea         rsi,[rcx+10h]
  000000000000001E: 66 90              nop
  0000000000000020: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  0000000000000023: 48 8B D6           mov         rdx,rsi
  0000000000000026: E8 00 00 00 00     call        _Tolower
  000000000000002B: 88 03              mov         byte ptr [rbx],al
  000000000000002D: 48 FF C3           inc         rbx
  0000000000000030: 48 3B DF           cmp         rbx,rdi
  0000000000000033: 75 EB              jne         0000000000000020
  0000000000000035: 48 8B 74 24 30     mov         rsi,qword ptr [rsp+30h]
  000000000000003A: 48 8B C3           mov         rax,rbx
  000000000000003D: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

?do_toupper@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_toupper(char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: 48 8D 51 10        lea         rdx,[rcx+10h]
  0000000000000007: 8B C8              mov         ecx,eax
  0000000000000009: E9 00 00 00 00     jmp         _Toupper

?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_toupper(char *,char const *)const ):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 49 8B F8           mov         rdi,r8
  000000000000000D: 48 8B DA           mov         rbx,rdx
  0000000000000010: 49 3B D0           cmp         rdx,r8
  0000000000000013: 74 25              je          000000000000003A
  0000000000000015: 48 89 74 24 30     mov         qword ptr [rsp+30h],rsi
  000000000000001A: 48 8D 71 10        lea         rsi,[rcx+10h]
  000000000000001E: 66 90              nop
  0000000000000020: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  0000000000000023: 48 8B D6           mov         rdx,rsi
  0000000000000026: E8 00 00 00 00     call        _Toupper
  000000000000002B: 88 03              mov         byte ptr [rbx],al
  000000000000002D: 48 FF C3           inc         rbx
  0000000000000030: 48 3B DF           cmp         rbx,rdi
  0000000000000033: 75 EB              jne         0000000000000020
  0000000000000035: 48 8B 74 24 30     mov         rsi,qword ptr [rsp+30h]
  000000000000003A: 48 8B C3           mov         rax,rbx
  000000000000003D: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000042: 48 83 C4 20        add         rsp,20h
  0000000000000046: 5F                 pop         rdi
  0000000000000047: C3                 ret

?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_truename(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 28        mov         rdx,qword ptr [rcx+28h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000019: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  000000000000001C: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000020: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000024: 49 FF C0           inc         r8
  0000000000000027: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  000000000000002B: 75 F7              jne         0000000000000024
  000000000000002D: 48 8B CB           mov         rcx,rbx
  0000000000000030: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000035: 48 8B C3           mov         rax,rbx
  0000000000000038: 48 83 C4 30        add         rsp,30h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

?do_unshift@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_unshift(struct _Mbstatet &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 4C 89 00           mov         qword ptr [rax],r8
  0000000000000008: B8 03 00 00 00     mov         eax,3
  000000000000000D: C3                 ret

?do_widen@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_widen(char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: C3                 ret

?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_widen(char const *,char const *,char *)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 49 8B D8           mov         rbx,r8
  0000000000000009: 49 8B C9           mov         rcx,r9
  000000000000000C: 4C 2B C2           sub         r8,rdx
  000000000000000F: E8 00 00 00 00     call        memcpy
  0000000000000014: 48 8B C3           mov         rax,rbx
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: C3                 ret

?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z (public: virtual bool __cdecl std::error_category::equivalent(class std::error_code const &,int)const ):
  0000000000000000: 48 8B 42 08        mov         rax,qword ptr [rdx+8]
  0000000000000004: 4C 8B 48 08        mov         r9,qword ptr [rax+8]
  0000000000000008: 4C 39 49 08        cmp         qword ptr [rcx+8],r9
  000000000000000C: 75 08              jne         0000000000000016
  000000000000000E: 44 39 02           cmp         dword ptr [rdx],r8d
  0000000000000011: 75 03              jne         0000000000000016
  0000000000000013: B0 01              mov         al,1
  0000000000000015: C3                 ret
  0000000000000016: 32 C0              xor         al,al
  0000000000000018: C3                 ret

?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z (public: virtual bool __cdecl std::error_category::equivalent(int,class std::error_condition const &)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 49 8B D8           mov         rbx,r8
  000000000000000C: 44 8B C2           mov         r8d,edx
  000000000000000F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000014: FF 50 18           call        qword ptr [rax+18h]
  0000000000000017: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  000000000000001B: 4C 8B 48 08        mov         r9,qword ptr [rax+8]
  000000000000001F: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000023: 49 39 51 08        cmp         qword ptr [r9+8],rdx
  0000000000000027: 75 0E              jne         0000000000000037
  0000000000000029: 8B 0B              mov         ecx,dword ptr [rbx]
  000000000000002B: 39 08              cmp         dword ptr [rax],ecx
  000000000000002D: 75 08              jne         0000000000000037
  000000000000002F: B0 01              mov         al,1
  0000000000000031: 48 83 C4 30        add         rsp,30h
  0000000000000035: 5B                 pop         rbx
  0000000000000036: C3                 ret
  0000000000000037: 32 C0              xor         al,al
  0000000000000039: 48 83 C4 30        add         rsp,30h
  000000000000003D: 5B                 pop         rbx
  000000000000003E: C3                 ret

?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 70        sub         rsp,70h
  000000000000000C: 48 8B D9           mov         rbx,rcx
  000000000000000F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000012: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000016: 48 8B 74 0A 48     mov         rsi,qword ptr [rdx+rcx+48h]
  000000000000001B: 48 85 F6           test        rsi,rsi
  000000000000001E: 0F 84 AB 00 00 00  je          00000000000000CF
  0000000000000024: 48 8B D1           mov         rdx,rcx
  0000000000000027: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000002C: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000031: 90                 nop
  0000000000000032: 80 7C 24 28 00     cmp         byte ptr [rsp+28h],0
  0000000000000037: 74 65              je          000000000000009E
  0000000000000039: 33 FF              xor         edi,edi
  000000000000003B: 89 BC 24 98 00 00  mov         dword ptr [rsp+98h],edi
                    00
  0000000000000042: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000045: 48 8B CE           mov         rcx,rsi
  0000000000000048: FF 50 68           call        qword ptr [rax+68h]
  000000000000004B: 44 8B C7           mov         r8d,edi
  000000000000004E: BA 04 00 00 00     mov         edx,4
  0000000000000053: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000056: 44 0F 44 C2        cmove       r8d,edx
  000000000000005A: 44 89 84 24 98 00  mov         dword ptr [rsp+98h],r8d
                    00 00
  0000000000000062: EB 17              jmp         000000000000007B
$LN11:
  0000000000000064: 33 FF              xor         edi,edi
  0000000000000066: BA 04 00 00 00     mov         edx,4
  000000000000006B: 48 8B 9C 24 90 00  mov         rbx,qword ptr [rsp+90h]
                    00 00
  0000000000000073: 44 8B 84 24 98 00  mov         r8d,dword ptr [rsp+98h]
                    00 00
  000000000000007B: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000007E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000082: 48 03 CB           add         rcx,rbx
  0000000000000085: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  000000000000008A: 0F 45 D7           cmovne      edx,edi
  000000000000008D: 0B 51 10           or          edx,dword ptr [rcx+10h]
  0000000000000090: 41 0B D0           or          edx,r8d
  0000000000000093: 83 E2 17           and         edx,17h
  0000000000000096: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000099: 23 51 14           and         edx,dword ptr [rcx+14h]
  000000000000009C: 75 3C              jne         00000000000000DA
  000000000000009E: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  00000000000000A3: 85 C0              test        eax,eax
  00000000000000A5: 75 0B              jne         00000000000000B2
  00000000000000A7: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000000AC: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00000000000000B1: 90                 nop
  00000000000000B2: 48 8B 54 24 20     mov         rdx,qword ptr [rsp+20h]
  00000000000000B7: 48 8B 02           mov         rax,qword ptr [rdx]
  00000000000000BA: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000BE: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  00000000000000C3: 48 85 C9           test        rcx,rcx
  00000000000000C6: 74 07              je          00000000000000CF
  00000000000000C8: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000CB: FF 50 10           call        qword ptr [rax+10h]
  00000000000000CE: 90                 nop
  00000000000000CF: 48 8B C3           mov         rax,rbx
  00000000000000D2: 48 83 C4 70        add         rsp,70h
  00000000000000D6: 5F                 pop         rdi
  00000000000000D7: 5E                 pop         rsi
  00000000000000D8: 5B                 pop         rbx
  00000000000000D9: C3                 ret
  00000000000000DA: F6 C2 04           test        dl,4
  00000000000000DD: 74 09              je          00000000000000E8
  00000000000000DF: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000000E6: EB 15              jmp         00000000000000FD
  00000000000000E8: F6 C2 02           test        dl,2
  00000000000000EB: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000000F2: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000000F9: 48 0F 44 D8        cmove       rbx,rax
  00000000000000FD: BA 01 00 00 00     mov         edx,1
  0000000000000102: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000107: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000010C: 4C 8B C0           mov         r8,rax
  000000000000010F: 48 8B D3           mov         rdx,rbx
  0000000000000112: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000117: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000011C: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000123: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000128: E8 00 00 00 00     call        _CxxThrowException
  000000000000012D: CC                 int         3

?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::flush & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$10@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::flush & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)'::`1'::catch$10):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ$0:
  000000000000000D: 48 8B 8D 90 00 00  mov         rcx,qword ptr [rbp+90h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z (protected: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::imbue(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B CA           mov         rcx,rdx
  000000000000000C: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  0000000000000011: 48 8B D0           mov         rdx,rax
  0000000000000014: 48 8B CB           mov         rcx,rbx
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: E9 00 00 00 00     jmp         ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z

?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z (protected: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::imbue(class std::locale const &)):
  0000000000000000: C2 00 00           ret         0

?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z (protected: void __cdecl std::basic_ios<char,struct std::char_traits<char> >::init(class std::basic_streambuf<char,struct std::char_traits<char> > *,bool)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000014: 41 56              push        r14
  0000000000000016: 48 83 EC 60        sub         rsp,60h
  000000000000001A: 41 0F B6 F0        movzx       esi,r8b
  000000000000001E: 48 8B EA           mov         rbp,rdx
  0000000000000021: 48 8B D9           mov         rbx,rcx
  0000000000000024: 45 33 F6           xor         r14d,r14d
  0000000000000027: 4C 89 71 40        mov         qword ptr [rcx+40h],r14
  000000000000002B: 4C 89 71 08        mov         qword ptr [rcx+8],r14
  000000000000002F: 44 89 71 14        mov         dword ptr [rcx+14h],r14d
  0000000000000033: C7 41 18 01 02 00  mov         dword ptr [rcx+18h],201h
                    00
  000000000000003A: 48 C7 41 20 06 00  mov         qword ptr [rcx+20h],6
                    00 00
  0000000000000042: 4C 89 71 28        mov         qword ptr [rcx+28h],r14
  0000000000000046: 4C 89 71 30        mov         qword ptr [rcx+30h],r14
  000000000000004A: 4C 89 71 38        mov         qword ptr [rcx+38h],r14
  000000000000004E: 33 D2              xor         edx,edx
  0000000000000050: E8 00 00 00 00     call        ?clear@ios_base@std@@QEAAXH@Z
  0000000000000055: B9 10 00 00 00     mov         ecx,10h
  000000000000005A: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000005F: 48 8B F8           mov         rdi,rax
  0000000000000062: 48 85 C0           test        rax,rax
  0000000000000065: 74 0D              je          0000000000000074
  0000000000000067: B1 01              mov         cl,1
  0000000000000069: E8 00 00 00 00     call        ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
  000000000000006E: 48 89 47 08        mov         qword ptr [rdi+8],rax
  0000000000000072: EB 03              jmp         0000000000000077
  0000000000000074: 49 8B FE           mov         rdi,r14
  0000000000000077: 48 89 7B 40        mov         qword ptr [rbx+40h],rdi
  000000000000007B: 48 89 6B 48        mov         qword ptr [rbx+48h],rbp
  000000000000007F: 4C 89 73 50        mov         qword ptr [rbx+50h],r14
  0000000000000083: 48 8B 7F 08        mov         rdi,qword ptr [rdi+8]
  0000000000000087: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  000000000000008C: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000008F: 48 8B CF           mov         rcx,rdi
  0000000000000092: FF 50 08           call        qword ptr [rax+8]
  0000000000000095: 90                 nop
  0000000000000096: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000009B: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000A0: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000000A3: 4C 8B 42 40        mov         r8,qword ptr [rdx+40h]
  00000000000000A7: B2 20              mov         dl,20h
  00000000000000A9: 48 8B C8           mov         rcx,rax
  00000000000000AC: 41 FF D0           call        r8
  00000000000000AF: 0F B6 E8           movzx       ebp,al
  00000000000000B2: 48 85 FF           test        rdi,rdi
  00000000000000B5: 74 1F              je          00000000000000D6
  00000000000000B7: 48 8B 17           mov         rdx,qword ptr [rdi]
  00000000000000BA: 48 8B CF           mov         rcx,rdi
  00000000000000BD: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000C0: 48 85 C0           test        rax,rax
  00000000000000C3: 74 11              je          00000000000000D6
  00000000000000C5: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000C8: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000CB: BA 01 00 00 00     mov         edx,1
  00000000000000D0: 48 8B C8           mov         rcx,rax
  00000000000000D3: 41 FF D0           call        r8
  00000000000000D6: 40 88 6B 58        mov         byte ptr [rbx+58h],bpl
  00000000000000DA: 48 83 7B 48 00     cmp         qword ptr [rbx+48h],0
  00000000000000DF: 75 11              jne         00000000000000F2
  00000000000000E1: 8B 43 10           mov         eax,dword ptr [rbx+10h]
  00000000000000E4: 83 E0 13           and         eax,13h
  00000000000000E7: 83 C8 04           or          eax,4
  00000000000000EA: 89 43 10           mov         dword ptr [rbx+10h],eax
  00000000000000ED: 23 43 14           and         eax,dword ptr [rbx+14h]
  00000000000000F0: 75 28              jne         000000000000011A
  00000000000000F2: 40 84 F6           test        sil,sil
  00000000000000F5: 74 08              je          00000000000000FF
  00000000000000F7: 48 8B CB           mov         rcx,rbx
  00000000000000FA: E8 00 00 00 00     call        ?_Addstd@ios_base@std@@SAXPEAV12@@Z
  00000000000000FF: 4C 8D 5C 24 60     lea         r11,[rsp+60h]
  0000000000000104: 49 8B 5B 10        mov         rbx,qword ptr [r11+10h]
  0000000000000108: 49 8B 6B 18        mov         rbp,qword ptr [r11+18h]
  000000000000010C: 49 8B 73 20        mov         rsi,qword ptr [r11+20h]
  0000000000000110: 49 8B 7B 28        mov         rdi,qword ptr [r11+28h]
  0000000000000114: 49 8B E3           mov         rsp,r11
  0000000000000117: 41 5E              pop         r14
  0000000000000119: C3                 ret
  000000000000011A: A8 04              test        al,4
  000000000000011C: 74 09              je          0000000000000127
  000000000000011E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000125: EB 14              jmp         000000000000013B
  0000000000000127: A8 02              test        al,2
  0000000000000129: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000130: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000137: 48 0F 44 D8        cmove       rbx,rax
  000000000000013B: BA 01 00 00 00     mov         edx,1
  0000000000000140: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000145: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000014A: 4C 8B C0           mov         r8,rax
  000000000000014D: 48 8B D3           mov         rdx,rbx
  0000000000000150: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000155: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000015A: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000161: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000166: E8 00 00 00 00     call        _CxxThrowException
  000000000000016B: CC                 int         3

?dtor$1@?0??init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z@4HA (int `protected: void __cdecl std::basic_ios<char,struct std::char_traits<char> >::init(class basic_ios<char,struct std::char_traits<char> >::basic_streambuf<char,struct std::char_traits<char> > *,bool)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z (class std::error_code __cdecl std::make_error_code(enum std::io_errc)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B]
                    00
  0000000000000007: 89 11              mov         dword ptr [rcx],edx
  0000000000000009: 48 89 41 08        mov         qword ptr [rcx+8],rax
  000000000000000D: 48 8B C1           mov         rax,rcx
  0000000000000010: C3                 ret

?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z (public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Iostream_error_category2::message(int)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 33 FF              xor         edi,edi
  000000000000000C: 48 8B DA           mov         rbx,rdx
  000000000000000F: 41 83 F8 01        cmp         r8d,1
  0000000000000013: 75 5A              jne         000000000000006F
  0000000000000015: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000018: B9 20 00 00 00     mov         ecx,20h
  000000000000001D: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000020: 48 89 7A 10        mov         qword ptr [rdx+10h],rdi
  0000000000000024: 48 89 7A 18        mov         qword ptr [rdx+18h],rdi
  0000000000000028: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000002D: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000030: 48 C7 43 10 15 00  mov         qword ptr [rbx+10h],15h
                    00 00
  0000000000000038: 48 C7 43 18 1F 00  mov         qword ptr [rbx+18h],1Fh
                    00 00
  0000000000000040: 0F 10 05 00 00 00  movups      xmm0,xmmword ptr [?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB]
                    00
  0000000000000047: 0F 11 00           movups      xmmword ptr [rax],xmm0
  000000000000004A: 8B 0D 10 00 00 00  mov         ecx,dword ptr [?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB+10h]
  0000000000000050: 89 48 10           mov         dword ptr [rax+10h],ecx
  0000000000000053: 0F B6 0D 14 00 00  movzx       ecx,byte ptr [?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB+14h]
                    00
  000000000000005A: 88 48 14           mov         byte ptr [rax+14h],cl
  000000000000005D: 40 88 78 15        mov         byte ptr [rax+15h],dil
  0000000000000061: 48 8B C3           mov         rax,rbx
  0000000000000064: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000069: 48 83 C4 30        add         rsp,30h
  000000000000006D: 5F                 pop         rdi
  000000000000006E: C3                 ret
  000000000000006F: 41 8B C8           mov         ecx,r8d
  0000000000000072: E8 00 00 00 00     call        ?_Syserror_map@std@@YAPEBDH@Z
  0000000000000077: 0F 57 C0           xorps       xmm0,xmm0
  000000000000007A: 49 C7 C0 FF FF FF  mov         r8,0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000081: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000084: 48 89 7B 10        mov         qword ptr [rbx+10h],rdi
  0000000000000088: 48 89 7B 18        mov         qword ptr [rbx+18h],rdi
  000000000000008C: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000090: 49 FF C0           inc         r8
  0000000000000093: 42 38 3C 00        cmp         byte ptr [rax+r8],dil
  0000000000000097: 75 F7              jne         0000000000000090
  0000000000000099: 48 8B D0           mov         rdx,rax
  000000000000009C: 48 8B CB           mov         rcx,rbx
  000000000000009F: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  00000000000000A4: 48 8B C3           mov         rax,rbx
  00000000000000A7: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000AC: 48 83 C4 30        add         rsp,30h
  00000000000000B0: 5F                 pop         rdi
  00000000000000B1: C3                 ret

?name@_Iostream_error_category2@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::_Iostream_error_category2::name(void)const ):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_08LLGCOLLL@iostream@]
                    00
  0000000000000007: C3                 ret

?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ (public: static class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > __cdecl std::chrono::steady_clock::now(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: E8 00 00 00 00     call        _Query_perf_frequency
  0000000000000012: 48 8B F8           mov         rdi,rax
  0000000000000015: E8 00 00 00 00     call        _Query_perf_counter
  000000000000001A: 4C 8B C8           mov         r9,rax
  000000000000001D: 48 81 FF 80 96 98  cmp         rdi,989680h
                    00
  0000000000000024: 75 15              jne         000000000000003B
  0000000000000026: 49 6B C1 64        imul        rax,r9,64h
  000000000000002A: 48 89 03           mov         qword ptr [rbx],rax
  000000000000002D: 48 8B C3           mov         rax,rbx
  0000000000000030: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000035: 48 83 C4 20        add         rsp,20h
  0000000000000039: 5F                 pop         rdi
  000000000000003A: C3                 ret
  000000000000003B: 48 81 FF 00 36 6E  cmp         rdi,16E3600h
                    01
  0000000000000042: 75 65              jne         00000000000000A9
  0000000000000044: 49 BA F3 8C 90 94  mov         r10,0B2F4FC0794908CF3h
                    07 FC F4 B2
  000000000000004E: 49 8B C2           mov         rax,r10
  0000000000000051: 49 F7 E9           imul        r9
  0000000000000054: 49 8B C2           mov         rax,r10
  0000000000000057: 4D 8D 04 11        lea         r8,[r9+rdx]
  000000000000005B: 49 C1 F8 18        sar         r8,18h
  000000000000005F: 49 8B C8           mov         rcx,r8
  0000000000000062: 48 C1 E9 3F        shr         rcx,3Fh
  0000000000000066: 4C 03 C1           add         r8,rcx
  0000000000000069: 49 69 C8 00 36 6E  imul        rcx,r8,16E3600h
                    01
  0000000000000070: 4C 2B C9           sub         r9,rcx
  0000000000000073: 49 69 C9 00 CA 9A  imul        rcx,r9,3B9ACA00h
                    3B
  000000000000007A: 48 F7 E9           imul        rcx
  000000000000007D: 48 03 D1           add         rdx,rcx
  0000000000000080: 48 C1 FA 18        sar         rdx,18h
  0000000000000084: 48 8B C2           mov         rax,rdx
  0000000000000087: 48 C1 E8 3F        shr         rax,3Fh
  000000000000008B: 48 03 D0           add         rdx,rax
  000000000000008E: 49 69 C0 00 CA 9A  imul        rax,r8,3B9ACA00h
                    3B
  0000000000000095: 48 03 D0           add         rdx,rax
  0000000000000098: 48 8B C3           mov         rax,rbx
  000000000000009B: 48 89 13           mov         qword ptr [rbx],rdx
  000000000000009E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000A3: 48 83 C4 20        add         rsp,20h
  00000000000000A7: 5F                 pop         rdi
  00000000000000A8: C3                 ret
  00000000000000A9: 48 99              cqo
  00000000000000AB: 48 F7 FF           idiv        rax,rdi
  00000000000000AE: 48 8B C8           mov         rcx,rax
  00000000000000B1: 48 69 C2 00 CA 9A  imul        rax,rdx,3B9ACA00h
                    3B
  00000000000000B8: 48 69 C9 00 CA 9A  imul        rcx,rcx,3B9ACA00h
                    3B
  00000000000000BF: 48 99              cqo
  00000000000000C1: 48 F7 FF           idiv        rax,rdi
  00000000000000C4: 48 03 C1           add         rax,rcx
  00000000000000C7: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000CA: 48 8B C3           mov         rax,rbx
  00000000000000CD: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000D2: 48 83 C4 20        add         rsp,20h
  00000000000000D6: 5F                 pop         rdi
  00000000000000D7: C3                 ret

?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::overflow(int)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  000000000000000D: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000014: 48 33 C4           xor         rax,rsp
  0000000000000017: 48 89 44 24 78     mov         qword ptr [rsp+78h],rax
  000000000000001C: 8B FA              mov         edi,edx
  000000000000001E: 48 8B D9           mov         rbx,rcx
  0000000000000021: 83 FA FF           cmp         edx,0FFFFFFFFh
  0000000000000024: 75 07              jne         000000000000002D
  0000000000000026: 33 C0              xor         eax,eax
  0000000000000028: E9 4E 01 00 00     jmp         000000000000017B
  000000000000002D: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000031: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000034: 48 85 D2           test        rdx,rdx
  0000000000000037: 74 2E              je          0000000000000067
  0000000000000039: 48 8B 41 58        mov         rax,qword ptr [rcx+58h]
  000000000000003D: 4C 63 00           movsxd      r8,dword ptr [rax]
  0000000000000040: 4A 8D 0C 02        lea         rcx,[rdx+r8]
  0000000000000044: 48 3B D1           cmp         rdx,rcx
  0000000000000047: 73 1E              jae         0000000000000067
  0000000000000049: 41 8D 48 FF        lea         ecx,[r8-1]
  000000000000004D: 89 08              mov         dword ptr [rax],ecx
  000000000000004F: 8B C7              mov         eax,edi
  0000000000000051: 48 8B 53 40        mov         rdx,qword ptr [rbx+40h]
  0000000000000055: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000058: 49 8D 48 01        lea         rcx,[r8+1]
  000000000000005C: 48 89 0A           mov         qword ptr [rdx],rcx
  000000000000005F: 41 88 38           mov         byte ptr [r8],dil
  0000000000000062: E9 14 01 00 00     jmp         000000000000017B
  0000000000000067: 48 83 BB 80 00 00  cmp         qword ptr [rbx+80h],0
                    00 00
  000000000000006F: 48 89 B4 24 A0 00  mov         qword ptr [rsp+0A0h],rsi
                    00 00
  0000000000000077: 0F 84 F1 00 00 00  je          000000000000016E
  000000000000007D: 4C 8B 43 18        mov         r8,qword ptr [rbx+18h]
  0000000000000081: 48 8D 43 70        lea         rax,[rbx+70h]
  0000000000000085: 49 39 00           cmp         qword ptr [r8],rax
  0000000000000088: 75 20              jne         00000000000000AA
  000000000000008A: 48 8B 8B 88 00 00  mov         rcx,qword ptr [rbx+88h]
                    00
  0000000000000091: 48 8B 93 90 00 00  mov         rdx,qword ptr [rbx+90h]
                    00
  0000000000000098: 49 89 08           mov         qword ptr [r8],rcx
  000000000000009B: 2B D1              sub         edx,ecx
  000000000000009D: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  00000000000000A1: 48 89 08           mov         qword ptr [rax],rcx
  00000000000000A4: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  00000000000000A8: 89 10              mov         dword ptr [rax],edx
  00000000000000AA: 48 8B 4B 68        mov         rcx,qword ptr [rbx+68h]
  00000000000000AE: 48 85 C9           test        rcx,rcx
  00000000000000B1: 75 06              jne         00000000000000B9
  00000000000000B3: 40 0F BE CF        movsx       ecx,dil
  00000000000000B7: EB 54              jmp         000000000000010D
  00000000000000B9: 4C 8D 44 24 48     lea         r8,[rsp+48h]
  00000000000000BE: 40 88 7C 24 40     mov         byte ptr [rsp+40h],dil
  00000000000000C3: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000C6: 48 8D 53 74        lea         rdx,[rbx+74h]
  00000000000000CA: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  00000000000000CF: 4C 8D 4C 24 41     lea         r9,[rsp+41h]
  00000000000000D4: 4C 8D 44 24 78     lea         r8,[rsp+78h]
  00000000000000D9: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  00000000000000DE: 4C 8D 44 24 58     lea         r8,[rsp+58h]
  00000000000000E3: 4C 89 44 24 28     mov         qword ptr [rsp+28h],r8
  00000000000000E8: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  00000000000000ED: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  00000000000000F2: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000F7: FF 50 38           call        qword ptr [rax+38h]
  00000000000000FA: 85 C0              test        eax,eax
  00000000000000FC: 74 29              je          0000000000000127
  00000000000000FE: 83 E8 01           sub         eax,1
  0000000000000101: 74 24              je          0000000000000127
  0000000000000103: 83 F8 02           cmp         eax,2
  0000000000000106: 75 66              jne         000000000000016E
  0000000000000108: 0F BE 4C 24 40     movsx       ecx,byte ptr [rsp+40h]
  000000000000010D: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  0000000000000114: E8 00 00 00 00     call        fputc
  0000000000000119: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  000000000000011E: 3B C1              cmp         eax,ecx
  0000000000000120: 0F 45 CF           cmovne      ecx,edi
  0000000000000123: 8B C1              mov         eax,ecx
  0000000000000125: EB 4C              jmp         0000000000000173
  0000000000000127: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  000000000000012C: 48 8D 44 24 58     lea         rax,[rsp+58h]
  0000000000000131: 48 2B F0           sub         rsi,rax
  0000000000000134: 74 1E              je          0000000000000154
  0000000000000136: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  000000000000013D: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000142: 4C 8B C6           mov         r8,rsi
  0000000000000145: BA 01 00 00 00     mov         edx,1
  000000000000014A: E8 00 00 00 00     call        fwrite
  000000000000014F: 48 3B F0           cmp         rsi,rax
  0000000000000152: 75 1A              jne         000000000000016E
  0000000000000154: 48 8D 44 24 40     lea         rax,[rsp+40h]
  0000000000000159: C6 43 71 01        mov         byte ptr [rbx+71h],1
  000000000000015D: 48 39 44 24 50     cmp         qword ptr [rsp+50h],rax
  0000000000000162: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  0000000000000167: 0F 45 CF           cmovne      ecx,edi
  000000000000016A: 8B C1              mov         eax,ecx
  000000000000016C: EB 05              jmp         0000000000000173
  000000000000016E: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000173: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  000000000000017B: 48 8B 4C 24 78     mov         rcx,qword ptr [rsp+78h]
  0000000000000180: 48 33 CC           xor         rcx,rsp
  0000000000000183: E8 00 00 00 00     call        __security_check_cookie
  0000000000000188: 48 8B 9C 24 A8 00  mov         rbx,qword ptr [rsp+0A8h]
                    00 00
  0000000000000190: 48 81 C4 80 00 00  add         rsp,80h
                    00
  0000000000000197: 5F                 pop         rdi
  0000000000000198: C3                 ret

?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::overflow(int)):
  0000000000000000: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000005: C3                 ret

?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::pbackfail(int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 8B FA              mov         edi,edx
  0000000000000013: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000016: 48 85 C9           test        rcx,rcx
  0000000000000019: 74 38              je          0000000000000053
  000000000000001B: 48 8B 43 18        mov         rax,qword ptr [rbx+18h]
  000000000000001F: 48 39 08           cmp         qword ptr [rax],rcx
  0000000000000022: 73 2F              jae         0000000000000053
  0000000000000024: 83 FA FF           cmp         edx,0FFFFFFFFh
  0000000000000027: 74 08              je          0000000000000031
  0000000000000029: 0F B6 41 FF        movzx       eax,byte ptr [rcx-1]
  000000000000002D: 3B C2              cmp         eax,edx
  000000000000002F: 75 22              jne         0000000000000053
  0000000000000031: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000035: FF 00              inc         dword ptr [rax]
  0000000000000037: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  000000000000003B: 48 FF 08           dec         qword ptr [rax]
  000000000000003E: 33 C0              xor         eax,eax
  0000000000000040: 83 FF FF           cmp         edi,0FFFFFFFFh
  0000000000000043: 0F 44 F8           cmove       edi,eax
  0000000000000046: 8B C7              mov         eax,edi
  0000000000000048: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004D: 48 83 C4 20        add         rsp,20h
  0000000000000051: 5F                 pop         rdi
  0000000000000052: C3                 ret
  0000000000000053: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  000000000000005A: 48 85 D2           test        rdx,rdx
  000000000000005D: 74 72              je          00000000000000D1
  000000000000005F: 83 FF FF           cmp         edi,0FFFFFFFFh
  0000000000000062: 74 6D              je          00000000000000D1
  0000000000000064: 48 83 7B 68 00     cmp         qword ptr [rbx+68h],0
  0000000000000069: 75 0E              jne         0000000000000079
  000000000000006B: 40 0F B6 CF        movzx       ecx,dil
  000000000000006F: E8 00 00 00 00     call        ungetc
  0000000000000074: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000077: 75 CD              jne         0000000000000046
  0000000000000079: 4C 8B 4B 38        mov         r9,qword ptr [rbx+38h]
  000000000000007D: 48 8D 53 70        lea         rdx,[rbx+70h]
  0000000000000081: 49 39 11           cmp         qword ptr [r9],rdx
  0000000000000084: 74 4B              je          00000000000000D1
  0000000000000086: 4C 8B 53 18        mov         r10,qword ptr [rbx+18h]
  000000000000008A: 4C 8D 43 50        lea         r8,[rbx+50h]
  000000000000008E: 40 88 3A           mov         byte ptr [rdx],dil
  0000000000000091: 49 8B 02           mov         rax,qword ptr [r10]
  0000000000000094: 48 3B C2           cmp         rax,rdx
  0000000000000097: 74 17              je          00000000000000B0
  0000000000000099: 48 89 83 88 00 00  mov         qword ptr [rbx+88h],rax
                    00
  00000000000000A0: 49 8B 00           mov         rax,qword ptr [r8]
  00000000000000A3: 48 63 08           movsxd      rcx,dword ptr [rax]
  00000000000000A6: 49 03 09           add         rcx,qword ptr [r9]
  00000000000000A9: 48 89 8B 90 00 00  mov         qword ptr [rbx+90h],rcx
                    00
  00000000000000B0: 49 89 12           mov         qword ptr [r10],rdx
  00000000000000B3: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  00000000000000B7: 2B DA              sub         ebx,edx
  00000000000000B9: 83 C3 71           add         ebx,71h
  00000000000000BC: 48 89 10           mov         qword ptr [rax],rdx
  00000000000000BF: 49 8B 00           mov         rax,qword ptr [r8]
  00000000000000C2: 89 18              mov         dword ptr [rax],ebx
  00000000000000C4: 8B C7              mov         eax,edi
  00000000000000C6: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000CB: 48 83 C4 20        add         rsp,20h
  00000000000000CF: 5F                 pop         rdi
  00000000000000D0: C3                 ret
  00000000000000D1: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000D6: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  00000000000000DB: 48 83 C4 20        add         rsp,20h
  00000000000000DF: 5F                 pop         rdi
  00000000000000E0: C3                 ret

?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::pbackfail(int)):
  0000000000000000: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000005: C3                 ret

?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 70        sub         rsp,70h
  000000000000000C: 0F B6 F2           movzx       esi,dl
  000000000000000F: 48 8B D9           mov         rbx,rcx
  0000000000000012: 33 FF              xor         edi,edi
  0000000000000014: 89 BC 24 A0 00 00  mov         dword ptr [rsp+0A0h],edi
                    00
  000000000000001B: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000020: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000023: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000027: 49 8B 4C 08 48     mov         rcx,qword ptr [r8+rcx+48h]
  000000000000002C: 48 85 C9           test        rcx,rcx
  000000000000002F: 74 07              je          0000000000000038
  0000000000000031: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000034: FF 50 08           call        qword ptr [rax+8]
  0000000000000037: 90                 nop
  0000000000000038: 48 8B 0B           mov         rcx,qword ptr [rbx]
  000000000000003B: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000003F: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  0000000000000044: 74 04              je          000000000000004A
  0000000000000046: 32 C0              xor         al,al
  0000000000000048: EB 2A              jmp         0000000000000074
  000000000000004A: 48 8B 44 18 50     mov         rax,qword ptr [rax+rbx+50h]
  000000000000004F: 48 85 C0           test        rax,rax
  0000000000000052: 74 1E              je          0000000000000072
  0000000000000054: 48 3B C3           cmp         rax,rbx
  0000000000000057: 74 19              je          0000000000000072
  0000000000000059: 48 8B C8           mov         rcx,rax
  000000000000005C: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000061: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000064: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  0000000000000068: 83 7C 18 10 00     cmp         dword ptr [rax+rbx+10h],0
  000000000000006D: 0F 94 C0           sete        al
  0000000000000070: EB 02              jmp         0000000000000074
  0000000000000072: B0 01              mov         al,1
  0000000000000074: 88 44 24 28        mov         byte ptr [rsp+28h],al
  0000000000000078: 84 C0              test        al,al
  000000000000007A: 75 0A              jne         0000000000000086
  000000000000007C: BA 04 00 00 00     mov         edx,4
  0000000000000081: 44 8B C2           mov         r8d,edx
  0000000000000084: EB 6E              jmp         00000000000000F4
  0000000000000086: 48 63 41 04        movsxd      rax,dword ptr [rcx+4]
  000000000000008A: 48 8B 4C 18 48     mov         rcx,qword ptr [rax+rbx+48h]
  000000000000008F: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000093: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000097: 74 23              je          00000000000000BC
  0000000000000099: 48 8B 51 58        mov         rdx,qword ptr [rcx+58h]
  000000000000009D: 8B 02              mov         eax,dword ptr [rdx]
  000000000000009F: 85 C0              test        eax,eax
  00000000000000A1: 7E 19              jle         00000000000000BC
  00000000000000A3: FF C8              dec         eax
  00000000000000A5: 89 02              mov         dword ptr [rdx],eax
  00000000000000A7: 48 8B 49 40        mov         rcx,qword ptr [rcx+40h]
  00000000000000AB: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000000AE: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000000B2: 48 89 01           mov         qword ptr [rcx],rax
  00000000000000B5: 40 88 32           mov         byte ptr [rdx],sil
  00000000000000B8: 8B C6              mov         eax,esi
  00000000000000BA: EB 08              jmp         00000000000000C4
  00000000000000BC: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000BF: 8B D6              mov         edx,esi
  00000000000000C1: FF 50 18           call        qword ptr [rax+18h]
  00000000000000C4: 44 8B C7           mov         r8d,edi
  00000000000000C7: BA 04 00 00 00     mov         edx,4
  00000000000000CC: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000000CF: 44 0F 44 C2        cmove       r8d,edx
  00000000000000D3: 44 89 84 24 A0 00  mov         dword ptr [rsp+0A0h],r8d
                    00 00
  00000000000000DB: EB 17              jmp         00000000000000F4
$LN11:
  00000000000000DD: 33 FF              xor         edi,edi
  00000000000000DF: BA 04 00 00 00     mov         edx,4
  00000000000000E4: 48 8B 9C 24 90 00  mov         rbx,qword ptr [rsp+90h]
                    00 00
  00000000000000EC: 44 8B 84 24 A0 00  mov         r8d,dword ptr [rsp+0A0h]
                    00 00
  00000000000000F4: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000F7: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000FB: 48 03 CB           add         rcx,rbx
  00000000000000FE: 44 0B 41 10        or          r8d,dword ptr [rcx+10h]
  0000000000000102: 48 83 79 48 00     cmp         qword ptr [rcx+48h],0
  0000000000000107: 0F 45 D7           cmovne      edx,edi
  000000000000010A: 41 0B D0           or          edx,r8d
  000000000000010D: 83 E2 17           and         edx,17h
  0000000000000110: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000113: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000116: 75 35              jne         000000000000014D
  0000000000000118: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000011D: 85 C0              test        eax,eax
  000000000000011F: 75 09              jne         000000000000012A
  0000000000000121: 48 8B CB           mov         rcx,rbx
  0000000000000124: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000129: 90                 nop
  000000000000012A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000012D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000131: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000136: 48 85 C9           test        rcx,rcx
  0000000000000139: 74 07              je          0000000000000142
  000000000000013B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000013E: FF 50 10           call        qword ptr [rax+10h]
  0000000000000141: 90                 nop
  0000000000000142: 48 8B C3           mov         rax,rbx
  0000000000000145: 48 83 C4 70        add         rsp,70h
  0000000000000149: 5F                 pop         rdi
  000000000000014A: 5E                 pop         rsi
  000000000000014B: 5B                 pop         rbx
  000000000000014C: C3                 ret
  000000000000014D: F6 C2 04           test        dl,4
  0000000000000150: 74 09              je          000000000000015B
  0000000000000152: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000159: EB 15              jmp         0000000000000170
  000000000000015B: F6 C2 02           test        dl,2
  000000000000015E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000165: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000016C: 48 0F 44 D8        cmove       rbx,rax
  0000000000000170: BA 01 00 00 00     mov         edx,1
  0000000000000175: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000017A: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000017F: 4C 8B C0           mov         r8,rax
  0000000000000182: 48 8B D3           mov         rdx,rbx
  0000000000000185: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000018A: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000018F: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000196: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000019B: E8 00 00 00 00     call        _CxxThrowException
  00000000000001A0: CC                 int         3

?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::put & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::put & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::put & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  000000000000000D: 48 8B 8D 90 00 00  mov         rcx,qword ptr [rbp+90h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001B: 48 03 D1           add         rdx,rcx
  000000000000001E: 8B 42 10           mov         eax,dword ptr [rdx+10h]
  0000000000000021: 83 C8 04           or          eax,4
  0000000000000024: B9 04 00 00 00     mov         ecx,4
  0000000000000029: 45 33 C0           xor         r8d,r8d
  000000000000002C: 4C 39 42 48        cmp         qword ptr [rdx+48h],r8
  0000000000000030: 41 0F 45 C8        cmovne      ecx,r8d
  0000000000000034: 0B C8              or          ecx,eax
  0000000000000036: 83 E1 17           and         ecx,17h
  0000000000000039: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003C: 85 4A 14           test        dword ptr [rdx+14h],ecx
  000000000000003F: 74 0A              je          000000000000004B
  0000000000000041: 33 D2              xor         edx,edx
  0000000000000043: 33 C9              xor         ecx,ecx
  0000000000000045: E8 00 00 00 00     call        _CxxThrowException
  000000000000004A: 90                 nop
  000000000000004B: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000055: 48 83 C4 20        add         rsp,20h
  0000000000000059: 5D                 pop         rbp
  000000000000005A: C3                 ret
  000000000000005B: CC                 int         3

?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 4C 8B 51 38        mov         r10,qword ptr [rcx+38h]
  0000000000000018: 48 8D 41 70        lea         rax,[rcx+70h]
  000000000000001C: 41 8B E9           mov         ebp,r9d
  000000000000001F: 49 8B F0           mov         rsi,r8
  0000000000000022: 48 8B DA           mov         rbx,rdx
  0000000000000025: 48 8B F9           mov         rdi,rcx
  0000000000000028: 49 39 02           cmp         qword ptr [r10],rax
  000000000000002B: 75 10              jne         000000000000003D
  000000000000002D: 41 83 F9 01        cmp         r9d,1
  0000000000000031: 75 0A              jne         000000000000003D
  0000000000000033: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  0000000000000038: 75 03              jne         000000000000003D
  000000000000003A: 48 FF CE           dec         rsi
  000000000000003D: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000045: 74 54              je          000000000000009B
  0000000000000047: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  000000000000004C: 84 C0              test        al,al
  000000000000004E: 74 4B              je          000000000000009B
  0000000000000050: 48 85 F6           test        rsi,rsi
  0000000000000053: 75 05              jne         000000000000005A
  0000000000000055: 83 FD 01           cmp         ebp,1
  0000000000000058: 74 16              je          0000000000000070
  000000000000005A: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000061: 44 8B C5           mov         r8d,ebp
  0000000000000064: 48 8B D6           mov         rdx,rsi
  0000000000000067: E8 00 00 00 00     call        _fseeki64
  000000000000006C: 85 C0              test        eax,eax
  000000000000006E: 75 2B              jne         000000000000009B
  0000000000000070: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000077: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  000000000000007C: E8 00 00 00 00     call        fgetpos
  0000000000000081: 85 C0              test        eax,eax
  0000000000000083: 75 16              jne         000000000000009B
  0000000000000085: 48 8B CF           mov         rcx,rdi
  0000000000000088: E8 00 00 00 00     call        ?_Reset_back@?$basic_filebuf@DU?$char_traits@D@std@@@std@@AEAAXXZ
  000000000000008D: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000092: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  0000000000000096: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000099: EB 09              jmp         00000000000000A4
  000000000000009B: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  00000000000000A2: 33 C0              xor         eax,eax
  00000000000000A4: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  00000000000000A9: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  00000000000000AE: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  00000000000000B6: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  00000000000000BA: 48 8B C3           mov         rax,rbx
  00000000000000BD: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000C2: 48 83 C4 20        add         rsp,20h
  00000000000000C6: 5F                 pop         rdi
  00000000000000C7: C3                 ret

?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 48 C7 02 FF FF FF  mov         qword ptr [rdx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000009: 48 C7 42 08 00 00  mov         qword ptr [rdx+8],0
                    00 00
  0000000000000011: 48 89 42 10        mov         qword ptr [rdx+10h],rax
  0000000000000015: 48 8B C2           mov         rax,rdx
  0000000000000018: C3                 ret

?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 49 8B 40 08        mov         rax,qword ptr [r8+8]
  0000000000000013: 49 8B F0           mov         rsi,r8
  0000000000000016: 49 03 00           add         rax,qword ptr [r8]
  0000000000000019: 48 8B DA           mov         rbx,rdx
  000000000000001C: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000024: 48 8B F9           mov         rdi,rcx
  0000000000000027: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000002C: 74 61              je          000000000000008F
  000000000000002E: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  0000000000000033: 84 C0              test        al,al
  0000000000000035: 74 58              je          000000000000008F
  0000000000000037: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000003E: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000043: E8 00 00 00 00     call        fsetpos
  0000000000000048: 85 C0              test        eax,eax
  000000000000004A: 75 43              jne         000000000000008F
  000000000000004C: 48 8B 46 10        mov         rax,qword ptr [rsi+10h]
  0000000000000050: 4C 8B 47 18        mov         r8,qword ptr [rdi+18h]
  0000000000000054: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  0000000000000058: 48 8D 47 70        lea         rax,[rdi+70h]
  000000000000005C: 49 39 00           cmp         qword ptr [r8],rax
  000000000000005F: 75 20              jne         0000000000000081
  0000000000000061: 48 8B 8F 88 00 00  mov         rcx,qword ptr [rdi+88h]
                    00
  0000000000000068: 48 8B 97 90 00 00  mov         rdx,qword ptr [rdi+90h]
                    00
  000000000000006F: 49 89 08           mov         qword ptr [r8],rcx
  0000000000000072: 2B D1              sub         edx,ecx
  0000000000000074: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000078: 48 89 08           mov         qword ptr [rax],rcx
  000000000000007B: 48 8B 47 50        mov         rax,qword ptr [rdi+50h]
  000000000000007F: 89 10              mov         dword ptr [rax],edx
  0000000000000081: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000086: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  000000000000008A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000008D: EB 09              jmp         0000000000000098
  000000000000008F: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000096: 33 C0              xor         eax,eax
  0000000000000098: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000009D: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  00000000000000A5: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  00000000000000A9: 48 8B C3           mov         rax,rbx
  00000000000000AC: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000B1: 48 83 C4 20        add         rsp,20h
  00000000000000B5: 5F                 pop         rdi
  00000000000000B6: C3                 ret

?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 48 C7 02 FF FF FF  mov         qword ptr [rdx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000009: 48 C7 42 08 00 00  mov         qword ptr [rdx+8],0
                    00 00
  0000000000000011: 48 89 42 10        mov         qword ptr [rdx+10h],rax
  0000000000000015: 48 8B C2           mov         rax,rdx
  0000000000000018: C3                 ret

?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z (protected: virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::setbuf(char *,__int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 4D 8B C8           mov         r9,r8
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: 48 85 D2           test        rdx,rdx
  000000000000000F: 75 0D              jne         000000000000001E
  0000000000000011: 4D 85 C0           test        r8,r8
  0000000000000014: 75 08              jne         000000000000001E
  0000000000000016: 41 B8 04 00 00 00  mov         r8d,4
  000000000000001C: EB 03              jmp         0000000000000021
  000000000000001E: 45 33 C0           xor         r8d,r8d
  0000000000000021: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000028: 48 85 C9           test        rcx,rcx
  000000000000002B: 74 27              je          0000000000000054
  000000000000002D: E8 00 00 00 00     call        setvbuf
  0000000000000032: 85 C0              test        eax,eax
  0000000000000034: 75 1E              jne         0000000000000054
  0000000000000036: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  000000000000003D: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000043: 48 8B CB           mov         rcx,rbx
  0000000000000046: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  000000000000004B: 48 8B C3           mov         rax,rbx
  000000000000004E: 48 83 C4 20        add         rsp,20h
  0000000000000052: 5B                 pop         rbx
  0000000000000053: C3                 ret
  0000000000000054: 33 C0              xor         eax,eax
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5B                 pop         rbx
  000000000000005B: C3                 ret

?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z (protected: virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::setbuf(char *,__int64)):
  0000000000000000: 48 8B C1           mov         rax,rcx
  0000000000000003: C3                 ret

?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::showmanyc(void)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: C3                 ret

?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ (public: int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::snextc(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000015: 74 42              je          0000000000000059
  0000000000000017: 48 8B 49 50        mov         rcx,qword ptr [rcx+50h]
  000000000000001B: 8B 01              mov         eax,dword ptr [rcx]
  000000000000001D: 83 F8 01           cmp         eax,1
  0000000000000020: 7E 1C              jle         000000000000003E
  0000000000000022: FF C8              dec         eax
  0000000000000024: 89 01              mov         dword ptr [rcx],eax
  0000000000000026: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  000000000000002A: 48 FF 00           inc         qword ptr [rax]
  000000000000002D: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000030: 0F B6 00           movzx       eax,byte ptr [rax]
  0000000000000033: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5F                 pop         rdi
  000000000000003D: C3                 ret
  000000000000003E: 85 C0              test        eax,eax
  0000000000000040: 7E 17              jle         0000000000000059
  0000000000000042: FF C8              dec         eax
  0000000000000044: 89 01              mov         dword ptr [rcx],eax
  0000000000000046: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  000000000000004A: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000004D: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000051: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000054: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000057: EB 09              jmp         0000000000000062
  0000000000000059: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000005C: 48 8B CB           mov         rcx,rbx
  000000000000005F: FF 50 38           call        qword ptr [rax+38h]
  0000000000000062: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000065: 75 0B              jne         0000000000000072
  0000000000000067: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000006C: 48 83 C4 20        add         rsp,20h
  0000000000000070: 5F                 pop         rdi
  0000000000000071: C3                 ret
  0000000000000072: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  0000000000000076: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000079: 48 85 C9           test        rcx,rcx
  000000000000007C: 74 17              je          0000000000000095
  000000000000007E: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000082: 83 38 00           cmp         dword ptr [rax],0
  0000000000000085: 7E 0E              jle         0000000000000095
  0000000000000087: 0F B6 01           movzx       eax,byte ptr [rcx]
  000000000000008A: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000008F: 48 83 C4 20        add         rsp,20h
  0000000000000093: 5F                 pop         rdi
  0000000000000094: C3                 ret
  0000000000000095: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000098: 48 8B CB           mov         rcx,rbx
  000000000000009B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000A0: 48 83 C4 20        add         rsp,20h
  00000000000000A4: 5F                 pop         rdi
  00000000000000A5: 48 FF 60 30        jmp         qword ptr [rax+30h]

?sum_array@@YA_JPEAHH@Z (__int64 __cdecl sum_array(int *,int)):
  0000000000000000: 48 83 EC 08        sub         rsp,8
  0000000000000004: 45 33 C0           xor         r8d,r8d
  0000000000000007: 4C 63 DA           movsxd      r11,edx
  000000000000000A: 4C 8B D1           mov         r10,rcx
  000000000000000D: 45 8B C8           mov         r9d,r8d
  0000000000000010: 41 8B C8           mov         ecx,r8d
  0000000000000013: 85 D2              test        edx,edx
  0000000000000015: 7E 62              jle         0000000000000079
  0000000000000017: 41 83 FB 04        cmp         r11d,4
  000000000000001B: 72 5C              jb          0000000000000079
  000000000000001D: 83 3D 00 00 00 00  cmp         dword ptr [__isa_available],2
                    02
  0000000000000024: 7C 53              jl          0000000000000079
  0000000000000026: 49 8B D3           mov         rdx,r11
  0000000000000029: 0F 57 DB           xorps       xmm3,xmm3
  000000000000002C: 48 83 E2 FC        and         rdx,0FFFFFFFFFFFFFFFCh
  0000000000000030: 0F 57 D2           xorps       xmm2,xmm2
  0000000000000033: 41 8B C0           mov         eax,r8d
  0000000000000036: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000040: 66 41 0F 38 25 0C  pmovsxdq    xmm1,mmword ptr [r10+rax*4]
                    82
  0000000000000047: 66 0F D4 D9        paddq       xmm3,xmm1
  000000000000004B: 83 C1 04           add         ecx,4
  000000000000004E: 66 41 0F 38 25 4C  pmovsxdq    xmm1,mmword ptr [r10+rax*4+8]
                    82 08
  0000000000000056: 48 83 C0 04        add         rax,4
  000000000000005A: 66 0F D4 D1        paddq       xmm2,xmm1
  000000000000005E: 48 3B C2           cmp         rax,rdx
  0000000000000061: 7C DD              jl          0000000000000040
  0000000000000063: 66 0F D4 D3        paddq       xmm2,xmm3
  0000000000000067: 66 0F 6F C2        movdqa      xmm0,xmm2
  000000000000006B: 66 0F 73 D8 08     psrldq      xmm0,8
  0000000000000070: 66 0F D4 D0        paddq       xmm2,xmm0
  0000000000000074: 66 49 0F 7E D1     movq        r9,xmm2
  0000000000000079: 48 63 C1           movsxd      rax,ecx
  000000000000007C: 49 8B D0           mov         rdx,r8
  000000000000007F: 49 3B C3           cmp         rax,r11
  0000000000000082: 7D 50              jge         00000000000000D4
  0000000000000084: 49 8B CB           mov         rcx,r11
  0000000000000087: 48 2B C8           sub         rcx,rax
  000000000000008A: 48 83 F9 02        cmp         rcx,2
  000000000000008E: 7C 31              jl          00000000000000C1
  0000000000000090: 48 89 1C 24        mov         qword ptr [rsp],rbx
  0000000000000094: 49 8D 5B FF        lea         rbx,[r11-1]
  0000000000000098: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  00000000000000A0: 49 63 0C 82        movsxd      rcx,dword ptr [r10+rax*4]
  00000000000000A4: 4C 03 C1           add         r8,rcx
  00000000000000A7: 49 63 4C 82 04     movsxd      rcx,dword ptr [r10+rax*4+4]
  00000000000000AC: 48 03 D1           add         rdx,rcx
  00000000000000AF: 48 83 C0 02        add         rax,2
  00000000000000B3: 48 3B C3           cmp         rax,rbx
  00000000000000B6: 7C E8              jl          00000000000000A0
  00000000000000B8: 48 8B 1C 24        mov         rbx,qword ptr [rsp]
  00000000000000BC: 49 3B C3           cmp         rax,r11
  00000000000000BF: 7D 07              jge         00000000000000C8
  00000000000000C1: 49 63 0C 82        movsxd      rcx,dword ptr [r10+rax*4]
  00000000000000C5: 4C 03 C9           add         r9,rcx
  00000000000000C8: 4A 8D 04 02        lea         rax,[rdx+r8]
  00000000000000CC: 49 03 C1           add         rax,r9
  00000000000000CF: 48 83 C4 08        add         rsp,8
  00000000000000D3: C3                 ret
  00000000000000D4: 49 8B C1           mov         rax,r9
  00000000000000D7: 48 83 C4 08        add         rsp,8
  00000000000000DB: C3                 ret

?sum_array_unrolled@@YA_JPEAHH@Z (__int64 __cdecl sum_array_unrolled(int *,int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 48 83 EC 18        sub         rsp,18h
  000000000000000D: 48 C7 44 24 08 00  mov         qword ptr [rsp+8],0
                    00 00 00
  0000000000000016: C7 04 24 00 00 00  mov         dword ptr [rsp],0
                    00
  000000000000001D: EB 09              jmp         0000000000000028
  000000000000001F: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000022: 83 C0 04           add         eax,4
  0000000000000025: 89 04 24           mov         dword ptr [rsp],eax
  0000000000000028: 8B 44 24 28        mov         eax,dword ptr [rsp+28h]
  000000000000002C: 39 04 24           cmp         dword ptr [rsp],eax
  000000000000002F: 0F 8D 84 00 00 00  jge         00000000000000B9
  0000000000000035: 48 63 04 24        movsxd      rax,dword ptr [rsp]
  0000000000000039: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000003E: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000042: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000047: 48 03 C8           add         rcx,rax
  000000000000004A: 48 8B C1           mov         rax,rcx
  000000000000004D: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000052: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000055: FF C0              inc         eax
  0000000000000057: 48 98              cdqe
  0000000000000059: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000005E: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000062: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000067: 48 03 C8           add         rcx,rax
  000000000000006A: 48 8B C1           mov         rax,rcx
  000000000000006D: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000072: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000075: 83 C0 02           add         eax,2
  0000000000000078: 48 98              cdqe
  000000000000007A: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000007F: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000083: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000088: 48 03 C8           add         rcx,rax
  000000000000008B: 48 8B C1           mov         rax,rcx
  000000000000008E: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000093: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000096: 83 C0 03           add         eax,3
  0000000000000099: 48 98              cdqe
  000000000000009B: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000000A0: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  00000000000000A4: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  00000000000000A9: 48 03 C8           add         rcx,rax
  00000000000000AC: 48 8B C1           mov         rax,rcx
  00000000000000AF: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  00000000000000B4: E9 66 FF FF FF     jmp         000000000000001F
  00000000000000B9: 48 8B 44 24 08     mov         rax,qword ptr [rsp+8]
  00000000000000BE: 48 83 C4 18        add         rsp,18h
  00000000000000C2: C3                 ret

?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::sync(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 74 2C              je          000000000000003F
  0000000000000013: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000016: BA FF FF FF FF     mov         edx,0FFFFFFFFh
  000000000000001B: FF 50 18           call        qword ptr [rax+18h]
  000000000000001E: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000021: 74 1C              je          000000000000003F
  0000000000000023: 48 8B 8B 80 00 00  mov         rcx,qword ptr [rbx+80h]
                    00
  000000000000002A: E8 00 00 00 00     call        fflush
  000000000000002F: 33 C9              xor         ecx,ecx
  0000000000000031: 85 C0              test        eax,eax
  0000000000000033: 0F 99 C1           setns       cl
  0000000000000036: 8D 41 FF           lea         eax,[rcx-1]
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5B                 pop         rbx
  000000000000003E: C3                 ret
  000000000000003F: 33 C0              xor         eax,eax
  0000000000000041: 48 83 C4 20        add         rsp,20h
  0000000000000045: 5B                 pop         rbx
  0000000000000046: C3                 ret

?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sync(void)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: C3                 ret

?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 8B EC           mov         rbp,rsp
  0000000000000011: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  0000000000000018: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000001F: 48 33 C4           xor         rax,rsp
  0000000000000022: 48 89 45 F8        mov         qword ptr [rbp-8],rax
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000002D: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000030: 48 85 C9           test        rcx,rcx
  0000000000000033: 74 2C              je          0000000000000061
  0000000000000035: 48 8B 56 50        mov         rdx,qword ptr [rsi+50h]
  0000000000000039: 4C 63 0A           movsxd      r9,dword ptr [rdx]
  000000000000003C: 4A 8D 04 09        lea         rax,[rcx+r9]
  0000000000000040: 48 3B C8           cmp         rcx,rax
  0000000000000043: 73 1C              jae         0000000000000061
  0000000000000045: 41 8D 41 FF        lea         eax,[r9-1]
  0000000000000049: 89 02              mov         dword ptr [rdx],eax
  000000000000004B: 48 8B 4E 38        mov         rcx,qword ptr [rsi+38h]
  000000000000004F: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000052: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000056: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000059: 0F B6 02           movzx       eax,byte ptr [rdx]
  000000000000005C: E9 F1 01 00 00     jmp         0000000000000252
  0000000000000061: 48 83 BE 80 00 00  cmp         qword ptr [rsi+80h],0
                    00 00
  0000000000000069: 75 0A              jne         0000000000000075
  000000000000006B: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000070: E9 DD 01 00 00     jmp         0000000000000252
  0000000000000075: 4C 8B 4E 18        mov         r9,qword ptr [rsi+18h]
  0000000000000079: 48 8D 46 70        lea         rax,[rsi+70h]
  000000000000007D: 49 39 01           cmp         qword ptr [r9],rax
  0000000000000080: 75 20              jne         00000000000000A2
  0000000000000082: 48 8B 96 90 00 00  mov         rdx,qword ptr [rsi+90h]
                    00
  0000000000000089: 48 8B 8E 88 00 00  mov         rcx,qword ptr [rsi+88h]
                    00
  0000000000000090: 49 89 09           mov         qword ptr [r9],rcx
  0000000000000093: 48 8B 46 38        mov         rax,qword ptr [rsi+38h]
  0000000000000097: 48 89 08           mov         qword ptr [rax],rcx
  000000000000009A: 2B D1              sub         edx,ecx
  000000000000009C: 48 8B 46 50        mov         rax,qword ptr [rsi+50h]
  00000000000000A0: 89 10              mov         dword ptr [rax],edx
  00000000000000A2: 48 8B 8E 80 00 00  mov         rcx,qword ptr [rsi+80h]
                    00
  00000000000000A9: 48 83 7E 68 00     cmp         qword ptr [rsi+68h],0
  00000000000000AE: 75 1B              jne         00000000000000CB
  00000000000000B0: E8 00 00 00 00     call        fgetc
  00000000000000B5: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000000B8: BB FF FF FF FF     mov         ebx,0FFFFFFFFh
  00000000000000BD: 0F 84 8D 01 00 00  je          0000000000000250
  00000000000000C3: 0F B6 D8           movzx       ebx,al
  00000000000000C6: E9 85 01 00 00     jmp         0000000000000250
  00000000000000CB: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000CE: 0F 11 45 D8        movups      xmmword ptr [rbp-28h],xmm0
  00000000000000D2: 48 C7 45 E8 00 00  mov         qword ptr [rbp-18h],0
                    00 00
  00000000000000DA: 48 C7 45 F0 0F 00  mov         qword ptr [rbp-10h],0Fh
                    00 00
  00000000000000E2: C6 45 D8 00        mov         byte ptr [rbp-28h],0
  00000000000000E6: E8 00 00 00 00     call        fgetc
  00000000000000EB: 44 8B C0           mov         r8d,eax
  00000000000000EE: 83 F8 FF           cmp         eax,0FFFFFFFFh
  00000000000000F1: 0F 84 19 01 00 00  je          0000000000000210
  00000000000000F7: 0F B6 5D C1        movzx       ebx,byte ptr [rbp-3Fh]
  00000000000000FB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  0000000000000100: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  0000000000000104: 48 8B 55 F0        mov         rdx,qword ptr [rbp-10h]
  0000000000000108: 48 3B CA           cmp         rcx,rdx
  000000000000010B: 73 20              jae         000000000000012D
  000000000000010D: 48 8D 41 01        lea         rax,[rcx+1]
  0000000000000111: 48 89 45 E8        mov         qword ptr [rbp-18h],rax
  0000000000000115: 48 8D 45 D8        lea         rax,[rbp-28h]
  0000000000000119: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000011D: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000122: 44 88 04 08        mov         byte ptr [rax+rcx],r8b
  0000000000000126: C6 44 08 01 00     mov         byte ptr [rax+rcx+1],0
  000000000000012B: EB 16              jmp         0000000000000143
  000000000000012D: 45 0F B6 C8        movzx       r9d,r8b
  0000000000000131: 44 0F B6 C3        movzx       r8d,bl
  0000000000000135: BA 01 00 00 00     mov         edx,1
  000000000000013A: 48 8D 4D D8        lea         rcx,[rbp-28h]
  000000000000013E: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z
  0000000000000143: 4C 8B 5E 68        mov         r11,qword ptr [rsi+68h]
  0000000000000147: 48 8D 55 D8        lea         rdx,[rbp-28h]
  000000000000014B: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000150: 48 0F 47 55 D8     cmova       rdx,qword ptr [rbp-28h]
  0000000000000155: 4C 8B 4D E8        mov         r9,qword ptr [rbp-18h]
  0000000000000159: 4C 03 CA           add         r9,rdx
  000000000000015C: 4C 8D 45 D8        lea         r8,[rbp-28h]
  0000000000000160: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000165: 4C 0F 47 45 D8     cmova       r8,qword ptr [rbp-28h]
  000000000000016A: 49 8B 03           mov         rax,qword ptr [r11]
  000000000000016D: 48 8D 4D D0        lea         rcx,[rbp-30h]
  0000000000000171: 48 89 4C 24 38     mov         qword ptr [rsp+38h],rcx
  0000000000000176: 48 8D 4D C1        lea         rcx,[rbp-3Fh]
  000000000000017A: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  000000000000017F: 48 8D 4D C0        lea         rcx,[rbp-40h]
  0000000000000183: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000188: 48 8D 4D C8        lea         rcx,[rbp-38h]
  000000000000018C: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000191: 48 8D 56 74        lea         rdx,[rsi+74h]
  0000000000000195: 49 8B CB           mov         rcx,r11
  0000000000000198: FF 50 30           call        qword ptr [rax+30h]
  000000000000019B: 85 C0              test        eax,eax
  000000000000019D: 74 09              je          00000000000001A8
  000000000000019F: 83 E8 01           sub         eax,1
  00000000000001A2: 0F 85 CE 00 00 00  jne         0000000000000276
  00000000000001A8: 48 8D 45 C0        lea         rax,[rbp-40h]
  00000000000001AC: 48 39 45 D0        cmp         qword ptr [rbp-30h],rax
  00000000000001B0: 48 8D 45 D8        lea         rax,[rbp-28h]
  00000000000001B4: 0F 85 D4 00 00 00  jne         000000000000028E
  00000000000001BA: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001BF: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  00000000000001C4: 4C 8B 4D C8        mov         r9,qword ptr [rbp-38h]
  00000000000001C8: 4C 2B C8           sub         r9,rax
  00000000000001CB: 48 8B 7D E8        mov         rdi,qword ptr [rbp-18h]
  00000000000001CF: 49 3B F9           cmp         rdi,r9
  00000000000001D2: 4C 0F 42 CF        cmovb       r9,rdi
  00000000000001D6: 48 8D 4D D8        lea         rcx,[rbp-28h]
  00000000000001DA: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001DF: 48 0F 47 4D D8     cmova       rcx,qword ptr [rbp-28h]
  00000000000001E4: 49 2B F9           sub         rdi,r9
  00000000000001E7: 4C 8D 47 01        lea         r8,[rdi+1]
  00000000000001EB: 4A 8D 14 09        lea         rdx,[rcx+r9]
  00000000000001EF: E8 00 00 00 00     call        memmove
  00000000000001F4: 48 89 7D E8        mov         qword ptr [rbp-18h],rdi
  00000000000001F8: 48 8B 8E 80 00 00  mov         rcx,qword ptr [rsi+80h]
                    00
  00000000000001FF: E8 00 00 00 00     call        fgetc
  0000000000000204: 44 8B C0           mov         r8d,eax
  0000000000000207: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000020A: 0F 85 F0 FE FF FF  jne         0000000000000100
  0000000000000210: BB FF FF FF FF     mov         ebx,0FFFFFFFFh
  0000000000000215: 48 8B 55 F0        mov         rdx,qword ptr [rbp-10h]
  0000000000000219: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000021D: 76 31              jbe         0000000000000250
  000000000000021F: 48 FF C2           inc         rdx
  0000000000000222: 48 8B 4D D8        mov         rcx,qword ptr [rbp-28h]
  0000000000000226: 48 8B C1           mov         rax,rcx
  0000000000000229: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000230: 72 19              jb          000000000000024B
  0000000000000232: 48 83 C2 27        add         rdx,27h
  0000000000000236: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000023A: 48 2B C1           sub         rax,rcx
  000000000000023D: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000241: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000245: 0F 87 8C 00 00 00  ja          00000000000002D7
  000000000000024B: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000250: 8B C3              mov         eax,ebx
  0000000000000252: 48 8B 4D F8        mov         rcx,qword ptr [rbp-8]
  0000000000000256: 48 33 CC           xor         rcx,rsp
  0000000000000259: E8 00 00 00 00     call        __security_check_cookie
  000000000000025E: 4C 8D 9C 24 80 00  lea         r11,[rsp+80h]
                    00 00
  0000000000000266: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  000000000000026A: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  000000000000026E: 49 8B E3           mov         rsp,r11
  0000000000000271: 41 5E              pop         r14
  0000000000000273: 5F                 pop         rdi
  0000000000000274: 5D                 pop         rbp
  0000000000000275: C3                 ret
  0000000000000276: 83 F8 02           cmp         eax,2
  0000000000000279: 75 95              jne         0000000000000210
  000000000000027B: 48 8D 45 D8        lea         rax,[rbp-28h]
  000000000000027F: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000284: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000289: 0F BE 18           movsx       ebx,byte ptr [rax]
  000000000000028C: EB 87              jmp         0000000000000215
  000000000000028E: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000293: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000298: 48 8B 5D E8        mov         rbx,qword ptr [rbp-18h]
  000000000000029C: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  00000000000002A0: 48 2B D9           sub         rbx,rcx
  00000000000002A3: 48 03 D8           add         rbx,rax
  00000000000002A6: 48 85 DB           test        rbx,rbx
  00000000000002A9: 7E 23              jle         00000000000002CE
  00000000000002AB: 0F 1F 44 00 00     nop         dword ptr [rax+rax]
  00000000000002B0: 48 FF CB           dec         rbx
  00000000000002B3: 0F BE 0C 0B        movsx       ecx,byte ptr [rbx+rcx]
  00000000000002B7: 48 8B 96 80 00 00  mov         rdx,qword ptr [rsi+80h]
                    00
  00000000000002BE: E8 00 00 00 00     call        ungetc
  00000000000002C3: 48 85 DB           test        rbx,rbx
  00000000000002C6: 7E 06              jle         00000000000002CE
  00000000000002C8: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  00000000000002CC: EB E2              jmp         00000000000002B0
  00000000000002CE: 0F B6 5D C0        movzx       ebx,byte ptr [rbp-40h]
  00000000000002D2: E9 3E FF FF FF     jmp         0000000000000215
  00000000000002D7: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000002DC: CC                 int         3

?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA (int `protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::uflow(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: FF 50 30           call        qword ptr [rax+30h]
  000000000000000F: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000012: 75 06              jne         000000000000001A
  0000000000000014: 48 83 C4 20        add         rsp,20h
  0000000000000018: 5B                 pop         rbx
  0000000000000019: C3                 ret
  000000000000001A: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  000000000000001E: FF 08              dec         dword ptr [rax]
  0000000000000020: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  0000000000000024: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000027: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000002B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000002E: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000031: 48 83 C4 20        add         rsp,20h
  0000000000000035: 5B                 pop         rbx
  0000000000000036: C3                 ret

?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::underflow(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000010: 48 85 C9           test        rcx,rcx
  0000000000000013: 74 18              je          000000000000002D
  0000000000000015: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000019: 48 63 10           movsxd      rdx,dword ptr [rax]
  000000000000001C: 48 03 D1           add         rdx,rcx
  000000000000001F: 48 3B CA           cmp         rcx,rdx
  0000000000000022: 73 09              jae         000000000000002D
  0000000000000024: 0F B6 01           movzx       eax,byte ptr [rcx]
  0000000000000027: 48 83 C4 20        add         rsp,20h
  000000000000002B: 5B                 pop         rbx
  000000000000002C: C3                 ret
  000000000000002D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000030: 48 8B CB           mov         rcx,rbx
  0000000000000033: 48 89 7C 24 30     mov         qword ptr [rsp+30h],rdi
  0000000000000038: FF 50 38           call        qword ptr [rax+38h]
  000000000000003B: 8B F8              mov         edi,eax
  000000000000003D: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000040: 75 0B              jne         000000000000004D
  0000000000000042: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  0000000000000047: 48 83 C4 20        add         rsp,20h
  000000000000004B: 5B                 pop         rbx
  000000000000004C: C3                 ret
  000000000000004D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000050: 8B D7              mov         edx,edi
  0000000000000052: 48 8B CB           mov         rcx,rbx
  0000000000000055: FF 50 20           call        qword ptr [rax+20h]
  0000000000000058: 8B C7              mov         eax,edi
  000000000000005A: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  000000000000005F: 48 83 C4 20        add         rsp,20h
  0000000000000063: 5B                 pop         rbx
  0000000000000064: C3                 ret

?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::underflow(void)):
  0000000000000000: B8 FF FF FF FF     mov         eax,0FFFFFFFFh
  0000000000000005: C3                 ret

?what@exception@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::exception::what(void)const ):
  0000000000000000: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_C@_0BC@EOODALEL@Unknown?5exception@]
                    00
  000000000000000B: 48 85 D2           test        rdx,rdx
  000000000000000E: 48 0F 45 C2        cmovne      rax,rdx
  0000000000000012: C3                 ret

?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z (public: char __cdecl std::basic_ios<char,struct std::char_traits<char> >::widen(char)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 0F B6 DA           movzx       ebx,dl
  000000000000000D: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000011: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000015: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  000000000000001A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000001D: 48 8B CF           mov         rcx,rdi
  0000000000000020: FF 50 08           call        qword ptr [rax+8]
  0000000000000023: 90                 nop
  0000000000000024: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000029: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  000000000000002E: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000031: 4C 8B 42 40        mov         r8,qword ptr [rdx+40h]
  0000000000000035: 0F B6 D3           movzx       edx,bl
  0000000000000038: 48 8B C8           mov         rcx,rax
  000000000000003B: 41 FF D0           call        r8
  000000000000003E: 0F B6 D8           movzx       ebx,al
  0000000000000041: 48 85 FF           test        rdi,rdi
  0000000000000044: 74 22              je          0000000000000068
  0000000000000046: 48 8B 17           mov         rdx,qword ptr [rdi]
  0000000000000049: 48 8B CF           mov         rcx,rdi
  000000000000004C: FF 52 10           call        qword ptr [rdx+10h]
  000000000000004F: 48 85 C0           test        rax,rax
  0000000000000052: 74 11              je          0000000000000065
  0000000000000054: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000057: 4C 8B 01           mov         r8,qword ptr [rcx]
  000000000000005A: BA 01 00 00 00     mov         edx,1
  000000000000005F: 48 8B C8           mov         rcx,rax
  0000000000000062: 41 FF D0           call        r8
  0000000000000065: 0F B6 C3           movzx       eax,bl
  0000000000000068: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000006D: 48 83 C4 30        add         rsp,30h
  0000000000000071: 5F                 pop         rdi
  0000000000000072: C3                 ret

?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA (int `public: char __cdecl std::basic_ios<char,struct std::char_traits<char> >::widen(char)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsgetn(char *,__int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 41 56              push        r14
  0000000000000005: 48 83 EC 20        sub         rsp,20h
  0000000000000009: 49 8B E8           mov         rbp,r8
  000000000000000C: 4C 8B F2           mov         r14,rdx
  000000000000000F: 48 8B D9           mov         rbx,rcx
  0000000000000012: 4D 85 C0           test        r8,r8
  0000000000000015: 7F 0B              jg          0000000000000022
  0000000000000017: 33 C0              xor         eax,eax
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 41 5E              pop         r14
  000000000000001F: 5D                 pop         rbp
  0000000000000020: 5B                 pop         rbx
  0000000000000021: C3                 ret
  0000000000000022: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  0000000000000027: 48 89 74 24 40     mov         qword ptr [rsp+40h],rsi
  000000000000002C: 48 89 7C 24 48     mov         qword ptr [rsp+48h],rdi
  0000000000000031: 0F 84 7F 00 00 00  je          00000000000000B6
  0000000000000037: 48 8B FD           mov         rdi,rbp
  000000000000003A: 4C 89 7C 24 50     mov         qword ptr [rsp+50h],r15
  000000000000003F: 48 8D 71 50        lea         rsi,[rcx+50h]
  0000000000000043: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  0000000000000047: 48 8B 10           mov         rdx,qword ptr [rax]
  000000000000004A: 48 85 D2           test        rdx,rdx
  000000000000004D: 74 34              je          0000000000000083
  000000000000004F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000052: 48 63 08           movsxd      rcx,dword ptr [rax]
  0000000000000055: 85 C9              test        ecx,ecx
  0000000000000057: 7E 2A              jle         0000000000000083
  0000000000000059: 48 3B F9           cmp         rdi,rcx
  000000000000005C: 4C 8B FF           mov         r15,rdi
  000000000000005F: 4C 0F 4D F9        cmovge      r15,rcx
  0000000000000063: 49 8B CE           mov         rcx,r14
  0000000000000066: 4D 8B C7           mov         r8,r15
  0000000000000069: E8 00 00 00 00     call        memcpy
  000000000000006E: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000071: 49 2B FF           sub         rdi,r15
  0000000000000074: 44 29 38           sub         dword ptr [rax],r15d
  0000000000000077: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  000000000000007B: 49 63 C7           movsxd      rax,r15d
  000000000000007E: 48 01 01           add         qword ptr [rcx],rax
  0000000000000081: EB 1E              jmp         00000000000000A1
  0000000000000083: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000086: 48 8B CB           mov         rcx,rbx
  0000000000000089: FF 50 38           call        qword ptr [rax+38h]
  000000000000008C: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000008F: 74 18              je          00000000000000A9
  0000000000000091: 41 88 06           mov         byte ptr [r14],al
  0000000000000094: 48 8D 73 50        lea         rsi,[rbx+50h]
  0000000000000098: 48 FF CF           dec         rdi
  000000000000009B: 41 BF 01 00 00 00  mov         r15d,1
  00000000000000A1: 4D 03 F7           add         r14,r15
  00000000000000A4: 48 85 FF           test        rdi,rdi
  00000000000000A7: 7F 9A              jg          0000000000000043
  00000000000000A9: 4C 8B 7C 24 50     mov         r15,qword ptr [rsp+50h]
  00000000000000AE: 48 2B EF           sub         rbp,rdi
  00000000000000B1: E9 E9 00 00 00     jmp         000000000000019F
  00000000000000B6: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000BA: 48 8B F5           mov         rsi,rbp
  00000000000000BD: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000000C0: 48 85 D2           test        rdx,rdx
  00000000000000C3: 74 08              je          00000000000000CD
  00000000000000C5: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  00000000000000C9: 8B 08              mov         ecx,dword ptr [rax]
  00000000000000CB: EB 02              jmp         00000000000000CF
  00000000000000CD: 33 C9              xor         ecx,ecx
  00000000000000CF: 48 63 C1           movsxd      rax,ecx
  00000000000000D2: 85 C9              test        ecx,ecx
  00000000000000D4: 74 2B              je          0000000000000101
  00000000000000D6: 48 3B C5           cmp         rax,rbp
  00000000000000D9: 48 8B FD           mov         rdi,rbp
  00000000000000DC: 49 8B CE           mov         rcx,r14
  00000000000000DF: 48 0F 42 F8        cmovb       rdi,rax
  00000000000000E3: 4C 8B C7           mov         r8,rdi
  00000000000000E6: E8 00 00 00 00     call        memcpy
  00000000000000EB: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  00000000000000EF: 4C 03 F7           add         r14,rdi
  00000000000000F2: 48 2B F7           sub         rsi,rdi
  00000000000000F5: 29 38              sub         dword ptr [rax],edi
  00000000000000F7: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  00000000000000FB: 48 63 C7           movsxd      rax,edi
  00000000000000FE: 48 01 01           add         qword ptr [rcx],rax
  0000000000000101: 48 83 BB 80 00 00  cmp         qword ptr [rbx+80h],0
                    00 00
  0000000000000109: 0F 84 8D 00 00 00  je          000000000000019C
  000000000000010F: 4C 8B 43 18        mov         r8,qword ptr [rbx+18h]
  0000000000000113: 48 8D 43 70        lea         rax,[rbx+70h]
  0000000000000117: 49 39 00           cmp         qword ptr [r8],rax
  000000000000011A: 75 20              jne         000000000000013C
  000000000000011C: 48 8B 8B 88 00 00  mov         rcx,qword ptr [rbx+88h]
                    00
  0000000000000123: 48 8B 93 90 00 00  mov         rdx,qword ptr [rbx+90h]
                    00
  000000000000012A: 49 89 08           mov         qword ptr [r8],rcx
  000000000000012D: 2B D1              sub         edx,ecx
  000000000000012F: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  0000000000000133: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000136: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  000000000000013A: 89 10              mov         dword ptr [rax],edx
  000000000000013C: 48 81 FE FF 0F 00  cmp         rsi,0FFFh
                    00
  0000000000000143: 76 38              jbe         000000000000017D
  0000000000000145: 66 66 66 0F 1F 84  nop         word ptr [rax+rax]
                    00 00 00 00 00
  0000000000000150: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  0000000000000157: BA 01 00 00 00     mov         edx,1
  000000000000015C: 41 B8 FF 0F 00 00  mov         r8d,0FFFh
  0000000000000162: 49 8B CE           mov         rcx,r14
  0000000000000165: E8 00 00 00 00     call        fread
  000000000000016A: 4C 03 F0           add         r14,rax
  000000000000016D: 48 2B F0           sub         rsi,rax
  0000000000000170: 48 3D FF 0F 00 00  cmp         rax,0FFFh
  0000000000000176: 75 24              jne         000000000000019C
  0000000000000178: 48 3B F0           cmp         rsi,rax
  000000000000017B: 77 D3              ja          0000000000000150
  000000000000017D: 48 85 F6           test        rsi,rsi
  0000000000000180: 74 1A              je          000000000000019C
  0000000000000182: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  0000000000000189: 4C 8B C6           mov         r8,rsi
  000000000000018C: BA 01 00 00 00     mov         edx,1
  0000000000000191: 49 8B CE           mov         rcx,r14
  0000000000000194: E8 00 00 00 00     call        fread
  0000000000000199: 48 2B F0           sub         rsi,rax
  000000000000019C: 48 2B EE           sub         rbp,rsi
  000000000000019F: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000001A4: 48 8B C5           mov         rax,rbp
  00000000000001A7: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000001AC: 48 83 C4 20        add         rsp,20h
  00000000000001B0: 41 5E              pop         r14
  00000000000001B2: 5D                 pop         rbp
  00000000000001B3: 5B                 pop         rbx
  00000000000001B4: C3                 ret

?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::xsgetn(char *,__int64)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 41 56              push        r14
  0000000000000008: 41 57              push        r15
  000000000000000A: 48 83 EC 20        sub         rsp,20h
  000000000000000E: 49 8B D8           mov         rbx,r8
  0000000000000011: 4C 8B F2           mov         r14,rdx
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: 4D 8B F8           mov         r15,r8
  000000000000001A: 4D 85 C0           test        r8,r8
  000000000000001D: 7E 7F              jle         000000000000009E
  000000000000001F: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  0000000000000024: 48 8D 71 50        lea         rsi,[rcx+50h]
  0000000000000028: 48 89 6C 24 40     mov         qword ptr [rsp+40h],rbp
  000000000000002D: 0F 1F 00           nop         dword ptr [rax]
  0000000000000030: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000034: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000037: 48 85 D2           test        rdx,rdx
  000000000000003A: 74 33              je          000000000000006F
  000000000000003C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000003F: 48 63 08           movsxd      rcx,dword ptr [rax]
  0000000000000042: 85 C9              test        ecx,ecx
  0000000000000044: 7E 29              jle         000000000000006F
  0000000000000046: 48 3B D9           cmp         rbx,rcx
  0000000000000049: 48 8B EB           mov         rbp,rbx
  000000000000004C: 48 0F 4D E9        cmovge      rbp,rcx
  0000000000000050: 49 8B CE           mov         rcx,r14
  0000000000000053: 4C 8B C5           mov         r8,rbp
  0000000000000056: E8 00 00 00 00     call        memcpy
  000000000000005B: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000005E: 48 2B DD           sub         rbx,rbp
  0000000000000061: 29 28              sub         dword ptr [rax],ebp
  0000000000000063: 48 8B 4F 38        mov         rcx,qword ptr [rdi+38h]
  0000000000000067: 48 63 C5           movsxd      rax,ebp
  000000000000006A: 48 01 01           add         qword ptr [rcx],rax
  000000000000006D: EB 1D              jmp         000000000000008C
  000000000000006F: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000072: 48 8B CF           mov         rcx,rdi
  0000000000000075: FF 50 38           call        qword ptr [rax+38h]
  0000000000000078: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000007B: 74 17              je          0000000000000094
  000000000000007D: 41 88 06           mov         byte ptr [r14],al
  0000000000000080: 48 8D 77 50        lea         rsi,[rdi+50h]
  0000000000000084: 48 FF CB           dec         rbx
  0000000000000087: BD 01 00 00 00     mov         ebp,1
  000000000000008C: 4C 03 F5           add         r14,rbp
  000000000000008F: 48 85 DB           test        rbx,rbx
  0000000000000092: 7F 9C              jg          0000000000000030
  0000000000000094: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  0000000000000099: 48 8B 74 24 48     mov         rsi,qword ptr [rsp+48h]
  000000000000009E: 4C 2B FB           sub         r15,rbx
  00000000000000A1: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000A6: 49 8B C7           mov         rax,r15
  00000000000000A9: 48 83 C4 20        add         rsp,20h
  00000000000000AD: 41 5F              pop         r15
  00000000000000AF: 41 5E              pop         r14
  00000000000000B1: 5F                 pop         rdi
  00000000000000B2: C3                 ret

?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsputn(char const *,__int64)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000001D: 49 8B E8           mov         rbp,r8
  0000000000000020: 4C 8B FA           mov         r15,rdx
  0000000000000023: 48 8B D9           mov         rbx,rcx
  0000000000000026: 74 7B              je          00000000000000A3
  0000000000000028: 49 8B F8           mov         rdi,r8
  000000000000002B: 4D 85 C0           test        r8,r8
  000000000000002E: 7E 6B              jle         000000000000009B
  0000000000000030: 48 8D 71 58        lea         rsi,[rcx+58h]
  0000000000000034: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  0000000000000038: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000003B: 48 85 C9           test        rcx,rcx
  000000000000003E: 74 34              je          0000000000000074
  0000000000000040: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000043: 48 63 10           movsxd      rdx,dword ptr [rax]
  0000000000000046: 85 D2              test        edx,edx
  0000000000000048: 7E 2A              jle         0000000000000074
  000000000000004A: 48 3B FA           cmp         rdi,rdx
  000000000000004D: 4C 8B F7           mov         r14,rdi
  0000000000000050: 4C 0F 4D F2        cmovge      r14,rdx
  0000000000000054: 49 8B D7           mov         rdx,r15
  0000000000000057: 4D 8B C6           mov         r8,r14
  000000000000005A: E8 00 00 00 00     call        memcpy
  000000000000005F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000062: 49 2B FE           sub         rdi,r14
  0000000000000065: 44 29 30           sub         dword ptr [rax],r14d
  0000000000000068: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  000000000000006C: 49 63 C6           movsxd      rax,r14d
  000000000000006F: 48 01 01           add         qword ptr [rcx],rax
  0000000000000072: EB 1F              jmp         0000000000000093
  0000000000000074: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000077: 48 8B CB           mov         rcx,rbx
  000000000000007A: 41 0F B6 17        movzx       edx,byte ptr [r15]
  000000000000007E: FF 50 18           call        qword ptr [rax+18h]
  0000000000000081: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000084: 74 15              je          000000000000009B
  0000000000000086: 48 FF CF           dec         rdi
  0000000000000089: 48 8D 73 58        lea         rsi,[rbx+58h]
  000000000000008D: 41 BE 01 00 00 00  mov         r14d,1
  0000000000000093: 4D 03 FE           add         r15,r14
  0000000000000096: 48 85 FF           test        rdi,rdi
  0000000000000099: 7F 99              jg          0000000000000034
  000000000000009B: 48 2B EF           sub         rbp,rdi
  000000000000009E: 48 8B C5           mov         rax,rbp
  00000000000000A1: EB 77              jmp         000000000000011A
  00000000000000A3: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  00000000000000A7: 48 8B F5           mov         rsi,rbp
  00000000000000AA: 4C 8B 08           mov         r9,qword ptr [rax]
  00000000000000AD: 4D 85 C9           test        r9,r9
  00000000000000B0: 74 08              je          00000000000000BA
  00000000000000B2: 48 8B 41 58        mov         rax,qword ptr [rcx+58h]
  00000000000000B6: 8B 08              mov         ecx,dword ptr [rax]
  00000000000000B8: EB 02              jmp         00000000000000BC
  00000000000000BA: 33 C9              xor         ecx,ecx
  00000000000000BC: 48 63 F9           movsxd      rdi,ecx
  00000000000000BF: 48 85 ED           test        rbp,rbp
  00000000000000C2: 7E 50              jle         0000000000000114
  00000000000000C4: 85 C9              test        ecx,ecx
  00000000000000C6: 7E 2D              jle         00000000000000F5
  00000000000000C8: 48 3B EF           cmp         rbp,rdi
  00000000000000CB: 49 8B C9           mov         rcx,r9
  00000000000000CE: 48 0F 4C FD        cmovl       rdi,rbp
  00000000000000D2: 4C 8B C7           mov         r8,rdi
  00000000000000D5: E8 00 00 00 00     call        memcpy
  00000000000000DA: 48 8B 43 58        mov         rax,qword ptr [rbx+58h]
  00000000000000DE: 4C 03 FF           add         r15,rdi
  00000000000000E1: 48 2B EF           sub         rbp,rdi
  00000000000000E4: 29 38              sub         dword ptr [rax],edi
  00000000000000E6: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  00000000000000EA: 48 63 C7           movsxd      rax,edi
  00000000000000ED: 48 01 01           add         qword ptr [rcx],rax
  00000000000000F0: 48 85 ED           test        rbp,rbp
  00000000000000F3: 7E 1F              jle         0000000000000114
  00000000000000F5: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  00000000000000FC: 4D 85 C9           test        r9,r9
  00000000000000FF: 74 13              je          0000000000000114
  0000000000000101: 4C 8B C5           mov         r8,rbp
  0000000000000104: BA 01 00 00 00     mov         edx,1
  0000000000000109: 49 8B CF           mov         rcx,r15
  000000000000010C: E8 00 00 00 00     call        fwrite
  0000000000000111: 48 2B E8           sub         rbp,rax
  0000000000000114: 48 2B F5           sub         rsi,rbp
  0000000000000117: 48 8B C6           mov         rax,rsi
  000000000000011A: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000011F: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  0000000000000124: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  0000000000000129: 48 83 C4 20        add         rsp,20h
  000000000000012D: 41 5F              pop         r15
  000000000000012F: 41 5E              pop         r14
  0000000000000131: 5F                 pop         rdi
  0000000000000132: C3                 ret

?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::xsputn(char const *,__int64)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 41 56              push        r14
  0000000000000008: 41 57              push        r15
  000000000000000A: 48 83 EC 20        sub         rsp,20h
  000000000000000E: 49 8B D8           mov         rbx,r8
  0000000000000011: 4C 8B F2           mov         r14,rdx
  0000000000000014: 48 8B F1           mov         rsi,rcx
  0000000000000017: 4D 8B F8           mov         r15,r8
  000000000000001A: 4D 85 C0           test        r8,r8
  000000000000001D: 0F 8E 7D 00 00 00  jle         00000000000000A0
  0000000000000023: 48 89 7C 24 48     mov         qword ptr [rsp+48h],rdi
  0000000000000028: 48 8D 79 58        lea         rdi,[rcx+58h]
  000000000000002C: 48 89 6C 24 40     mov         qword ptr [rsp+40h],rbp
  0000000000000031: 48 8B 46 40        mov         rax,qword ptr [rsi+40h]
  0000000000000035: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000038: 48 85 C9           test        rcx,rcx
  000000000000003B: 74 33              je          0000000000000070
  000000000000003D: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000040: 48 63 10           movsxd      rdx,dword ptr [rax]
  0000000000000043: 85 D2              test        edx,edx
  0000000000000045: 7E 29              jle         0000000000000070
  0000000000000047: 48 3B DA           cmp         rbx,rdx
  000000000000004A: 48 8B EB           mov         rbp,rbx
  000000000000004D: 48 0F 4D EA        cmovge      rbp,rdx
  0000000000000051: 49 8B D6           mov         rdx,r14
  0000000000000054: 4C 8B C5           mov         r8,rbp
  0000000000000057: E8 00 00 00 00     call        memcpy
  000000000000005C: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000005F: 48 2B DD           sub         rbx,rbp
  0000000000000062: 29 28              sub         dword ptr [rax],ebp
  0000000000000064: 48 8B 4E 40        mov         rcx,qword ptr [rsi+40h]
  0000000000000068: 48 63 C5           movsxd      rax,ebp
  000000000000006B: 48 01 01           add         qword ptr [rcx],rax
  000000000000006E: EB 1E              jmp         000000000000008E
  0000000000000070: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000073: 48 8B CE           mov         rcx,rsi
  0000000000000076: 41 0F B6 16        movzx       edx,byte ptr [r14]
  000000000000007A: FF 50 18           call        qword ptr [rax+18h]
  000000000000007D: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000080: 74 14              je          0000000000000096
  0000000000000082: 48 FF CB           dec         rbx
  0000000000000085: 48 8D 7E 58        lea         rdi,[rsi+58h]
  0000000000000089: BD 01 00 00 00     mov         ebp,1
  000000000000008E: 4C 03 F5           add         r14,rbp
  0000000000000091: 48 85 DB           test        rbx,rbx
  0000000000000094: 7F 9B              jg          0000000000000031
  0000000000000096: 48 8B 6C 24 40     mov         rbp,qword ptr [rsp+40h]
  000000000000009B: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000000A0: 4C 2B FB           sub         r15,rbx
  00000000000000A3: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000A8: 49 8B C7           mov         rax,r15
  00000000000000AB: 48 83 C4 20        add         rsp,20h
  00000000000000AF: 41 5F              pop         r15
  00000000000000B1: 41 5E              pop         r14
  00000000000000B3: 5E                 pop         rsi
  00000000000000B4: C3                 ret

__local_stdio_printf_options:
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA]
                    00
  0000000000000007: C3                 ret

main:
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 8D AC 24 50 F0  lea         rbp,[rsp-0FB0h]
                    FF FF
  0000000000000016: B8 B0 10 00 00     mov         eax,10B0h
  000000000000001B: E8 00 00 00 00     call        __chkstk
  0000000000000020: 48 2B E0           sub         rsp,rax
  0000000000000023: 0F 29 B4 24 A0 10  movaps      xmmword ptr [rsp+10A0h],xmm6
                    00 00
  000000000000002B: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000032: 48 33 C4           xor         rax,rsp
  0000000000000035: 48 89 85 90 0F 00  mov         qword ptr [rbp+0F90h],rax
                    00
  000000000000003C: 48 8B FA           mov         rdi,rdx
  000000000000003F: 44 8B D1           mov         r10d,ecx
  0000000000000042: 45 33 F6           xor         r14d,r14d
  0000000000000045: 45 8B C6           mov         r8d,r14d
  0000000000000048: 8B 35 00 00 00 00  mov         esi,dword ptr [__isa_available]
  000000000000004E: 83 FE 02           cmp         esi,2
  0000000000000051: 0F 8C D6 00 00 00  jl          000000000000012D
  0000000000000057: 66 0F 6F 2D 00 00  movdqa      xmm5,xmmword ptr [__xmm@00000003000000020000000100000000]
                    00 00
  000000000000005F: 41 8B CE           mov         ecx,r14d
  0000000000000062: 66 0F 6F 25 00 00  movdqa      xmm4,xmmword ptr [__xmm@66666667666666676666666766666667]
                    00 00
  000000000000006A: 66 0F 6F 35 00 00  movdqa      xmm6,xmmword ptr [__xmm@0000000a0000000a0000000a0000000a]
                    00 00
  0000000000000072: 48 8D 55 A0        lea         rdx,[rbp-60h]
  0000000000000076: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  0000000000000080: 66 0F 6E D1        movd        xmm2,ecx
  0000000000000084: 66 0F 70 D2 00     pshufd      xmm2,xmm2,0
  0000000000000089: 66 0F FE D5        paddd       xmm2,xmm5
  000000000000008D: 66 0F 6F CA        movdqa      xmm1,xmm2
  0000000000000091: 66 0F 62 CA        punpckldq   xmm1,xmm2
  0000000000000095: 66 0F 38 28 CC     pmuldq      xmm1,xmm4
  000000000000009A: 66 0F 6F C2        movdqa      xmm0,xmm2
  000000000000009E: 66 0F 6A C2        punpckhdq   xmm0,xmm2
  00000000000000A2: 66 0F 38 28 C4     pmuldq      xmm0,xmm4
  00000000000000A7: 0F C6 C8 DD        shufps      xmm1,xmm0,0DDh
  00000000000000AB: 66 0F 72 E1 02     psrad       xmm1,2
  00000000000000B0: 66 0F 6F C1        movdqa      xmm0,xmm1
  00000000000000B4: 66 0F 72 D0 1F     psrld       xmm0,1Fh
  00000000000000B9: 66 0F FE C1        paddd       xmm0,xmm1
  00000000000000BD: 66 0F 38 40 C6     pmulld      xmm0,xmm6
  00000000000000C2: 66 0F FA D0        psubd       xmm2,xmm0
  00000000000000C6: F3 0F 7F 52 F0     movdqu      xmmword ptr [rdx-10h],xmm2
  00000000000000CB: 8D 41 04           lea         eax,[rcx+4]
  00000000000000CE: 66 0F 6E D8        movd        xmm3,eax
  00000000000000D2: 66 0F 70 DB 00     pshufd      xmm3,xmm3,0
  00000000000000D7: 66 0F FE DD        paddd       xmm3,xmm5
  00000000000000DB: 66 0F 6F CB        movdqa      xmm1,xmm3
  00000000000000DF: 66 0F 62 CB        punpckldq   xmm1,xmm3
  00000000000000E3: 66 0F 38 28 CC     pmuldq      xmm1,xmm4
  00000000000000E8: 66 0F 6F C3        movdqa      xmm0,xmm3
  00000000000000EC: 66 0F 6A C3        punpckhdq   xmm0,xmm3
  00000000000000F0: 66 0F 38 28 C4     pmuldq      xmm0,xmm4
  00000000000000F5: 0F C6 C8 DD        shufps      xmm1,xmm0,0DDh
  00000000000000F9: 66 0F 72 E1 02     psrad       xmm1,2
  00000000000000FE: 66 0F 6F C1        movdqa      xmm0,xmm1
  0000000000000102: 66 0F 72 D0 1F     psrld       xmm0,1Fh
  0000000000000107: 66 0F FE C1        paddd       xmm0,xmm1
  000000000000010B: 66 0F 38 40 C6     pmulld      xmm0,xmm6
  0000000000000110: 66 0F FA D8        psubd       xmm3,xmm0
  0000000000000114: F3 0F 7F 1A        movdqu      xmmword ptr [rdx],xmm3
  0000000000000118: 83 C1 08           add         ecx,8
  000000000000011B: 48 8D 52 20        lea         rdx,[rdx+20h]
  000000000000011F: 81 F9 00 04 00 00  cmp         ecx,400h
  0000000000000125: 0F 8C 55 FF FF FF  jl          0000000000000080
  000000000000012B: EB 3B              jmp         0000000000000168
  000000000000012D: 4C 8D 4D 90        lea         r9,[rbp-70h]
  0000000000000131: 0F 1F 40 00        nop         dword ptr [rax]
  0000000000000135: 66 66 66 0F 1F 84  nop         word ptr [rax+rax]
                    00 00 00 00 00
  0000000000000140: B8 CD CC CC CC     mov         eax,0CCCCCCCDh
  0000000000000145: 41 F7 E0           mul         eax,r8d
  0000000000000148: C1 EA 03           shr         edx,3
  000000000000014B: 8D 0C 92           lea         ecx,[rdx+rdx*4]
  000000000000014E: 03 C9              add         ecx,ecx
  0000000000000150: 41 8B C0           mov         eax,r8d
  0000000000000153: 2B C1              sub         eax,ecx
  0000000000000155: 41 89 01           mov         dword ptr [r9],eax
  0000000000000158: 41 FF C0           inc         r8d
  000000000000015B: 4D 8D 49 04        lea         r9,[r9+4]
  000000000000015F: 41 81 F8 00 04 00  cmp         r8d,400h
                    00
  0000000000000166: 7C D8              jl          0000000000000140
  0000000000000168: 41 83 FA 03        cmp         r10d,3
  000000000000016C: 74 5E              je          00000000000001CC
  000000000000016E: 48 8D 15 00 00 00  lea         rdx,[??_C@_07CKBCDPF@Usage?3?5@]
                    00
  0000000000000175: 48 8D 0D 00 00 00  lea         rcx,[?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000017C: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000181: 48 8B 17           mov         rdx,qword ptr [rdi]
  0000000000000184: 48 8B C8           mov         rcx,rax
  0000000000000187: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000018C: 48 8B C8           mov         rcx,rax
  000000000000018F: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BG@CAFLLNBC@?5?$DMassembly_file_path?$DO@]
                    00
  0000000000000196: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000019B: 48 8B D8           mov         rbx,rax
  000000000000019E: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000001A1: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000001A5: 48 03 C8           add         rcx,rax
  00000000000001A8: B2 0A              mov         dl,0Ah
  00000000000001AA: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000001AF: 0F B6 D0           movzx       edx,al
  00000000000001B2: 48 8B CB           mov         rcx,rbx
  00000000000001B5: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000001BA: 48 8B CB           mov         rcx,rbx
  00000000000001BD: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000001C2: B8 01 00 00 00     mov         eax,1
  00000000000001C7: E9 2A 06 00 00     jmp         00000000000007F6
  00000000000001CC: 48 8B 57 08        mov         rdx,qword ptr [rdi+8]
  00000000000001D0: 0F 57 C0           xorps       xmm0,xmm0
  00000000000001D3: 0F 11 44 24 50     movups      xmmword ptr [rsp+50h],xmm0
  00000000000001D8: 4C 89 74 24 60     mov         qword ptr [rsp+60h],r14
  00000000000001DD: 4C 89 74 24 68     mov         qword ptr [rsp+68h],r14
  00000000000001E2: 48 C7 C3 FF FF FF  mov         rbx,0FFFFFFFFFFFFFFFFh
                    FF
  00000000000001E9: 4C 8B C3           mov         r8,rbx
  00000000000001EC: 0F 1F 40 00        nop         dword ptr [rax]
  00000000000001F0: 49 FF C0           inc         r8
  00000000000001F3: 46 38 34 02        cmp         byte ptr [rdx+r8],r14b
  00000000000001F7: 75 F7              jne         00000000000001F0
  00000000000001F9: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000001FE: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000203: 90                 nop
  0000000000000204: 48 8B 57 10        mov         rdx,qword ptr [rdi+10h]
  0000000000000208: 0F 57 C0           xorps       xmm0,xmm0
  000000000000020B: 0F 11 44 24 70     movups      xmmword ptr [rsp+70h],xmm0
  0000000000000210: 4C 89 75 80        mov         qword ptr [rbp-80h],r14
  0000000000000214: 4C 89 75 88        mov         qword ptr [rbp-78h],r14
  0000000000000218: 0F 1F 84 00 00 00  nop         dword ptr [rax+rax]
                    00 00
  0000000000000220: 48 FF C3           inc         rbx
  0000000000000223: 80 3C 1A 00        cmp         byte ptr [rdx+rbx],0
  0000000000000227: 75 F7              jne         0000000000000220
  0000000000000229: 4C 8B C3           mov         r8,rbx
  000000000000022C: 48 8D 4C 24 70     lea         rcx,[rsp+70h]
  0000000000000231: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000236: 90                 nop
  0000000000000237: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_MAGENTA@Color@@3PEBDEB]
                    00
  000000000000023E: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000245: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000024A: 48 8B C8           mov         rcx,rax
  000000000000024D: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BFJLFLBB@Optimization?5Level?3?5@]
                    00
  0000000000000254: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000259: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  000000000000025E: 48 83 7D 88 0F     cmp         qword ptr [rbp-78h],0Fh
  0000000000000263: 48 0F 47 54 24 70  cmova       rdx,qword ptr [rsp+70h]
  0000000000000269: 4C 8B 45 80        mov         r8,qword ptr [rbp-80h]
  000000000000026D: 48 8B C8           mov         rcx,rax
  0000000000000270: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  0000000000000275: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  000000000000027C: 48 8B C8           mov         rcx,rax
  000000000000027F: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000284: 48 8B D8           mov         rbx,rax
  0000000000000287: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000028A: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  000000000000028E: 48 03 C8           add         rcx,rax
  0000000000000291: B2 0A              mov         dl,0Ah
  0000000000000293: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000298: 0F B6 D0           movzx       edx,al
  000000000000029B: 48 8B CB           mov         rcx,rbx
  000000000000029E: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000002A3: 48 8B CB           mov         rcx,rbx
  00000000000002A6: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000002AB: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  00000000000002B0: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  00000000000002B5: 49 8B FE           mov         rdi,r14
  00000000000002B8: 83 FE 02           cmp         esi,2
  00000000000002BB: 7C 51              jl          000000000000030E
  00000000000002BD: 0F 57 D2           xorps       xmm2,xmm2
  00000000000002C0: 0F 57 DB           xorps       xmm3,xmm3
  00000000000002C3: 49 8B C6           mov         rax,r14
  00000000000002C6: 66 66 0F 1F 84 00  nop         word ptr [rax+rax]
                    00 00 00 00
  00000000000002D0: 66 0F 38 25 4C 85  pmovsxdq    xmm1,mmword ptr [rbp+rax*4-70h]
                    90
  00000000000002D7: 66 0F D4 D1        paddq       xmm2,xmm1
  00000000000002DB: 66 0F 38 25 4C 85  pmovsxdq    xmm1,mmword ptr [rbp+rax*4-68h]
                    98
  00000000000002E2: 66 0F D4 CB        paddq       xmm1,xmm3
  00000000000002E6: 66 0F 6F D9        movdqa      xmm3,xmm1
  00000000000002EA: 48 83 C0 04        add         rax,4
  00000000000002EE: 48 3D 00 04 00 00  cmp         rax,400h
  00000000000002F4: 7C DA              jl          00000000000002D0
  00000000000002F6: 66 0F D4 D1        paddq       xmm2,xmm1
  00000000000002FA: 66 0F 6F C2        movdqa      xmm0,xmm2
  00000000000002FE: 66 0F 73 D8 08     psrldq      xmm0,8
  0000000000000303: 66 0F D4 D0        paddq       xmm2,xmm0
  0000000000000307: 66 48 0F 7E D7     movq        rdi,xmm2
  000000000000030C: EB 49              jmp         0000000000000357
  000000000000030E: 49 8B D6           mov         rdx,r14
  0000000000000311: 4D 8B C6           mov         r8,r14
  0000000000000314: 49 8B CE           mov         rcx,r14
  0000000000000317: 66 0F 1F 84 00 00  nop         word ptr [rax+rax]
                    00 00 00
  0000000000000320: 48 63 44 8D 90     movsxd      rax,dword ptr [rbp+rcx*4-70h]
  0000000000000325: 48 03 D0           add         rdx,rax
  0000000000000328: 48 63 44 8D 94     movsxd      rax,dword ptr [rbp+rcx*4-6Ch]
  000000000000032D: 4C 03 C0           add         r8,rax
  0000000000000330: 48 83 C1 02        add         rcx,2
  0000000000000334: 48 8B C1           mov         rax,rcx
  0000000000000337: 48 81 F9 FF 03 00  cmp         rcx,3FFh
                    00
  000000000000033E: 7C E0              jl          0000000000000320
  0000000000000340: 48 3D 00 04 00 00  cmp         rax,400h
  0000000000000346: 7D 08              jge         0000000000000350
  0000000000000348: 48 63 44 8D 90     movsxd      rax,dword ptr [rbp+rcx*4-70h]
  000000000000034D: 48 03 F8           add         rdi,rax
  0000000000000350: 49 8D 04 10        lea         rax,[r8+rdx]
  0000000000000354: 48 03 F8           add         rdi,rax
  0000000000000357: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000035C: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000361: 48 8B 44 24 20     mov         rax,qword ptr [rsp+20h]
  0000000000000366: 48 2B 44 24 28     sub         rax,qword ptr [rsp+28h]
  000000000000036B: 0F 57 F6           xorps       xmm6,xmm6
  000000000000036E: F2 48 0F 2A F0     cvtsi2sd    xmm6,rax
  0000000000000373: F2 0F 5E 35 00 00  divsd       xmm6,mmword ptr [__real@41cdcd6500000000]
                    00 00
  000000000000037B: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_CYAN@Color@@3PEBDEB]
                    00
  0000000000000382: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000389: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000038E: 48 8B C8           mov         rcx,rax
  0000000000000391: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@OHCKFPAD@Assembly?5Path?3?5?5?5?5?5?5@]
                    00
  0000000000000398: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000039D: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000003A2: 48 83 7C 24 68 0F  cmp         qword ptr [rsp+68h],0Fh
  00000000000003A8: 48 0F 47 54 24 50  cmova       rdx,qword ptr [rsp+50h]
  00000000000003AE: 4C 8B 44 24 60     mov         r8,qword ptr [rsp+60h]
  00000000000003B3: 48 8B C8           mov         rcx,rax
  00000000000003B6: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000003BB: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000003C2: 48 8B C8           mov         rcx,rax
  00000000000003C5: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003CA: 48 8B D8           mov         rbx,rax
  00000000000003CD: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000003D0: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000003D4: 48 03 C8           add         rcx,rax
  00000000000003D7: B2 0A              mov         dl,0Ah
  00000000000003D9: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000003DE: 0F B6 D0           movzx       edx,al
  00000000000003E1: 48 8B CB           mov         rcx,rbx
  00000000000003E4: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000003E9: 48 8B CB           mov         rcx,rbx
  00000000000003EC: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000003F1: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  00000000000003F8: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000003FF: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000404: 48 8B C8           mov         rcx,rax
  0000000000000407: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@LJEJLLGN@Time?5Taken?3?5?5?5?5?5?5?5?5?5@]
                    00
  000000000000040E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000413: 0F 28 CE           movaps      xmm1,xmm6
  0000000000000416: 48 8B C8           mov         rcx,rax
  0000000000000419: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
  000000000000041E: 48 8B C8           mov         rcx,rax
  0000000000000421: 48 8D 15 00 00 00  lea         rdx,[??_C@_08GFGBMIFC@?5seconds@]
                    00
  0000000000000428: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000042D: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000434: 48 8B C8           mov         rcx,rax
  0000000000000437: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000043C: 48 8B D8           mov         rbx,rax
  000000000000043F: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000442: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  0000000000000446: 48 03 C8           add         rcx,rax
  0000000000000449: B2 0A              mov         dl,0Ah
  000000000000044B: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000450: 0F B6 D0           movzx       edx,al
  0000000000000453: 48 8B CB           mov         rcx,rbx
  0000000000000456: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  000000000000045B: 48 8B CB           mov         rcx,rbx
  000000000000045E: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000463: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  000000000000046A: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000471: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000476: 48 8B C8           mov         rcx,rax
  0000000000000479: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BLKNFMAP@Final?5Result?3?5?5?5?5?5?5?5@]
                    00
  0000000000000480: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000485: 48 8B D7           mov         rdx,rdi
  0000000000000488: 48 8B C8           mov         rcx,rax
  000000000000048B: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  0000000000000490: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000497: 48 8B C8           mov         rcx,rax
  000000000000049A: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000049F: 48 8B D8           mov         rbx,rax
  00000000000004A2: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000004A5: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000004A9: 48 03 C8           add         rcx,rax
  00000000000004AC: B2 0A              mov         dl,0Ah
  00000000000004AE: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000004B3: 0F B6 D0           movzx       edx,al
  00000000000004B6: 48 8B CB           mov         rcx,rbx
  00000000000004B9: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000004BE: 48 8B CB           mov         rcx,rbx
  00000000000004C1: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000004C6: 0F 57 C0           xorps       xmm0,xmm0
  00000000000004C9: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  00000000000004CE: 48 C7 44 24 40 09  mov         qword ptr [rsp+40h],9
                    00 00 00
  00000000000004D7: 48 C7 44 24 48 0F  mov         qword ptr [rsp+48h],0Fh
                    00 00 00
  00000000000004E0: F2 0F 10 05 00 00  movsd       xmm0,mmword ptr [??_C@_09BDCIGHFD@sum_array@]
                    00 00
  00000000000004E8: F2 0F 11 44 24 30  movsd       mmword ptr [rsp+30h],xmm0
  00000000000004EE: 0F B6 05 08 00 00  movzx       eax,byte ptr [??_C@_09BDCIGHFD@sum_array@+8]
                    00
  00000000000004F5: 88 44 24 38        mov         byte ptr [rsp+38h],al
  00000000000004F9: C6 44 24 39 00     mov         byte ptr [rsp+39h],0
  00000000000004FE: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000503: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000508: E8 00 00 00 00     call        ?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  000000000000050D: 90                 nop
  000000000000050E: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000513: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000517: 76 32              jbe         000000000000054B
  0000000000000519: 48 FF C2           inc         rdx
  000000000000051C: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000521: 48 8B C1           mov         rax,rcx
  0000000000000524: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000052B: 72 19              jb          0000000000000546
  000000000000052D: 48 83 C2 27        add         rdx,27h
  0000000000000531: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000535: 48 2B C1           sub         rax,rcx
  0000000000000538: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000053C: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000540: 0F 87 E2 02 00 00  ja          0000000000000828
  0000000000000546: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000054B: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000550: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000555: 48 8B 18           mov         rbx,qword ptr [rax]
  0000000000000558: BA 00 04 00 00     mov         edx,400h
  000000000000055D: 48 8D 4D 90        lea         rcx,[rbp-70h]
  0000000000000561: E8 00 00 00 00     call        ?sum_array_unrolled@@YA_JPEAHH@Z
  0000000000000566: 48 8B F8           mov         rdi,rax
  0000000000000569: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  000000000000056E: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000573: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000576: 48 2B CB           sub         rcx,rbx
  0000000000000579: 0F 57 F6           xorps       xmm6,xmm6
  000000000000057C: F2 48 0F 2A F1     cvtsi2sd    xmm6,rcx
  0000000000000581: F2 0F 5E 35 00 00  divsd       xmm6,mmword ptr [__real@41cdcd6500000000]
                    00 00
  0000000000000589: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_CYAN@Color@@3PEBDEB]
                    00
  0000000000000590: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000597: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000059C: 48 8B C8           mov         rcx,rax
  000000000000059F: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@OHCKFPAD@Assembly?5Path?3?5?5?5?5?5?5@]
                    00
  00000000000005A6: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005AB: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000005B0: 48 83 7C 24 68 0F  cmp         qword ptr [rsp+68h],0Fh
  00000000000005B6: 48 0F 47 54 24 50  cmova       rdx,qword ptr [rsp+50h]
  00000000000005BC: 4C 8B 44 24 60     mov         r8,qword ptr [rsp+60h]
  00000000000005C1: 48 8B C8           mov         rcx,rax
  00000000000005C4: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000005C9: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000005D0: 48 8B C8           mov         rcx,rax
  00000000000005D3: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000005D8: 48 8B D8           mov         rbx,rax
  00000000000005DB: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000005DE: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000005E2: 48 03 C8           add         rcx,rax
  00000000000005E5: B2 0A              mov         dl,0Ah
  00000000000005E7: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000005EC: 0F B6 D0           movzx       edx,al
  00000000000005EF: 48 8B CB           mov         rcx,rbx
  00000000000005F2: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000005F7: 48 8B CB           mov         rcx,rbx
  00000000000005FA: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000005FF: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  0000000000000606: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000060D: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000612: 48 8B C8           mov         rcx,rax
  0000000000000615: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@LJEJLLGN@Time?5Taken?3?5?5?5?5?5?5?5?5?5@]
                    00
  000000000000061C: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000621: 0F 28 CE           movaps      xmm1,xmm6
  0000000000000624: 48 8B C8           mov         rcx,rax
  0000000000000627: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
  000000000000062C: 48 8B C8           mov         rcx,rax
  000000000000062F: 48 8D 15 00 00 00  lea         rdx,[??_C@_08GFGBMIFC@?5seconds@]
                    00
  0000000000000636: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000063B: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000642: 48 8B C8           mov         rcx,rax
  0000000000000645: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000064A: 48 8B D8           mov         rbx,rax
  000000000000064D: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000650: 48 63 4A 04        movsxd      rcx,dword ptr [rdx+4]
  0000000000000654: 48 03 C8           add         rcx,rax
  0000000000000657: B2 0A              mov         dl,0Ah
  0000000000000659: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  000000000000065E: 0F B6 D0           movzx       edx,al
  0000000000000661: 48 8B CB           mov         rcx,rbx
  0000000000000664: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  0000000000000669: 48 8B CB           mov         rcx,rbx
  000000000000066C: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000671: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  0000000000000678: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000067F: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000684: 48 8B C8           mov         rcx,rax
  0000000000000687: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BLKNFMAP@Final?5Result?3?5?5?5?5?5?5?5@]
                    00
  000000000000068E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000693: 48 8B D7           mov         rdx,rdi
  0000000000000696: 48 8B C8           mov         rcx,rax
  0000000000000699: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  000000000000069E: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000006A5: 48 8B C8           mov         rcx,rax
  00000000000006A8: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000006AD: 48 8B D8           mov         rbx,rax
  00000000000006B0: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000006B3: 48 63 49 04        movsxd      rcx,dword ptr [rcx+4]
  00000000000006B7: 48 03 C8           add         rcx,rax
  00000000000006BA: B2 0A              mov         dl,0Ah
  00000000000006BC: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  00000000000006C1: 0F B6 D0           movzx       edx,al
  00000000000006C4: 48 8B CB           mov         rcx,rbx
  00000000000006C7: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  00000000000006CC: 48 8B CB           mov         rcx,rbx
  00000000000006CF: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  00000000000006D4: 0F 57 C0           xorps       xmm0,xmm0
  00000000000006D7: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  00000000000006DC: 4C 89 74 24 40     mov         qword ptr [rsp+40h],r14
  00000000000006E1: 4C 89 74 24 48     mov         qword ptr [rsp+48h],r14
  00000000000006E6: B9 20 00 00 00     mov         ecx,20h
  00000000000006EB: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000006F0: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  00000000000006F5: 48 C7 44 24 40 12  mov         qword ptr [rsp+40h],12h
                    00 00 00
  00000000000006FE: 48 C7 44 24 48 1F  mov         qword ptr [rsp+48h],1Fh
                    00 00 00
  0000000000000707: 0F 10 05 00 00 00  movups      xmm0,xmmword ptr [??_C@_0BD@DPEBDDBL@sum_array_unrolled@]
                    00
  000000000000070E: 0F 11 00           movups      xmmword ptr [rax],xmm0
  0000000000000711: 0F B7 0D 10 00 00  movzx       ecx,word ptr [??_C@_0BD@DPEBDDBL@sum_array_unrolled@+10h]
                    00
  0000000000000718: 66 89 48 10        mov         word ptr [rax+10h],cx
  000000000000071C: C6 40 12 00        mov         byte ptr [rax+12h],0
  0000000000000720: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000725: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000072A: E8 00 00 00 00     call        ?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  000000000000072F: 90                 nop
  0000000000000730: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000735: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000739: 76 33              jbe         000000000000076E
  000000000000073B: 48 FF C2           inc         rdx
  000000000000073E: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000743: 48 8B C1           mov         rax,rcx
  0000000000000746: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000074D: 72 19              jb          0000000000000768
  000000000000074F: 48 83 C2 27        add         rdx,27h
  0000000000000753: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000757: 48 2B C1           sub         rax,rcx
  000000000000075A: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000075E: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000762: 0F 87 C6 00 00 00  ja          000000000000082E
  0000000000000768: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000076D: 90                 nop
  000000000000076E: 48 8B 55 88        mov         rdx,qword ptr [rbp-78h]
  0000000000000772: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000776: 76 32              jbe         00000000000007AA
  0000000000000778: 48 FF C2           inc         rdx
  000000000000077B: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000780: 48 8B C1           mov         rax,rcx
  0000000000000783: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000078A: 72 19              jb          00000000000007A5
  000000000000078C: 48 83 C2 27        add         rdx,27h
  0000000000000790: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000794: 48 2B C1           sub         rax,rcx
  0000000000000797: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000079B: 48 83 F8 1F        cmp         rax,1Fh
  000000000000079F: 0F 87 8F 00 00 00  ja          0000000000000834
  00000000000007A5: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000007AA: 4C 89 75 80        mov         qword ptr [rbp-80h],r14
  00000000000007AE: 48 C7 45 88 0F 00  mov         qword ptr [rbp-78h],0Fh
                    00 00
  00000000000007B6: C6 44 24 70 00     mov         byte ptr [rsp+70h],0
  00000000000007BB: 48 8B 54 24 68     mov         rdx,qword ptr [rsp+68h]
  00000000000007C0: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000007C4: 76 2E              jbe         00000000000007F4
  00000000000007C6: 48 FF C2           inc         rdx
  00000000000007C9: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  00000000000007CE: 48 8B C1           mov         rax,rcx
  00000000000007D1: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000007D8: 72 15              jb          00000000000007EF
  00000000000007DA: 48 83 C2 27        add         rdx,27h
  00000000000007DE: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000007E2: 48 2B C1           sub         rax,rcx
  00000000000007E5: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000007E9: 48 83 F8 1F        cmp         rax,1Fh
  00000000000007ED: 77 33              ja          0000000000000822
  00000000000007EF: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000007F4: 33 C0              xor         eax,eax
  00000000000007F6: 48 8B 8D 90 0F 00  mov         rcx,qword ptr [rbp+0F90h]
                    00
  00000000000007FD: 48 33 CC           xor         rcx,rsp
  0000000000000800: E8 00 00 00 00     call        __security_check_cookie
  0000000000000805: 4C 8D 9C 24 B0 10  lea         r11,[rsp+10B0h]
                    00 00
  000000000000080D: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  0000000000000811: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000815: 41 0F 28 73 F0     movaps      xmm6,xmmword ptr [r11-10h]
  000000000000081A: 49 8B E3           mov         rsp,r11
  000000000000081D: 41 5E              pop         r14
  000000000000081F: 5F                 pop         rdi
  0000000000000820: 5D                 pop         rbp
  0000000000000821: C3                 ret
  0000000000000822: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000827: 90                 nop
  0000000000000828: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000082D: 90                 nop
  000000000000082E: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000833: 90                 nop
  0000000000000834: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000839: CC                 int         3

main$dtor$0:
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$1:
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$2:
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$3:
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

sprintf_s:
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  000000000000000A: 53                 push        rbx
  000000000000000B: 55                 push        rbp
  000000000000000C: 56                 push        rsi
  000000000000000D: 57                 push        rdi
  000000000000000E: 48 83 EC 38        sub         rsp,38h
  0000000000000012: 49 8B F0           mov         rsi,r8
  0000000000000015: 48 8D 6C 24 78     lea         rbp,[rsp+78h]
  000000000000001A: 48 8B DA           mov         rbx,rdx
  000000000000001D: 48 8B F9           mov         rdi,rcx
  0000000000000020: E8 00 00 00 00     call        __local_stdio_printf_options
  0000000000000025: 48 89 6C 24 28     mov         qword ptr [rsp+28h],rbp
  000000000000002A: 4C 8B CE           mov         r9,rsi
  000000000000002D: 4C 8B C3           mov         r8,rbx
  0000000000000030: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  0000000000000039: 48 8B D7           mov         rdx,rdi
  000000000000003C: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000003F: E8 00 00 00 00     call        __stdio_common_vsprintf_s
  0000000000000044: 85 C0              test        eax,eax
  0000000000000046: B9 FF FF FF FF     mov         ecx,0FFFFFFFFh
  000000000000004B: 0F 48 C1           cmovs       eax,ecx
  000000000000004E: 48 83 C4 38        add         rsp,38h
  0000000000000052: 5F                 pop         rdi
  0000000000000053: 5E                 pop         rsi
  0000000000000054: 5D                 pop         rbp
  0000000000000055: 5B                 pop         rbx
  0000000000000056: C3                 ret

  Summary

          4C .bss
        21B8 .chks64
          38 .data
         13C .data$r
         388 .data$rs
          A4 .debug$S
         239 .drectve
         900 .pdata
         6C2 .rdata
         C58 .rdata$r
        8311 .text$mn
         89A .text$x
           C .voltbl
        139D .xdata
         1D0 .xdata$x
