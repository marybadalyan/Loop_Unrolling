Microsoft (R) COFF/PE Dumper Version 14.43.34808.0
Copyright (C) Microsoft Corporation.  All rights reserved.


Dump of file C:\Users\MeriBadalyan\Loop_Unrolling\build\loop_unrolling.dir\Release\main.obj

File Type: COFF OBJECT

??$?6DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 83 7A 18 0F     cmp         qword ptr [rdx+18h],0Fh
  0000000000000005: 4C 8B 42 10        mov         r8,qword ptr [rdx+10h]
  0000000000000009: 76 03              jbe         000000000000000E
  000000000000000B: 48 8B 12           mov         rdx,qword ptr [rdx]
  000000000000000E: E9 00 00 00 00     jmp         ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z

??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &,char const *)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 41 54              push        r12
  0000000000000009: 41 56              push        r14
  000000000000000B: 41 57              push        r15
  000000000000000D: 48 83 EC 70        sub         rsp,70h
  0000000000000011: 4C 8B E2           mov         r12,rdx
  0000000000000014: 48 8B F1           mov         rsi,rcx
  0000000000000017: 33 DB              xor         ebx,ebx
  0000000000000019: 89 9C 24 B0 00 00  mov         dword ptr [rsp+0B0h],ebx
                    00
  0000000000000020: 49 83 CF FF        or          r15,0FFFFFFFFFFFFFFFFh
  0000000000000024: 49 FF C7           inc         r15
  0000000000000027: 42 38 1C 3A        cmp         byte ptr [rdx+r15],bl
  000000000000002B: 75 F7              jne         0000000000000024
  000000000000002D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000030: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000034: 4C 8B 74 31 28     mov         r14,qword ptr [rcx+rsi+28h]
  0000000000000039: 4D 85 F6           test        r14,r14
  000000000000003C: 7E 0A              jle         0000000000000048
  000000000000003E: 4D 3B F7           cmp         r14,r15
  0000000000000041: 7E 05              jle         0000000000000048
  0000000000000043: 4D 2B F7           sub         r14,r15
  0000000000000046: EB 03              jmp         000000000000004B
  0000000000000048: 45 33 F6           xor         r14d,r14d
  000000000000004B: 48 8B D6           mov         rdx,rsi
  000000000000004E: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000053: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000058: 90                 nop
  0000000000000059: 80 7C 24 28 00     cmp         byte ptr [rsp+28h],0
  000000000000005E: 75 0A              jne         000000000000006A
  0000000000000060: BB 04 00 00 00     mov         ebx,4
  0000000000000065: E9 33 01 00 00     jmp         000000000000019D
  000000000000006A: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000006D: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000071: 8B 44 31 18        mov         eax,dword ptr [rcx+rsi+18h]
  0000000000000075: 25 C0 01 00 00     and         eax,1C0h
  000000000000007A: 83 F8 40           cmp         eax,40h
  000000000000007D: 74 6E              je          00000000000000ED
  000000000000007F: 4D 85 F6           test        r14,r14
  0000000000000082: 7E 69              jle         00000000000000ED
  0000000000000084: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000087: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000008B: 4C 8B 4C 31 48     mov         r9,qword ptr [rcx+rsi+48h]
  0000000000000090: 44 0F B6 54 31 58  movzx       r10d,byte ptr [rcx+rsi+58h]
  0000000000000096: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  000000000000009A: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000009E: 74 08              je          00000000000000A8
  00000000000000A0: 49 8B 41 58        mov         rax,qword ptr [r9+58h]
  00000000000000A4: 8B 10              mov         edx,dword ptr [rax]
  00000000000000A6: EB 02              jmp         00000000000000AA
  00000000000000A8: 33 D2              xor         edx,edx
  00000000000000AA: 45 8B C2           mov         r8d,r10d
  00000000000000AD: 85 D2              test        edx,edx
  00000000000000AF: 7E 19              jle         00000000000000CA
  00000000000000B1: 49 8B 41 58        mov         rax,qword ptr [r9+58h]
  00000000000000B5: FF 08              dec         dword ptr [rax]
  00000000000000B7: 49 8B 49 40        mov         rcx,qword ptr [r9+40h]
  00000000000000BB: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000000BE: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000000C2: 48 89 01           mov         qword ptr [rcx],rax
  00000000000000C5: 44 88 12           mov         byte ptr [rdx],r10b
  00000000000000C8: EB 0F              jmp         00000000000000D9
  00000000000000CA: 49 8B 01           mov         rax,qword ptr [r9]
  00000000000000CD: 41 8B D2           mov         edx,r10d
  00000000000000D0: 49 8B C9           mov         rcx,r9
  00000000000000D3: FF 50 18           call        qword ptr [rax+18h]
  00000000000000D6: 44 8B C0           mov         r8d,eax
  00000000000000D9: 41 83 F8 FF        cmp         r8d,0FFFFFFFFh
  00000000000000DD: 75 09              jne         00000000000000E8
  00000000000000DF: 41 8D 58 05        lea         ebx,[r8+5]
  00000000000000E3: E9 85 00 00 00     jmp         000000000000016D
  00000000000000E8: 49 FF CE           dec         r14
  00000000000000EB: EB 92              jmp         000000000000007F
  00000000000000ED: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000F0: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000F4: 48 8B 4C 31 48     mov         rcx,qword ptr [rcx+rsi+48h]
  00000000000000F9: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000FC: 4D 8B C7           mov         r8,r15
  00000000000000FF: 49 8B D4           mov         rdx,r12
  0000000000000102: FF 50 48           call        qword ptr [rax+48h]
  0000000000000105: 49 3B C7           cmp         rax,r15
  0000000000000108: 75 60              jne         000000000000016A
  000000000000010A: 4D 85 F6           test        r14,r14
  000000000000010D: 7E 65              jle         0000000000000174
  000000000000010F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000112: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000116: 4C 8B 44 31 48     mov         r8,qword ptr [rcx+rsi+48h]
  000000000000011B: 44 0F B6 54 31 58  movzx       r10d,byte ptr [rcx+rsi+58h]
  0000000000000121: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  0000000000000125: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000129: 74 08              je          0000000000000133
  000000000000012B: 49 8B 40 58        mov         rax,qword ptr [r8+58h]
  000000000000012F: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000131: EB 02              jmp         0000000000000135
  0000000000000133: 33 C9              xor         ecx,ecx
  0000000000000135: 45 8B CA           mov         r9d,r10d
  0000000000000138: 85 C9              test        ecx,ecx
  000000000000013A: 7E 19              jle         0000000000000155
  000000000000013C: 49 8B 40 58        mov         rax,qword ptr [r8+58h]
  0000000000000140: FF 08              dec         dword ptr [rax]
  0000000000000142: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000146: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000149: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000014D: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000150: 44 88 12           mov         byte ptr [rdx],r10b
  0000000000000153: EB 0F              jmp         0000000000000164
  0000000000000155: 49 8B 00           mov         rax,qword ptr [r8]
  0000000000000158: 41 8B D2           mov         edx,r10d
  000000000000015B: 49 8B C8           mov         rcx,r8
  000000000000015E: FF 50 18           call        qword ptr [rax+18h]
  0000000000000161: 44 8B C8           mov         r9d,eax
  0000000000000164: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  0000000000000168: 75 1C              jne         0000000000000186
  000000000000016A: 83 CB 04           or          ebx,4
  000000000000016D: 89 9C 24 B0 00 00  mov         dword ptr [rsp+0B0h],ebx
                    00
  0000000000000174: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000177: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000017B: 48 C7 44 31 28 00  mov         qword ptr [rcx+rsi+28h],0
                    00 00 00
  0000000000000184: EB 17              jmp         000000000000019D
  0000000000000186: 49 FF CE           dec         r14
  0000000000000189: E9 7C FF FF FF     jmp         000000000000010A
$LN23:
  000000000000018E: 48 8B B4 24 A0 00  mov         rsi,qword ptr [rsp+0A0h]
                    00 00
  0000000000000196: 8B 9C 24 B0 00 00  mov         ebx,dword ptr [rsp+0B0h]
                    00
  000000000000019D: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000001A0: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001A4: 48 03 CE           add         rcx,rsi
  00000000000001A7: 0B 59 10           or          ebx,dword ptr [rcx+10h]
  00000000000001AA: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  00000000000001AE: 48 F7 D8           neg         rax
  00000000000001B1: 1B D2              sbb         edx,edx
  00000000000001B3: F7 D2              not         edx
  00000000000001B5: 83 E2 04           and         edx,4
  00000000000001B8: 0B D3              or          edx,ebx
  00000000000001BA: 83 E2 17           and         edx,17h
  00000000000001BD: 89 51 10           mov         dword ptr [rcx+10h],edx
  00000000000001C0: 23 51 14           and         edx,dword ptr [rcx+14h]
  00000000000001C3: 75 41              jne         0000000000000206
  00000000000001C5: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  00000000000001CA: 85 C0              test        eax,eax
  00000000000001CC: 75 0B              jne         00000000000001D9
  00000000000001CE: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000001D3: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00000000000001D8: 90                 nop
  00000000000001D9: 48 8B 54 24 20     mov         rdx,qword ptr [rsp+20h]
  00000000000001DE: 48 8B 02           mov         rax,qword ptr [rdx]
  00000000000001E1: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001E5: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  00000000000001EA: 48 85 C9           test        rcx,rcx
  00000000000001ED: 74 07              je          00000000000001F6
  00000000000001EF: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000001F2: FF 50 10           call        qword ptr [rax+10h]
  00000000000001F5: 90                 nop
  00000000000001F6: 48 8B C6           mov         rax,rsi
  00000000000001F9: 48 83 C4 70        add         rsp,70h
  00000000000001FD: 41 5F              pop         r15
  00000000000001FF: 41 5E              pop         r14
  0000000000000201: 41 5C              pop         r12
  0000000000000203: 5E                 pop         rsi
  0000000000000204: 5B                 pop         rbx
  0000000000000205: C3                 ret
  0000000000000206: F6 C2 04           test        dl,4
  0000000000000209: 74 09              je          0000000000000214
  000000000000020B: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000212: EB 15              jmp         0000000000000229
  0000000000000214: F6 C2 02           test        dl,2
  0000000000000217: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000021E: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000225: 48 0F 44 D8        cmove       rbx,rax
  0000000000000229: BA 01 00 00 00     mov         edx,1
  000000000000022E: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000233: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000238: 4C 8B C0           mov         r8,rax
  000000000000023B: 48 8B D3           mov         rdx,rbx
  000000000000023E: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000243: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000248: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  000000000000024F: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000254: E8 00 00 00 00     call        _CxxThrowException
  0000000000000259: CC                 int         3

?dtor$0@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class dtor$0::std &,char const *)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$3@?0???$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z@4HA (int `class catch$3::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::operator<<<struct std::char_traits<char> >(class catch$3::std &,char const *)'::`1'::catch$3):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z (void * __cdecl std::_Allocate_manually_vector_aligned<struct std::_Default_allocate_traits>(unsigned __int64)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 41 27        lea         rax,[rcx+27h]
  0000000000000008: 48 3B C1           cmp         rax,rcx
  000000000000000B: 76 27              jbe         0000000000000034
  000000000000000D: 48 8B C8           mov         rcx,rax
  0000000000000010: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000015: 48 8B C8           mov         rcx,rax
  0000000000000018: 48 85 C0           test        rax,rax
  000000000000001B: 74 11              je          000000000000002E
  000000000000001D: 48 83 C0 27        add         rax,27h
  0000000000000021: 48 83 E0 E0        and         rax,0FFFFFFFFFFFFFFE0h
  0000000000000025: 48 89 48 F8        mov         qword ptr [rax-8],rcx
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret
  000000000000002E: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000033: CC                 int         3
  0000000000000034: E8 00 00 00 00     call        ?_Throw_bad_array_new_length@std@@YAXXZ
  0000000000000039: CC                 int         3

??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z (private: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct<1,char const *>(char const * const,unsigned __int64)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 56              push        r14
  0000000000000015: 48 83 EC 20        sub         rsp,20h
  0000000000000019: 48 BF FF FF FF FF  mov         rdi,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000023: 49 8B D8           mov         rbx,r8
  0000000000000026: 48 8B EA           mov         rbp,rdx
  0000000000000029: 48 8B F1           mov         rsi,rcx
  000000000000002C: 4C 3B C7           cmp         r8,rdi
  000000000000002F: 0F 87 A3 00 00 00  ja          00000000000000D8
  0000000000000035: 48 83 FB 0F        cmp         rbx,0Fh
  0000000000000039: 77 17              ja          0000000000000052
  000000000000003B: 48 89 59 10        mov         qword ptr [rcx+10h],rbx
  000000000000003F: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  0000000000000047: E8 00 00 00 00     call        memcpy
  000000000000004C: C6 04 33 00        mov         byte ptr [rbx+rsi],0
  0000000000000050: EB 6B              jmp         00000000000000BD
  0000000000000052: 48 8B C3           mov         rax,rbx
  0000000000000055: 48 83 C8 0F        or          rax,0Fh
  0000000000000059: 48 3B C7           cmp         rax,rdi
  000000000000005C: 76 0C              jbe         000000000000006A
  000000000000005E: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  0000000000000068: EB 26              jmp         0000000000000090
  000000000000006A: B9 16 00 00 00     mov         ecx,16h
  000000000000006F: 48 8B F8           mov         rdi,rax
  0000000000000072: 48 3B C1           cmp         rax,rcx
  0000000000000075: 48 0F 42 F9        cmovb       rdi,rcx
  0000000000000079: 48 8D 4F 01        lea         rcx,[rdi+1]
  000000000000007D: 48 85 C9           test        rcx,rcx
  0000000000000080: 75 05              jne         0000000000000087
  0000000000000082: 45 33 F6           xor         r14d,r14d
  0000000000000085: EB 18              jmp         000000000000009F
  0000000000000087: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  000000000000008E: 72 07              jb          0000000000000097
  0000000000000090: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000095: EB 05              jmp         000000000000009C
  0000000000000097: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009C: 4C 8B F0           mov         r14,rax
  000000000000009F: 4C 8B C3           mov         r8,rbx
  00000000000000A2: 4C 89 36           mov         qword ptr [rsi],r14
  00000000000000A5: 48 8B D5           mov         rdx,rbp
  00000000000000A8: 48 89 5E 10        mov         qword ptr [rsi+10h],rbx
  00000000000000AC: 49 8B CE           mov         rcx,r14
  00000000000000AF: 48 89 7E 18        mov         qword ptr [rsi+18h],rdi
  00000000000000B3: E8 00 00 00 00     call        memcpy
  00000000000000B8: 41 C6 04 1E 00     mov         byte ptr [r14+rbx],0
  00000000000000BD: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000C2: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  00000000000000C7: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000CC: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000000D1: 48 83 C4 20        add         rsp,20h
  00000000000000D5: 41 5E              pop         r14
  00000000000000D7: C3                 ret
  00000000000000D8: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  00000000000000DD: CC                 int         3

??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z (private: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct<2,char const *>(char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 48 8B EA           mov         rbp,rdx
  0000000000000024: 48 8B F1           mov         rsi,rcx
  0000000000000027: 4C 3B C3           cmp         r8,rbx
  000000000000002A: 0F 87 8F 00 00 00  ja          00000000000000BF
  0000000000000030: 49 83 F8 0F        cmp         r8,0Fh
  0000000000000034: 77 14              ja          000000000000004A
  0000000000000036: 4C 89 41 10        mov         qword ptr [rcx+10h],r8
  000000000000003A: 41 B8 10 00 00 00  mov         r8d,10h
  0000000000000040: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  0000000000000048: EB 5C              jmp         00000000000000A6
  000000000000004A: 48 8B C7           mov         rax,rdi
  000000000000004D: 48 83 C8 0F        or          rax,0Fh
  0000000000000051: 48 3B C3           cmp         rax,rbx
  0000000000000054: 76 0C              jbe         0000000000000062
  0000000000000056: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  0000000000000060: EB 23              jmp         0000000000000085
  0000000000000062: B9 16 00 00 00     mov         ecx,16h
  0000000000000067: 48 8B D8           mov         rbx,rax
  000000000000006A: 48 3B C1           cmp         rax,rcx
  000000000000006D: 48 0F 42 D9        cmovb       rbx,rcx
  0000000000000071: 33 C0              xor         eax,eax
  0000000000000073: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000077: 48 85 C9           test        rcx,rcx
  000000000000007A: 74 15              je          0000000000000091
  000000000000007C: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000083: 72 07              jb          000000000000008C
  0000000000000085: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  000000000000008A: EB 05              jmp         0000000000000091
  000000000000008C: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000091: 48 89 06           mov         qword ptr [rsi],rax
  0000000000000094: 4C 8D 47 01        lea         r8,[rdi+1]
  0000000000000098: 48 89 7E 10        mov         qword ptr [rsi+10h],rdi
  000000000000009C: 48 8B D5           mov         rdx,rbp
  000000000000009F: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000A3: 48 8B C8           mov         rcx,rax
  00000000000000A6: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000AB: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  00000000000000B0: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000B5: 48 83 C4 20        add         rsp,20h
  00000000000000B9: 5F                 pop         rdi
  00000000000000BA: E9 00 00 00 00     jmp         memcpy
  00000000000000BF: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  00000000000000C4: CC                 int         3

??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z (private: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Construct<0,char>(char,unsigned __int64)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 56              push        r14
  0000000000000015: 48 83 EC 20        sub         rsp,20h
  0000000000000019: 48 BF FF FF FF FF  mov         rdi,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000023: 0F BE EA           movsx       ebp,dl
  0000000000000026: 49 8B D8           mov         rbx,r8
  0000000000000029: 48 8B F1           mov         rsi,rcx
  000000000000002C: 4C 3B C7           cmp         r8,rdi
  000000000000002F: 0F 87 A4 00 00 00  ja          00000000000000D9
  0000000000000035: 48 83 FB 0F        cmp         rbx,0Fh
  0000000000000039: 77 19              ja          0000000000000054
  000000000000003B: 8B D5              mov         edx,ebp
  000000000000003D: 48 89 59 10        mov         qword ptr [rcx+10h],rbx
  0000000000000041: 48 C7 41 18 0F 00  mov         qword ptr [rcx+18h],0Fh
                    00 00
  0000000000000049: E8 00 00 00 00     call        memset
  000000000000004E: C6 04 33 00        mov         byte ptr [rbx+rsi],0
  0000000000000052: EB 6A              jmp         00000000000000BE
  0000000000000054: 48 8B C3           mov         rax,rbx
  0000000000000057: 48 83 C8 0F        or          rax,0Fh
  000000000000005B: 48 3B C7           cmp         rax,rdi
  000000000000005E: 76 0C              jbe         000000000000006C
  0000000000000060: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  000000000000006A: EB 26              jmp         0000000000000092
  000000000000006C: B9 16 00 00 00     mov         ecx,16h
  0000000000000071: 48 8B F8           mov         rdi,rax
  0000000000000074: 48 3B C1           cmp         rax,rcx
  0000000000000077: 48 0F 42 F9        cmovb       rdi,rcx
  000000000000007B: 48 8D 4F 01        lea         rcx,[rdi+1]
  000000000000007F: 48 85 C9           test        rcx,rcx
  0000000000000082: 75 05              jne         0000000000000089
  0000000000000084: 45 33 F6           xor         r14d,r14d
  0000000000000087: EB 18              jmp         00000000000000A1
  0000000000000089: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000090: 72 07              jb          0000000000000099
  0000000000000092: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000097: EB 05              jmp         000000000000009E
  0000000000000099: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009E: 4C 8B F0           mov         r14,rax
  00000000000000A1: 8B D5              mov         edx,ebp
  00000000000000A3: 4C 89 36           mov         qword ptr [rsi],r14
  00000000000000A6: 4C 8B C3           mov         r8,rbx
  00000000000000A9: 48 89 5E 10        mov         qword ptr [rsi+10h],rbx
  00000000000000AD: 49 8B CE           mov         rcx,r14
  00000000000000B0: 48 89 7E 18        mov         qword ptr [rsi+18h],rdi
  00000000000000B4: E8 00 00 00 00     call        memset
  00000000000000B9: 41 C6 04 1E 00     mov         byte ptr [r14+rbx],0
  00000000000000BE: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000C3: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  00000000000000C8: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000CD: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000000D2: 48 83 C4 20        add         rsp,20h
  00000000000000D6: 41 5E              pop         r14
  00000000000000D8: C3                 ret
  00000000000000D9: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  00000000000000DE: CC                 int         3

??$_Float_put_desired_precision@N@std@@YAH_JH@Z (int __cdecl std::_Float_put_desired_precision<double>(__int64,int)):
  0000000000000000: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000006: 75 06              jne         000000000000000E
  0000000000000008: B8 0D 00 00 00     mov         eax,0Dh
  000000000000000D: C3                 ret
  000000000000000E: 33 C0              xor         eax,eax
  0000000000000010: 48 85 C9           test        rcx,rcx
  0000000000000013: 7E 03              jle         0000000000000018
  0000000000000015: 8B C1              mov         eax,ecx
  0000000000000017: C3                 ret
  0000000000000018: 75 06              jne         0000000000000020
  000000000000001A: 85 D2              test        edx,edx
  000000000000001C: 0F 94 C0           sete        al
  000000000000001F: C3                 ret
  0000000000000020: B8 06 00 00 00     mov         eax,6
  0000000000000025: C3                 ret

??$_Float_put_desired_precision@O@std@@YAH_JH@Z (int __cdecl std::_Float_put_desired_precision<long double>(__int64,int)):
  0000000000000000: 81 FA 00 30 00 00  cmp         edx,3000h
  0000000000000006: 75 06              jne         000000000000000E
  0000000000000008: B8 0D 00 00 00     mov         eax,0Dh
  000000000000000D: C3                 ret
  000000000000000E: 33 C0              xor         eax,eax
  0000000000000010: 48 85 C9           test        rcx,rcx
  0000000000000013: 7E 03              jle         0000000000000018
  0000000000000015: 8B C1              mov         eax,ecx
  0000000000000017: C3                 ret
  0000000000000018: 75 06              jne         0000000000000020
  000000000000001A: 85 D2              test        edx,edx
  000000000000001C: 0F 94 C0           sete        al
  000000000000001F: C3                 ret
  0000000000000020: B8 06 00 00 00     mov         eax,6
  0000000000000025: C3                 ret

??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,char const *,unsigned __int64,bool)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 F9     lea         rbp,[rsp-7]
  0000000000000015: 48 81 EC C0 00 00  sub         rsp,0C0h
                    00
  000000000000001C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000023: 48 33 C4           xor         rax,rsp
  0000000000000026: 48 89 45 F7        mov         qword ptr [rbp-9],rax
  000000000000002A: 4D 8B E9           mov         r13,r9
  000000000000002D: 4D 8B F8           mov         r15,r8
  0000000000000030: 48 89 55 AF        mov         qword ptr [rbp-51h],rdx
  0000000000000034: 48 89 4D A7        mov         qword ptr [rbp-59h],rcx
  0000000000000038: 8A 45 67           mov         al,byte ptr [rbp+67h]
  000000000000003B: 88 44 24 30        mov         byte ptr [rsp+30h],al
  000000000000003F: 48 8B 7D 6F        mov         rdi,qword ptr [rbp+6Fh]
  0000000000000043: 4C 8B 75 77        mov         r14,qword ptr [rbp+77h]
  0000000000000047: 4D 85 F6           test        r14,r14
  000000000000004A: 74 0F              je          000000000000005B
  000000000000004C: 8A 07              mov         al,byte ptr [rdi]
  000000000000004E: 2C 2B              sub         al,2Bh
  0000000000000050: A8 FD              test        al,0FDh
  0000000000000052: 75 07              jne         000000000000005B
  0000000000000054: BB 01 00 00 00     mov         ebx,1
  0000000000000059: EB 02              jmp         000000000000005D
  000000000000005B: 33 DB              xor         ebx,ebx
  000000000000005D: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000061: B9 00 30 00 00     mov         ecx,3000h
  0000000000000066: 23 C1              and         eax,ecx
  0000000000000068: 3B C1              cmp         eax,ecx
  000000000000006A: 74 09              je          0000000000000075
  000000000000006C: 48 8D 15 00 00 00  lea         rdx,[??_C@_02MDKMJEGG@eE@]
                    00
  0000000000000073: EB 22              jmp         0000000000000097
  0000000000000075: 48 8D 15 00 00 00  lea         rdx,[??_C@_02OOPEBDOJ@pP@]
                    00
  000000000000007C: 48 8D 4B 02        lea         rcx,[rbx+2]
  0000000000000080: 49 3B CE           cmp         rcx,r14
  0000000000000083: 77 12              ja          0000000000000097
  0000000000000085: 80 3C 1F 30        cmp         byte ptr [rdi+rbx],30h
  0000000000000089: 75 0C              jne         0000000000000097
  000000000000008B: 8A 44 1F 01        mov         al,byte ptr [rdi+rbx+1]
  000000000000008F: 2C 58              sub         al,58h
  0000000000000091: A8 DF              test        al,0DFh
  0000000000000093: 48 0F 44 D9        cmove       rbx,rcx
  0000000000000097: 48 8B CF           mov         rcx,rdi
  000000000000009A: E8 00 00 00 00     call        strcspn
  000000000000009F: 48 89 45 87        mov         qword ptr [rbp-79h],rax
  00000000000000A3: B8 2E 00 00 00     mov         eax,2Eh
  00000000000000A8: 66 89 44 24 34     mov         word ptr [rsp+34h],ax
  00000000000000AD: E8 00 00 00 00     call        localeconv
  00000000000000B2: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000B5: 8A 01              mov         al,byte ptr [rcx]
  00000000000000B7: 88 44 24 34        mov         byte ptr [rsp+34h],al
  00000000000000BB: 48 8D 54 24 34     lea         rdx,[rsp+34h]
  00000000000000C0: 48 8B CF           mov         rcx,rdi
  00000000000000C3: E8 00 00 00 00     call        strcspn
  00000000000000C8: 48 8B F0           mov         rsi,rax
  00000000000000CB: 49 8B 45 40        mov         rax,qword ptr [r13+40h]
  00000000000000CF: 4C 8B 60 08        mov         r12,qword ptr [rax+8]
  00000000000000D3: 4C 89 65 9F        mov         qword ptr [rbp-61h],r12
  00000000000000D7: 49 8B 04 24        mov         rax,qword ptr [r12]
  00000000000000DB: 49 8B CC           mov         rcx,r12
  00000000000000DE: FF 50 08           call        qword ptr [rax+8]
  00000000000000E1: 90                 nop
  00000000000000E2: 48 8D 4D 97        lea         rcx,[rbp-69h]
  00000000000000E6: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000EB: 48 89 45 97        mov         qword ptr [rbp-69h],rax
  00000000000000EF: 4D 85 E4           test        r12,r12
  00000000000000F2: 74 1C              je          0000000000000110
  00000000000000F4: 49 8B 04 24        mov         rax,qword ptr [r12]
  00000000000000F8: 49 8B CC           mov         rcx,r12
  00000000000000FB: FF 50 10           call        qword ptr [rax+10h]
  00000000000000FE: 48 8B C8           mov         rcx,rax
  0000000000000101: 48 85 C0           test        rax,rax
  0000000000000104: 74 0A              je          0000000000000110
  0000000000000106: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000109: BA 01 00 00 00     mov         edx,1
  000000000000010E: FF 10              call        qword ptr [rax]
  0000000000000110: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000113: 0F 11 45 B7        movups      xmmword ptr [rbp-49h],xmm0
  0000000000000117: 48 C7 45 C7 00 00  mov         qword ptr [rbp-39h],0
                    00 00
  000000000000011F: 48 C7 45 CF 00 00  mov         qword ptr [rbp-31h],0
                    00 00
  0000000000000127: 4D 8B C6           mov         r8,r14
  000000000000012A: 33 D2              xor         edx,edx
  000000000000012C: 48 8D 4D B7        lea         rcx,[rbp-49h]
  0000000000000130: E8 00 00 00 00     call        ??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
  0000000000000135: 90                 nop
  0000000000000136: 4C 8D 4D B7        lea         r9,[rbp-49h]
  000000000000013A: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  000000000000013F: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  0000000000000144: 48 8B 4D 97        mov         rcx,qword ptr [rbp-69h]
  0000000000000148: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000014B: 4D 8D 04 3E        lea         r8,[r14+rdi]
  000000000000014F: 48 8B D7           mov         rdx,rdi
  0000000000000152: FF 50 38           call        qword ptr [rax+38h]
  0000000000000155: 49 8B 45 40        mov         rax,qword ptr [r13+40h]
  0000000000000159: 4C 8B 60 08        mov         r12,qword ptr [rax+8]
  000000000000015D: 4C 89 65 9F        mov         qword ptr [rbp-61h],r12
  0000000000000161: 49 8B 04 24        mov         rax,qword ptr [r12]
  0000000000000165: 49 8B CC           mov         rcx,r12
  0000000000000168: FF 50 08           call        qword ptr [rax+8]
  000000000000016B: 90                 nop
  000000000000016C: 48 8D 4D 97        lea         rcx,[rbp-69h]
  0000000000000170: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  0000000000000175: 48 8B F8           mov         rdi,rax
  0000000000000178: 4D 85 E4           test        r12,r12
  000000000000017B: 74 1C              je          0000000000000199
  000000000000017D: 49 8B 04 24        mov         rax,qword ptr [r12]
  0000000000000181: 49 8B CC           mov         rcx,r12
  0000000000000184: FF 50 10           call        qword ptr [rax+10h]
  0000000000000187: 48 8B C8           mov         rcx,rax
  000000000000018A: 48 85 C0           test        rax,rax
  000000000000018D: 74 0A              je          0000000000000199
  000000000000018F: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000192: BA 01 00 00 00     mov         edx,1
  0000000000000197: FF 10              call        qword ptr [rax]
  0000000000000199: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000019C: 48 8D 55 D7        lea         rdx,[rbp-29h]
  00000000000001A0: 48 8B CF           mov         rcx,rdi
  00000000000001A3: FF 50 28           call        qword ptr [rax+28h]
  00000000000001A6: 90                 nop
  00000000000001A7: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001AA: 48 8B CF           mov         rcx,rdi
  00000000000001AD: FF 50 20           call        qword ptr [rax+20h]
  00000000000001B0: 44 8A E0           mov         r12b,al
  00000000000001B3: 49 3B F6           cmp         rsi,r14
  00000000000001B6: 74 1C              je          00000000000001D4
  00000000000001B8: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001BB: 48 8B CF           mov         rcx,rdi
  00000000000001BE: FF 50 18           call        qword ptr [rax+18h]
  00000000000001C1: 8A C8              mov         cl,al
  00000000000001C3: 48 8D 45 B7        lea         rax,[rbp-49h]
  00000000000001C7: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  00000000000001CC: 48 0F 47 45 B7     cmova       rax,qword ptr [rbp-49h]
  00000000000001D1: 88 0C 30           mov         byte ptr [rax+rsi],cl
  00000000000001D4: 80 7D 7F 00        cmp         byte ptr [rbp+7Fh],0
  00000000000001D8: 74 54              je          000000000000022E
  00000000000001DA: 49 3B F6           cmp         rsi,r14
  00000000000001DD: 48 0F 44 75 87     cmove       rsi,qword ptr [rbp-79h]
  00000000000001E2: 48 8D 7D D7        lea         rdi,[rbp-29h]
  00000000000001E6: 48 83 7D EF 0F     cmp         qword ptr [rbp-11h],0Fh
  00000000000001EB: 48 0F 47 7D D7     cmova       rdi,qword ptr [rbp-29h]
  00000000000001F0: EB 36              jmp         0000000000000228
  00000000000001F2: 84 C0              test        al,al
  00000000000001F4: 7E 38              jle         000000000000022E
  00000000000001F6: 48 0F BE 0F        movsx       rcx,byte ptr [rdi]
  00000000000001FA: 48 8B C6           mov         rax,rsi
  00000000000001FD: 48 2B C3           sub         rax,rbx
  0000000000000200: 48 3B C8           cmp         rcx,rax
  0000000000000203: 73 29              jae         000000000000022E
  0000000000000205: 48 2B F1           sub         rsi,rcx
  0000000000000208: 45 8A CC           mov         r9b,r12b
  000000000000020B: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000211: 48 8B D6           mov         rdx,rsi
  0000000000000214: 48 8D 4D B7        lea         rcx,[rbp-49h]
  0000000000000218: E8 00 00 00 00     call        ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
  000000000000021D: 48 8D 47 01        lea         rax,[rdi+1]
  0000000000000221: 80 38 00           cmp         byte ptr [rax],0
  0000000000000224: 48 0F 4F F8        cmovg       rdi,rax
  0000000000000228: 8A 07              mov         al,byte ptr [rdi]
  000000000000022A: 3C 7F              cmp         al,7Fh
  000000000000022C: 75 C4              jne         00000000000001F2
  000000000000022E: 48 8B 75 C7        mov         rsi,qword ptr [rbp-39h]
  0000000000000232: 49 8B 7D 28        mov         rdi,qword ptr [r13+28h]
  0000000000000236: 48 85 FF           test        rdi,rdi
  0000000000000239: 7E 0A              jle         0000000000000245
  000000000000023B: 48 3B FE           cmp         rdi,rsi
  000000000000023E: 76 05              jbe         0000000000000245
  0000000000000240: 48 2B FE           sub         rdi,rsi
  0000000000000243: EB 02              jmp         0000000000000247
  0000000000000245: 33 FF              xor         edi,edi
  0000000000000247: 41 8B 45 18        mov         eax,dword ptr [r13+18h]
  000000000000024B: 25 C0 01 00 00     and         eax,1C0h
  0000000000000250: 41 0F 10 07        movups      xmm0,xmmword ptr [r15]
  0000000000000254: 4C 8D 45 87        lea         r8,[rbp-79h]
  0000000000000258: 48 8D 55 97        lea         rdx,[rbp-69h]
  000000000000025C: 4C 8B 75 A7        mov         r14,qword ptr [rbp-59h]
  0000000000000260: F3 0F 7F 45 87     movdqu      xmmword ptr [rbp-79h],xmm0
  0000000000000265: 49 8B CE           mov         rcx,r14
  0000000000000268: 83 F8 40           cmp         eax,40h
  000000000000026B: 0F 84 89 00 00 00  je          00000000000002FA
  0000000000000271: 3D 00 01 00 00     cmp         eax,100h
  0000000000000276: 74 41              je          00000000000002B9
  0000000000000278: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000027D: 44 8A 64 24 30     mov         r12b,byte ptr [rsp+30h]
  0000000000000282: 45 8A CC           mov         r9b,r12b
  0000000000000285: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  000000000000028A: 33 FF              xor         edi,edi
  000000000000028C: 4C 8D 4D B7        lea         r9,[rbp-49h]
  0000000000000290: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  0000000000000295: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  000000000000029A: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000029D: F3 0F 7F 45 87     movdqu      xmmword ptr [rbp-79h],xmm0
  00000000000002A2: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  00000000000002A7: 4C 8D 45 87        lea         r8,[rbp-79h]
  00000000000002AB: 48 8D 55 97        lea         rdx,[rbp-69h]
  00000000000002AF: 49 8B CE           mov         rcx,r14
  00000000000002B2: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  00000000000002B7: EB 5E              jmp         0000000000000317
  00000000000002B9: 4C 8D 4D B7        lea         r9,[rbp-49h]
  00000000000002BD: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  00000000000002C2: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  00000000000002C7: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  00000000000002CC: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  00000000000002D1: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000002D4: F3 0F 7F 45 87     movdqu      xmmword ptr [rbp-79h],xmm0
  00000000000002D9: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  00000000000002DE: 44 8A 64 24 30     mov         r12b,byte ptr [rsp+30h]
  00000000000002E3: 45 8A CC           mov         r9b,r12b
  00000000000002E6: 4C 8D 45 87        lea         r8,[rbp-79h]
  00000000000002EA: 48 8D 55 97        lea         rdx,[rbp-69h]
  00000000000002EE: 49 8B CE           mov         rcx,r14
  00000000000002F1: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  00000000000002F6: 33 FF              xor         edi,edi
  00000000000002F8: EB 1D              jmp         0000000000000317
  00000000000002FA: 4C 8D 4D B7        lea         r9,[rbp-49h]
  00000000000002FE: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  0000000000000303: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  0000000000000308: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000030D: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  0000000000000312: 44 8A 64 24 30     mov         r12b,byte ptr [rsp+30h]
  0000000000000317: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000031A: F3 41 0F 7F 07     movdqu      xmmword ptr [r15],xmm0
  000000000000031F: 4C 8D 4D B7        lea         r9,[rbp-49h]
  0000000000000323: 48 83 7D CF 0F     cmp         qword ptr [rbp-31h],0Fh
  0000000000000328: 4C 0F 47 4D B7     cmova       r9,qword ptr [rbp-49h]
  000000000000032D: 4C 03 CB           add         r9,rbx
  0000000000000330: F3 0F 7F 45 87     movdqu      xmmword ptr [rbp-79h],xmm0
  0000000000000335: 48 2B F3           sub         rsi,rbx
  0000000000000338: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000033D: 4C 8D 45 87        lea         r8,[rbp-79h]
  0000000000000341: 48 8D 55 97        lea         rdx,[rbp-69h]
  0000000000000345: 49 8B CE           mov         rcx,r14
  0000000000000348: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  000000000000034D: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  0000000000000350: 33 F6              xor         esi,esi
  0000000000000352: 49 89 75 28        mov         qword ptr [r13+28h],rsi
  0000000000000356: F3 0F 7F 45 87     movdqu      xmmword ptr [rbp-79h],xmm0
  000000000000035B: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  0000000000000360: 45 8A CC           mov         r9b,r12b
  0000000000000363: 4C 8D 45 87        lea         r8,[rbp-79h]
  0000000000000367: 48 8B 5D AF        mov         rbx,qword ptr [rbp-51h]
  000000000000036B: 48 8B D3           mov         rdx,rbx
  000000000000036E: 49 8B CE           mov         rcx,r14
  0000000000000371: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000376: 90                 nop
  0000000000000377: BF 00 10 00 00     mov         edi,1000h
  000000000000037C: 48 8B 55 EF        mov         rdx,qword ptr [rbp-11h]
  0000000000000380: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000384: 76 29              jbe         00000000000003AF
  0000000000000386: 48 FF C2           inc         rdx
  0000000000000389: 48 8B 4D D7        mov         rcx,qword ptr [rbp-29h]
  000000000000038D: 48 8B C1           mov         rax,rcx
  0000000000000390: 48 3B D7           cmp         rdx,rdi
  0000000000000393: 72 15              jb          00000000000003AA
  0000000000000395: 48 83 C2 27        add         rdx,27h
  0000000000000399: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000039D: 48 2B C1           sub         rax,rcx
  00000000000003A0: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000003A4: 48 83 F8 1F        cmp         rax,1Fh
  00000000000003A8: 77 78              ja          0000000000000422
  00000000000003AA: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000003AF: 48 89 75 E7        mov         qword ptr [rbp-19h],rsi
  00000000000003B3: 48 C7 45 EF 0F 00  mov         qword ptr [rbp-11h],0Fh
                    00 00
  00000000000003BB: 40 88 75 D7        mov         byte ptr [rbp-29h],sil
  00000000000003BF: 48 8B 55 CF        mov         rdx,qword ptr [rbp-31h]
  00000000000003C3: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000003C7: 76 29              jbe         00000000000003F2
  00000000000003C9: 48 FF C2           inc         rdx
  00000000000003CC: 48 8B 4D B7        mov         rcx,qword ptr [rbp-49h]
  00000000000003D0: 48 8B C1           mov         rax,rcx
  00000000000003D3: 48 3B D7           cmp         rdx,rdi
  00000000000003D6: 72 15              jb          00000000000003ED
  00000000000003D8: 48 83 C2 27        add         rdx,27h
  00000000000003DC: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000003E0: 48 2B C1           sub         rax,rcx
  00000000000003E3: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000003E7: 48 83 F8 1F        cmp         rax,1Fh
  00000000000003EB: 77 2F              ja          000000000000041C
  00000000000003ED: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000003F2: 48 8B C3           mov         rax,rbx
  00000000000003F5: 48 8B 4D F7        mov         rcx,qword ptr [rbp-9]
  00000000000003F9: 48 33 CC           xor         rcx,rsp
  00000000000003FC: E8 00 00 00 00     call        __security_check_cookie
  0000000000000401: 48 8B 9C 24 00 01  mov         rbx,qword ptr [rsp+100h]
                    00 00
  0000000000000409: 48 81 C4 C0 00 00  add         rsp,0C0h
                    00
  0000000000000410: 41 5F              pop         r15
  0000000000000412: 41 5E              pop         r14
  0000000000000414: 41 5D              pop         r13
  0000000000000416: 41 5C              pop         r12
  0000000000000418: 5F                 pop         rdi
  0000000000000419: 5E                 pop         rsi
  000000000000041A: 5D                 pop         rbp
  000000000000041B: C3                 ret
  000000000000041C: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000421: 90                 nop
  0000000000000422: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000427: 90                 nop

?dtor$0@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$2@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$2):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$3@?0???$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Fput_v3<0>(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char const *,unsigned __int64,bool)const '::`1'::dtor$3):
  0000000000000000: 48 8D 8A 90 00 00  lea         rcx,[rdx+90h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

??$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@0@XZ (class std::_Iostream_error_category2 const & __cdecl std::_Immortalize_memcpy_image<class std::_Iostream_error_category2>(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B]
                    00
  0000000000000007: C3                 ret

??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class std::basic_ostream<char,struct std::char_traits<char> > &,char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 70        sub         rsp,70h
  0000000000000018: 4D 8B F0           mov         r14,r8
  000000000000001B: 4C 8B FA           mov         r15,rdx
  000000000000001E: 48 8B F9           mov         rdi,rcx
  0000000000000021: 33 DB              xor         ebx,ebx
  0000000000000023: 89 9C 24 A8 00 00  mov         dword ptr [rsp+0A8h],ebx
                    00
  000000000000002A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002D: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  0000000000000031: 49 8B 74 09 28     mov         rsi,qword ptr [r9+rcx+28h]
  0000000000000036: 48 85 F6           test        rsi,rsi
  0000000000000039: 7E 0A              jle         0000000000000045
  000000000000003B: 49 3B F0           cmp         rsi,r8
  000000000000003E: 76 05              jbe         0000000000000045
  0000000000000040: 49 2B F0           sub         rsi,r8
  0000000000000043: EB 02              jmp         0000000000000047
  0000000000000045: 33 F6              xor         esi,esi
  0000000000000047: 48 8B D7           mov         rdx,rdi
  000000000000004A: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  000000000000004F: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000054: 90                 nop
  0000000000000055: 80 7C 24 30 00     cmp         byte ptr [rsp+30h],0
  000000000000005A: 75 0A              jne         0000000000000066
  000000000000005C: BB 04 00 00 00     mov         ebx,4
  0000000000000061: E9 37 01 00 00     jmp         000000000000019D
  0000000000000066: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000069: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000006D: 8B 44 39 18        mov         eax,dword ptr [rcx+rdi+18h]
  0000000000000071: 25 C0 01 00 00     and         eax,1C0h
  0000000000000076: 83 F8 40           cmp         eax,40h
  0000000000000079: 74 72              je          00000000000000ED
  000000000000007B: 48 85 F6           test        rsi,rsi
  000000000000007E: 74 6D              je          00000000000000ED
  0000000000000080: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000083: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000087: 4C 8B 4C 39 48     mov         r9,qword ptr [rcx+rdi+48h]
  000000000000008C: 44 0F B6 54 39 58  movzx       r10d,byte ptr [rcx+rdi+58h]
  0000000000000092: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  0000000000000096: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000009A: 74 08              je          00000000000000A4
  000000000000009C: 49 8B 41 58        mov         rax,qword ptr [r9+58h]
  00000000000000A0: 8B 10              mov         edx,dword ptr [rax]
  00000000000000A2: EB 02              jmp         00000000000000A6
  00000000000000A4: 33 D2              xor         edx,edx
  00000000000000A6: 45 8B C2           mov         r8d,r10d
  00000000000000A9: 85 D2              test        edx,edx
  00000000000000AB: 7E 19              jle         00000000000000C6
  00000000000000AD: 49 8B 41 58        mov         rax,qword ptr [r9+58h]
  00000000000000B1: FF 08              dec         dword ptr [rax]
  00000000000000B3: 49 8B 49 40        mov         rcx,qword ptr [r9+40h]
  00000000000000B7: 48 8B 11           mov         rdx,qword ptr [rcx]
  00000000000000BA: 48 8D 42 01        lea         rax,[rdx+1]
  00000000000000BE: 48 89 01           mov         qword ptr [rcx],rax
  00000000000000C1: 44 88 12           mov         byte ptr [rdx],r10b
  00000000000000C4: EB 0F              jmp         00000000000000D5
  00000000000000C6: 49 8B 01           mov         rax,qword ptr [r9]
  00000000000000C9: 41 8B D2           mov         edx,r10d
  00000000000000CC: 49 8B C9           mov         rcx,r9
  00000000000000CF: FF 50 18           call        qword ptr [rax+18h]
  00000000000000D2: 44 8B C0           mov         r8d,eax
  00000000000000D5: 41 83 F8 FF        cmp         r8d,0FFFFFFFFh
  00000000000000D9: 75 0D              jne         00000000000000E8
  00000000000000DB: 41 8D 58 05        lea         ebx,[r8+5]
  00000000000000DF: 89 9C 24 A8 00 00  mov         dword ptr [rsp+0A8h],ebx
                    00
  00000000000000E6: EB 22              jmp         000000000000010A
  00000000000000E8: 48 FF CE           dec         rsi
  00000000000000EB: EB 8E              jmp         000000000000007B
  00000000000000ED: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000F0: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000F4: 48 8B 4C 39 48     mov         rcx,qword ptr [rcx+rdi+48h]
  00000000000000F9: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000FC: 4D 8B C6           mov         r8,r14
  00000000000000FF: 49 8B D7           mov         rdx,r15
  0000000000000102: FF 50 48           call        qword ptr [rax+48h]
  0000000000000105: 49 3B C6           cmp         rax,r14
  0000000000000108: 75 60              jne         000000000000016A
  000000000000010A: 48 85 F6           test        rsi,rsi
  000000000000010D: 74 65              je          0000000000000174
  000000000000010F: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000112: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000116: 4C 8B 44 39 48     mov         r8,qword ptr [rcx+rdi+48h]
  000000000000011B: 44 0F B6 54 39 58  movzx       r10d,byte ptr [rcx+rdi+58h]
  0000000000000121: 49 8B 40 40        mov         rax,qword ptr [r8+40h]
  0000000000000125: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000129: 74 08              je          0000000000000133
  000000000000012B: 49 8B 40 58        mov         rax,qword ptr [r8+58h]
  000000000000012F: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000131: EB 02              jmp         0000000000000135
  0000000000000133: 33 C9              xor         ecx,ecx
  0000000000000135: 45 8B CA           mov         r9d,r10d
  0000000000000138: 85 C9              test        ecx,ecx
  000000000000013A: 7E 19              jle         0000000000000155
  000000000000013C: 49 8B 40 58        mov         rax,qword ptr [r8+58h]
  0000000000000140: FF 08              dec         dword ptr [rax]
  0000000000000142: 49 8B 48 40        mov         rcx,qword ptr [r8+40h]
  0000000000000146: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000149: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000014D: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000150: 44 88 12           mov         byte ptr [rdx],r10b
  0000000000000153: EB 0F              jmp         0000000000000164
  0000000000000155: 49 8B 00           mov         rax,qword ptr [r8]
  0000000000000158: 41 8B D2           mov         edx,r10d
  000000000000015B: 49 8B C8           mov         rcx,r8
  000000000000015E: FF 50 18           call        qword ptr [rax+18h]
  0000000000000161: 44 8B C8           mov         r9d,eax
  0000000000000164: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  0000000000000168: 75 1C              jne         0000000000000186
  000000000000016A: 83 CB 04           or          ebx,4
  000000000000016D: 89 9C 24 A8 00 00  mov         dword ptr [rsp+0A8h],ebx
                    00
  0000000000000174: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000177: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000017B: 48 C7 44 39 28 00  mov         qword ptr [rcx+rdi+28h],0
                    00 00 00
  0000000000000184: EB 17              jmp         000000000000019D
  0000000000000186: 48 FF CE           dec         rsi
  0000000000000189: E9 7C FF FF FF     jmp         000000000000010A
$LN24:
  000000000000018E: 48 8B BC 24 90 00  mov         rdi,qword ptr [rsp+90h]
                    00 00
  0000000000000196: 8B 9C 24 A8 00 00  mov         ebx,dword ptr [rsp+0A8h]
                    00
  000000000000019D: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000001A0: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001A4: 48 03 CF           add         rcx,rdi
  00000000000001A7: 0B 59 10           or          ebx,dword ptr [rcx+10h]
  00000000000001AA: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  00000000000001AE: 48 F7 D8           neg         rax
  00000000000001B1: 1B D2              sbb         edx,edx
  00000000000001B3: F7 D2              not         edx
  00000000000001B5: 83 E2 04           and         edx,4
  00000000000001B8: 0B D3              or          edx,ebx
  00000000000001BA: 83 E2 17           and         edx,17h
  00000000000001BD: 89 51 10           mov         dword ptr [rcx+10h],edx
  00000000000001C0: 23 51 14           and         edx,dword ptr [rcx+14h]
  00000000000001C3: 75 4A              jne         000000000000020F
  00000000000001C5: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  00000000000001CA: 85 C0              test        eax,eax
  00000000000001CC: 75 0B              jne         00000000000001D9
  00000000000001CE: 48 8B 4C 24 28     mov         rcx,qword ptr [rsp+28h]
  00000000000001D3: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00000000000001D8: 90                 nop
  00000000000001D9: 48 8B 54 24 28     mov         rdx,qword ptr [rsp+28h]
  00000000000001DE: 48 8B 02           mov         rax,qword ptr [rdx]
  00000000000001E1: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001E5: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  00000000000001EA: 48 85 C9           test        rcx,rcx
  00000000000001ED: 74 07              je          00000000000001F6
  00000000000001EF: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000001F2: FF 50 10           call        qword ptr [rax+10h]
  00000000000001F5: 90                 nop
  00000000000001F6: 48 8B C7           mov         rax,rdi
  00000000000001F9: 4C 8D 5C 24 70     lea         r11,[rsp+70h]
  00000000000001FE: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  0000000000000202: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000206: 49 8B E3           mov         rsp,r11
  0000000000000209: 41 5F              pop         r15
  000000000000020B: 41 5E              pop         r14
  000000000000020D: 5F                 pop         rdi
  000000000000020E: C3                 ret
  000000000000020F: F6 C2 04           test        dl,4
  0000000000000212: 74 09              je          000000000000021D
  0000000000000214: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000021B: EB 15              jmp         0000000000000232
  000000000000021D: F6 C2 02           test        dl,2
  0000000000000220: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000227: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000022E: 48 0F 44 D8        cmove       rbx,rax
  0000000000000232: BA 01 00 00 00     mov         edx,1
  0000000000000237: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  000000000000023C: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000241: 4C 8B C0           mov         r8,rax
  0000000000000244: 48 8B D3           mov         rdx,rbx
  0000000000000247: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000024C: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000251: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000258: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  000000000000025D: E8 00 00 00 00     call        _CxxThrowException
  0000000000000262: CC                 int         3

?dtor$0@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class dtor$0::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class dtor$0::std &,char const * const,unsigned __int64)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$3@?0???$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z@4HA (int `class catch$3::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::_Insert_string<char,struct std::char_traits<char>,unsigned __int64>(class catch$3::std &,char const * const,unsigned __int64)'::`1'::catch$3):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z$0:
  000000000000000D: 48 8B 8D 90 00 00  mov         rcx,qword ptr [rbp+90h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??$_Maklocchr@D@std@@YADDPEADAEBU_Cvtvec@@@Z (char __cdecl std::_Maklocchr<char>(char,char *,struct _Cvtvec const &)):
  0000000000000000: 8A C1              mov         al,cl
  0000000000000002: C3                 ret

??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z (char * __cdecl std::_Maklocstr<char>(char const *,char *,struct _Cvtvec const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B F1           mov         rsi,rcx
  0000000000000012: E8 00 00 00 00     call        strlen
  0000000000000017: BA 01 00 00 00     mov         edx,1
  000000000000001C: 48 8D 78 01        lea         rdi,[rax+1]
  0000000000000020: 48 8B CF           mov         rcx,rdi
  0000000000000023: E8 00 00 00 00     call        calloc
  0000000000000028: 48 8B D8           mov         rbx,rax
  000000000000002B: 48 85 C0           test        rax,rax
  000000000000002E: 74 26              je          0000000000000056
  0000000000000030: 48 85 FF           test        rdi,rdi
  0000000000000033: 74 0E              je          0000000000000043
  0000000000000035: 4C 8B C7           mov         r8,rdi
  0000000000000038: 48 8B D6           mov         rdx,rsi
  000000000000003B: 48 8B C8           mov         rcx,rax
  000000000000003E: E8 00 00 00 00     call        memcpy
  0000000000000043: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000048: 48 8B C3           mov         rax,rbx
  000000000000004B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000050: 48 83 C4 20        add         rsp,20h
  0000000000000054: 5F                 pop         rdi
  0000000000000055: C3                 ret
  0000000000000056: E8 00 00 00 00     call        ?_Xbad_alloc@std@@YAXXZ
  000000000000005B: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)'::`2'::<lambda_1>,char const *,unsigned __int64>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)'::`2'::<lambda_1>,char const *,unsigned __int64)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 79 10        mov         r15,qword ptr [rcx+10h]
  0000000000000020: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000002A: 4C 8B 64 24 70     mov         r12,qword ptr [rsp+70h]
  000000000000002F: 48 8B C3           mov         rax,rbx
  0000000000000032: 49 2B C7           sub         rax,r15
  0000000000000035: 4D 8B E9           mov         r13,r9
  0000000000000038: 48 8B F9           mov         rdi,rcx
  000000000000003B: 48 3B C2           cmp         rax,rdx
  000000000000003E: 0F 82 0D 01 00 00  jb          0000000000000151
  0000000000000044: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  0000000000000048: 4D 8D 34 17        lea         r14,[r15+rdx]
  000000000000004C: 49 8B D6           mov         rdx,r14
  000000000000004F: 48 83 CA 0F        or          rdx,0Fh
  0000000000000053: 48 3B D3           cmp         rdx,rbx
  0000000000000056: 77 11              ja          0000000000000069
  0000000000000058: 48 8B CD           mov         rcx,rbp
  000000000000005B: 48 8B C3           mov         rax,rbx
  000000000000005E: 48 D1 E9           shr         rcx,1
  0000000000000061: 48 2B C1           sub         rax,rcx
  0000000000000064: 48 3B E8           cmp         rbp,rax
  0000000000000067: 76 0C              jbe         0000000000000075
  0000000000000069: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  0000000000000073: EB 24              jmp         0000000000000099
  0000000000000075: 48 8D 04 29        lea         rax,[rcx+rbp]
  0000000000000079: 48 8B DA           mov         rbx,rdx
  000000000000007C: 48 3B D0           cmp         rdx,rax
  000000000000007F: 48 0F 42 D8        cmovb       rbx,rax
  0000000000000083: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000087: 48 85 C9           test        rcx,rcx
  000000000000008A: 75 04              jne         0000000000000090
  000000000000008C: 33 F6              xor         esi,esi
  000000000000008E: EB 18              jmp         00000000000000A8
  0000000000000090: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000097: 72 07              jb          00000000000000A0
  0000000000000099: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  000000000000009E: EB 05              jmp         00000000000000A5
  00000000000000A0: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000A5: 48 8B F0           mov         rsi,rax
  00000000000000A8: 4C 89 77 10        mov         qword ptr [rdi+10h],r14
  00000000000000AC: 4D 8D 34 37        lea         r14,[r15+rsi]
  00000000000000B0: 48 89 5F 18        mov         qword ptr [rdi+18h],rbx
  00000000000000B4: 4D 8B C7           mov         r8,r15
  00000000000000B7: 48 8B CE           mov         rcx,rsi
  00000000000000BA: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000BE: 76 4D              jbe         000000000000010D
  00000000000000C0: 48 8B 1F           mov         rbx,qword ptr [rdi]
  00000000000000C3: 48 8B D3           mov         rdx,rbx
  00000000000000C6: E8 00 00 00 00     call        memcpy
  00000000000000CB: 4D 8B C4           mov         r8,r12
  00000000000000CE: 49 8B D5           mov         rdx,r13
  00000000000000D1: 49 8B CE           mov         rcx,r14
  00000000000000D4: E8 00 00 00 00     call        memcpy
  00000000000000D9: 48 8D 55 01        lea         rdx,[rbp+1]
  00000000000000DD: 43 C6 04 26 00     mov         byte ptr [r14+r12],0
  00000000000000E2: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000E9: 72 18              jb          0000000000000103
  00000000000000EB: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  00000000000000EF: 48 83 C2 27        add         rdx,27h
  00000000000000F3: 48 2B D9           sub         rbx,rcx
  00000000000000F6: 48 8D 43 F8        lea         rax,[rbx-8]
  00000000000000FA: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000FE: 77 4B              ja          000000000000014B
  0000000000000100: 48 8B D9           mov         rbx,rcx
  0000000000000103: 48 8B CB           mov         rcx,rbx
  0000000000000106: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000010B: EB 1B              jmp         0000000000000128
  000000000000010D: 48 8B D7           mov         rdx,rdi
  0000000000000110: E8 00 00 00 00     call        memcpy
  0000000000000115: 4D 8B C4           mov         r8,r12
  0000000000000118: 49 8B D5           mov         rdx,r13
  000000000000011B: 49 8B CE           mov         rcx,r14
  000000000000011E: E8 00 00 00 00     call        memcpy
  0000000000000123: 43 C6 04 26 00     mov         byte ptr [r14+r12],0
  0000000000000128: 48 89 37           mov         qword ptr [rdi],rsi
  000000000000012B: 48 8B C7           mov         rax,rdi
  000000000000012E: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000133: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  0000000000000138: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  000000000000013D: 48 83 C4 20        add         rsp,20h
  0000000000000141: 41 5F              pop         r15
  0000000000000143: 41 5E              pop         r14
  0000000000000145: 41 5D              pop         r13
  0000000000000147: 41 5C              pop         r12
  0000000000000149: 5F                 pop         rdi
  000000000000014A: C3                 ret
  000000000000014B: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000150: CC                 int         3
  0000000000000151: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000156: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,char>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,char)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  0000000000000020: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000002A: 48 8B C3           mov         rax,rbx
  000000000000002D: 4D 8B E9           mov         r13,r9
  0000000000000030: 49 2B C6           sub         rax,r14
  0000000000000033: 48 8B F9           mov         rdi,rcx
  0000000000000036: 48 3B C2           cmp         rax,rdx
  0000000000000039: 0F 82 15 01 00 00  jb          0000000000000154
  000000000000003F: 4C 8B 79 18        mov         r15,qword ptr [rcx+18h]
  0000000000000043: 49 8D 2C 16        lea         rbp,[r14+rdx]
  0000000000000047: 48 8B D5           mov         rdx,rbp
  000000000000004A: 48 83 CA 0F        or          rdx,0Fh
  000000000000004E: 48 3B D3           cmp         rdx,rbx
  0000000000000051: 77 11              ja          0000000000000064
  0000000000000053: 49 8B CF           mov         rcx,r15
  0000000000000056: 48 8B C3           mov         rax,rbx
  0000000000000059: 48 D1 E9           shr         rcx,1
  000000000000005C: 48 2B C1           sub         rax,rcx
  000000000000005F: 4C 3B F8           cmp         r15,rax
  0000000000000062: 76 0C              jbe         0000000000000070
  0000000000000064: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  000000000000006E: EB 24              jmp         0000000000000094
  0000000000000070: 4A 8D 04 39        lea         rax,[rcx+r15]
  0000000000000074: 48 8B DA           mov         rbx,rdx
  0000000000000077: 48 3B D0           cmp         rdx,rax
  000000000000007A: 48 0F 42 D8        cmovb       rbx,rax
  000000000000007E: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000082: 48 85 C9           test        rcx,rcx
  0000000000000085: 75 04              jne         000000000000008B
  0000000000000087: 33 F6              xor         esi,esi
  0000000000000089: EB 18              jmp         00000000000000A3
  000000000000008B: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000092: 72 07              jb          000000000000009B
  0000000000000094: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000099: EB 05              jmp         00000000000000A0
  000000000000009B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000A0: 48 8B F0           mov         rsi,rax
  00000000000000A3: 44 0F BE 64 24 70  movsx       r12d,byte ptr [rsp+70h]
  00000000000000A9: 4D 8B C6           mov         r8,r14
  00000000000000AC: 48 89 6F 10        mov         qword ptr [rdi+10h],rbp
  00000000000000B0: 49 8D 2C 36        lea         rbp,[r14+rsi]
  00000000000000B4: 48 89 5F 18        mov         qword ptr [rdi+18h],rbx
  00000000000000B8: 48 8B CE           mov         rcx,rsi
  00000000000000BB: 49 83 FF 0F        cmp         r15,0Fh
  00000000000000BF: 76 4E              jbe         000000000000010F
  00000000000000C1: 48 8B 1F           mov         rbx,qword ptr [rdi]
  00000000000000C4: 48 8B D3           mov         rdx,rbx
  00000000000000C7: E8 00 00 00 00     call        memcpy
  00000000000000CC: 4D 8B C5           mov         r8,r13
  00000000000000CF: 41 8B D4           mov         edx,r12d
  00000000000000D2: 48 8B CD           mov         rcx,rbp
  00000000000000D5: E8 00 00 00 00     call        memset
  00000000000000DA: 49 8D 57 01        lea         rdx,[r15+1]
  00000000000000DE: 42 C6 44 2D 00 00  mov         byte ptr [rbp+r13],0
  00000000000000E4: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000EB: 72 18              jb          0000000000000105
  00000000000000ED: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  00000000000000F1: 48 83 C2 27        add         rdx,27h
  00000000000000F5: 48 2B D9           sub         rbx,rcx
  00000000000000F8: 48 8D 43 F8        lea         rax,[rbx-8]
  00000000000000FC: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000100: 77 4C              ja          000000000000014E
  0000000000000102: 48 8B D9           mov         rbx,rcx
  0000000000000105: 48 8B CB           mov         rcx,rbx
  0000000000000108: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000010D: EB 1C              jmp         000000000000012B
  000000000000010F: 48 8B D7           mov         rdx,rdi
  0000000000000112: E8 00 00 00 00     call        memcpy
  0000000000000117: 4D 8B C5           mov         r8,r13
  000000000000011A: 41 8B D4           mov         edx,r12d
  000000000000011D: 48 8B CD           mov         rcx,rbp
  0000000000000120: E8 00 00 00 00     call        memset
  0000000000000125: 42 C6 44 2D 00 00  mov         byte ptr [rbp+r13],0
  000000000000012B: 48 89 37           mov         qword ptr [rdi],rsi
  000000000000012E: 48 8B C7           mov         rax,rdi
  0000000000000131: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  0000000000000136: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  000000000000013B: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000140: 48 83 C4 20        add         rsp,20h
  0000000000000144: 41 5F              pop         r15
  0000000000000146: 41 5E              pop         r14
  0000000000000148: 41 5D              pop         r13
  000000000000014A: 41 5C              pop         r12
  000000000000014C: 5F                 pop         rdi
  000000000000014D: C3                 ret
  000000000000014E: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000153: CC                 int         3
  0000000000000154: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  0000000000000159: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned __int64,unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char>(unsigned __int64,class `public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned __int64,unsigned __int64,char)'::`2'::<lambda_1>,unsigned __int64,unsigned __int64,char)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  0000000000000020: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000002A: 48 8B C3           mov         rax,rbx
  000000000000002D: 4D 8B F9           mov         r15,r9
  0000000000000030: 49 2B C6           sub         rax,r14
  0000000000000033: 48 8B F9           mov         rdi,rcx
  0000000000000036: 48 3B C2           cmp         rax,rdx
  0000000000000039: 0F 82 3B 01 00 00  jb          000000000000017A
  000000000000003F: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  0000000000000043: 4D 8D 24 16        lea         r12,[r14+rdx]
  0000000000000047: 49 8B D4           mov         rdx,r12
  000000000000004A: 48 83 CA 0F        or          rdx,0Fh
  000000000000004E: 48 3B D3           cmp         rdx,rbx
  0000000000000051: 77 11              ja          0000000000000064
  0000000000000053: 48 8B CD           mov         rcx,rbp
  0000000000000056: 48 8B C3           mov         rax,rbx
  0000000000000059: 48 D1 E9           shr         rcx,1
  000000000000005C: 48 2B C1           sub         rax,rcx
  000000000000005F: 48 3B E8           cmp         rbp,rax
  0000000000000062: 76 0C              jbe         0000000000000070
  0000000000000064: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  000000000000006E: EB 22              jmp         0000000000000092
  0000000000000070: 48 8D 04 29        lea         rax,[rcx+rbp]
  0000000000000074: 48 8B DA           mov         rbx,rdx
  0000000000000077: 48 3B D0           cmp         rdx,rax
  000000000000007A: 48 0F 42 D8        cmovb       rbx,rax
  000000000000007E: 33 F6              xor         esi,esi
  0000000000000080: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000084: 48 85 C9           test        rcx,rcx
  0000000000000087: 74 18              je          00000000000000A1
  0000000000000089: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000090: 72 07              jb          0000000000000099
  0000000000000092: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  0000000000000097: EB 05              jmp         000000000000009E
  0000000000000099: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000009E: 48 8B F0           mov         rsi,rax
  00000000000000A1: 44 0F BE 6C 24 78  movsx       r13d,byte ptr [rsp+78h]
  00000000000000A7: 4D 2B F7           sub         r14,r15
  00000000000000AA: 48 89 5F 18        mov         qword ptr [rdi+18h],rbx
  00000000000000AE: 4D 8B C7           mov         r8,r15
  00000000000000B1: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  00000000000000B6: 48 8B CE           mov         rcx,rsi
  00000000000000B9: 4C 89 67 10        mov         qword ptr [rdi+10h],r12
  00000000000000BD: 4D 8D 24 37        lea         r12,[r15+rsi]
  00000000000000C1: 49 03 DC           add         rbx,r12
  00000000000000C4: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000C8: 76 5F              jbe         0000000000000129
  00000000000000CA: 48 8B 1F           mov         rbx,qword ptr [rdi]
  00000000000000CD: 48 8B D3           mov         rdx,rbx
  00000000000000D0: E8 00 00 00 00     call        memcpy
  00000000000000D5: 4C 8B 44 24 70     mov         r8,qword ptr [rsp+70h]
  00000000000000DA: 41 8B D5           mov         edx,r13d
  00000000000000DD: 49 8B CC           mov         rcx,r12
  00000000000000E0: E8 00 00 00 00     call        memset
  00000000000000E5: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000000EA: 4A 8D 14 3B        lea         rdx,[rbx+r15]
  00000000000000EE: 49 03 CC           add         rcx,r12
  00000000000000F1: 4D 8D 46 01        lea         r8,[r14+1]
  00000000000000F5: E8 00 00 00 00     call        memcpy
  00000000000000FA: 48 8D 55 01        lea         rdx,[rbp+1]
  00000000000000FE: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000105: 72 18              jb          000000000000011F
  0000000000000107: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  000000000000010B: 48 83 C2 27        add         rdx,27h
  000000000000010F: 48 2B D9           sub         rbx,rcx
  0000000000000112: 48 8D 43 F8        lea         rax,[rbx-8]
  0000000000000116: 48 83 F8 1F        cmp         rax,1Fh
  000000000000011A: 77 58              ja          0000000000000174
  000000000000011C: 48 8B D9           mov         rbx,rcx
  000000000000011F: 48 8B CB           mov         rcx,rbx
  0000000000000122: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000127: EB 28              jmp         0000000000000151
  0000000000000129: 48 8B D7           mov         rdx,rdi
  000000000000012C: E8 00 00 00 00     call        memcpy
  0000000000000131: 4C 8B 44 24 70     mov         r8,qword ptr [rsp+70h]
  0000000000000136: 41 8B D5           mov         edx,r13d
  0000000000000139: 49 8B CC           mov         rcx,r12
  000000000000013C: E8 00 00 00 00     call        memset
  0000000000000141: 49 8D 14 3F        lea         rdx,[r15+rdi]
  0000000000000145: 48 8B CB           mov         rcx,rbx
  0000000000000148: 4D 8D 46 01        lea         r8,[r14+1]
  000000000000014C: E8 00 00 00 00     call        memcpy
  0000000000000151: 48 89 37           mov         qword ptr [rdi],rsi
  0000000000000154: 48 8B C7           mov         rax,rdi
  0000000000000157: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  000000000000015C: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  0000000000000161: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  0000000000000166: 48 83 C4 20        add         rsp,20h
  000000000000016A: 41 5F              pop         r15
  000000000000016C: 41 5E              pop         r14
  000000000000016E: 41 5D              pop         r13
  0000000000000170: 41 5C              pop         r12
  0000000000000172: 5F                 pop         rdi
  0000000000000173: C3                 ret
  0000000000000174: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000179: CC                 int         3
  000000000000017A: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  000000000000017F: CC                 int         3

??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z (private: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Reallocate_grow_by<class `public: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)'::`2'::<lambda_1>,char>(unsigned __int64,class `public: void __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::push_back(char)'::`2'::<lambda_1>,char)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 54              push        r12
  0000000000000015: 41 56              push        r14
  0000000000000017: 41 57              push        r15
  0000000000000019: 48 83 EC 20        sub         rsp,20h
  000000000000001D: 4C 8B 71 10        mov         r14,qword ptr [rcx+10h]
  0000000000000021: 48 BB FF FF FF FF  mov         rbx,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  000000000000002B: 48 8B C3           mov         rax,rbx
  000000000000002E: 45 8A F9           mov         r15b,r9b
  0000000000000031: 49 2B C6           sub         rax,r14
  0000000000000034: 48 8B F1           mov         rsi,rcx
  0000000000000037: 48 3B C2           cmp         rax,rdx
  000000000000003A: 0F 82 F9 00 00 00  jb          0000000000000139
  0000000000000040: 48 8B 69 18        mov         rbp,qword ptr [rcx+18h]
  0000000000000044: 4D 8D 24 16        lea         r12,[r14+rdx]
  0000000000000048: 49 8B D4           mov         rdx,r12
  000000000000004B: 48 83 CA 0F        or          rdx,0Fh
  000000000000004F: 48 3B D3           cmp         rdx,rbx
  0000000000000052: 77 11              ja          0000000000000065
  0000000000000054: 48 8B CD           mov         rcx,rbp
  0000000000000057: 48 8B C3           mov         rax,rbx
  000000000000005A: 48 D1 E9           shr         rcx,1
  000000000000005D: 48 2B C1           sub         rax,rcx
  0000000000000060: 48 3B E8           cmp         rbp,rax
  0000000000000063: 76 0C              jbe         0000000000000071
  0000000000000065: 48 B9 00 00 00 00  mov         rcx,8000000000000000h
                    00 00 00 80
  000000000000006F: EB 24              jmp         0000000000000095
  0000000000000071: 48 8D 04 29        lea         rax,[rcx+rbp]
  0000000000000075: 48 8B DA           mov         rbx,rdx
  0000000000000078: 48 3B D0           cmp         rdx,rax
  000000000000007B: 48 0F 42 D8        cmovb       rbx,rax
  000000000000007F: 48 8D 4B 01        lea         rcx,[rbx+1]
  0000000000000083: 48 85 C9           test        rcx,rcx
  0000000000000086: 75 04              jne         000000000000008C
  0000000000000088: 33 FF              xor         edi,edi
  000000000000008A: EB 18              jmp         00000000000000A4
  000000000000008C: 48 81 F9 00 10 00  cmp         rcx,1000h
                    00
  0000000000000093: 72 07              jb          000000000000009C
  0000000000000095: E8 00 00 00 00     call        ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
  000000000000009A: EB 05              jmp         00000000000000A1
  000000000000009C: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  00000000000000A1: 48 8B F8           mov         rdi,rax
  00000000000000A4: 4C 89 66 10        mov         qword ptr [rsi+10h],r12
  00000000000000A8: 4D 8B C6           mov         r8,r14
  00000000000000AB: 48 89 5E 18        mov         qword ptr [rsi+18h],rbx
  00000000000000AF: 48 8B CF           mov         rcx,rdi
  00000000000000B2: 48 83 FD 0F        cmp         rbp,0Fh
  00000000000000B6: 76 44              jbe         00000000000000FC
  00000000000000B8: 48 8B 1E           mov         rbx,qword ptr [rsi]
  00000000000000BB: 48 8B D3           mov         rdx,rbx
  00000000000000BE: E8 00 00 00 00     call        memcpy
  00000000000000C3: 48 8D 55 01        lea         rdx,[rbp+1]
  00000000000000C7: 45 88 3C 3E        mov         byte ptr [r14+rdi],r15b
  00000000000000CB: 41 C6 44 3E 01 00  mov         byte ptr [r14+rdi+1],0
  00000000000000D1: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000D8: 72 18              jb          00000000000000F2
  00000000000000DA: 48 8B 4B F8        mov         rcx,qword ptr [rbx-8]
  00000000000000DE: 48 83 C2 27        add         rdx,27h
  00000000000000E2: 48 2B D9           sub         rbx,rcx
  00000000000000E5: 48 8D 43 F8        lea         rax,[rbx-8]
  00000000000000E9: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000ED: 77 44              ja          0000000000000133
  00000000000000EF: 48 8B D9           mov         rbx,rcx
  00000000000000F2: 48 8B CB           mov         rcx,rbx
  00000000000000F5: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000FA: EB 12              jmp         000000000000010E
  00000000000000FC: 48 8B D6           mov         rdx,rsi
  00000000000000FF: E8 00 00 00 00     call        memcpy
  0000000000000104: 45 88 3C 3E        mov         byte ptr [r14+rdi],r15b
  0000000000000108: 41 C6 44 3E 01 00  mov         byte ptr [r14+rdi+1],0
  000000000000010E: 48 89 3E           mov         qword ptr [rsi],rdi
  0000000000000111: 48 8B C6           mov         rax,rsi
  0000000000000114: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000119: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000011E: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000123: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  0000000000000128: 48 83 C4 20        add         rsp,20h
  000000000000012C: 41 5F              pop         r15
  000000000000012E: 41 5E              pop         r14
  0000000000000130: 41 5C              pop         r12
  0000000000000132: C3                 ret
  0000000000000133: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000138: CC                 int         3
  0000000000000139: E8 00 00 00 00     call        ?_Xlen_string@std@@YAXXZ
  000000000000013E: CC                 int         3

??$_Search_vectorized@$$CBD$$CBD@std@@YAPEBDQEBD00_K@Z (char const * __cdecl std::_Search_vectorized<char const ,char const >(char const * const,char const * const,char const * const,unsigned __int64)):
  0000000000000000: E9 00 00 00 00     jmp         __std_search_1

??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z (class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::endl<char,struct std::char_traits<char> >(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: B2 0A              mov         dl,0Ah
  000000000000000E: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000012: 48 03 CB           add         rcx,rbx
  0000000000000015: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  000000000000001A: 8A D0              mov         dl,al
  000000000000001C: 48 8B CB           mov         rcx,rbx
  000000000000001F: E8 00 00 00 00     call        ?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z
  0000000000000024: 48 8B CB           mov         rcx,rbx
  0000000000000027: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  000000000000002C: 48 8B C3           mov         rax,rbx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &&,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 10        mov         qword ptr [rax+10h],rbx
  0000000000000007: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000B: 48 89 48 08        mov         qword ptr [rax+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 70        sub         rsp,70h
  000000000000001C: 45 0F B6 E8        movzx       r13d,r8b
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F9           mov         rdi,rcx
  0000000000000026: 33 DB              xor         ebx,ebx
  0000000000000028: 8B F3              mov         esi,ebx
  000000000000002A: 89 5C 24 20        mov         dword ptr [rsp+20h],ebx
  000000000000002E: 44 8A FB           mov         r15b,bl
  0000000000000031: 88 9C 24 B8 00 00  mov         byte ptr [rsp+0B8h],bl
                    00
  0000000000000038: 4C 8B E1           mov         r12,rcx
  000000000000003B: 48 89 48 90        mov         qword ptr [rax-70h],rcx
  000000000000003F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000042: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  0000000000000046: 49 8B 4C 09 48     mov         rcx,qword ptr [r9+rcx+48h]
  000000000000004B: 48 85 C9           test        rcx,rcx
  000000000000004E: 74 07              je          0000000000000057
  0000000000000050: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000053: FF 50 08           call        qword ptr [rax+8]
  0000000000000056: 90                 nop
  0000000000000057: B2 01              mov         dl,1
  0000000000000059: 48 8B CF           mov         rcx,rdi
  000000000000005C: E8 00 00 00 00     call        ?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z
  0000000000000061: 88 44 24 30        mov         byte ptr [rsp+30h],al
  0000000000000065: 84 C0              test        al,al
  0000000000000067: 0F 84 28 01 00 00  je          0000000000000195
  000000000000006D: 49 89 5E 10        mov         qword ptr [r14+10h],rbx
  0000000000000071: 49 8B C6           mov         rax,r14
  0000000000000074: 49 83 7E 18 0F     cmp         qword ptr [r14+18h],0Fh
  0000000000000079: 76 03              jbe         000000000000007E
  000000000000007B: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000007E: 88 18              mov         byte ptr [rax],bl
  0000000000000080: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000083: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000087: 48 8B 4C 39 48     mov         rcx,qword ptr [rcx+rdi+48h]
  000000000000008C: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000090: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000093: 48 85 D2           test        rdx,rdx
  0000000000000096: 74 0E              je          00000000000000A6
  0000000000000098: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  000000000000009C: 39 18              cmp         dword ptr [rax],ebx
  000000000000009E: 7E 06              jle         00000000000000A6
  00000000000000A0: 44 0F B6 0A        movzx       r9d,byte ptr [rdx]
  00000000000000A4: EB 09              jmp         00000000000000AF
  00000000000000A6: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000A9: FF 50 30           call        qword ptr [rax+30h]
  00000000000000AC: 44 8B C8           mov         r9d,eax
  00000000000000AF: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  00000000000000B3: 75 06              jne         00000000000000BB
  00000000000000B5: 41 8D 71 02        lea         esi,[r9+2]
  00000000000000B9: EB 58              jmp         0000000000000113
  00000000000000BB: 45 3B CD           cmp         r9d,r13d
  00000000000000BE: 75 3B              jne         00000000000000FB
  00000000000000C0: 41 B7 01           mov         r15b,1
  00000000000000C3: 44 88 BC 24 B8 00  mov         byte ptr [rsp+0B8h],r15b
                    00 00
  00000000000000CB: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000CE: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000D2: 48 8B 4C 39 48     mov         rcx,qword ptr [rcx+rdi+48h]
  00000000000000D7: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000DB: 48 39 18           cmp         qword ptr [rax],rbx
  00000000000000DE: 74 13              je          00000000000000F3
  00000000000000E0: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  00000000000000E4: 39 18              cmp         dword ptr [rax],ebx
  00000000000000E6: 7E 0B              jle         00000000000000F3
  00000000000000E8: FF 08              dec         dword ptr [rax]
  00000000000000EA: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000EE: 48 FF 00           inc         qword ptr [rax]
  00000000000000F1: EB 24              jmp         0000000000000117
  00000000000000F3: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000F6: FF 50 38           call        qword ptr [rax+38h]
  00000000000000F9: EB 1C              jmp         0000000000000117
  00000000000000FB: 49 8B 4E 10        mov         rcx,qword ptr [r14+10h]
  00000000000000FF: 48 B8 FF FF FF FF  mov         rax,7FFFFFFFFFFFFFFFh
                    FF FF FF 7F
  0000000000000109: 48 3B C8           cmp         rcx,rax
  000000000000010C: 72 0B              jb          0000000000000119
  000000000000010E: BE 02 00 00 00     mov         esi,2
  0000000000000113: 89 74 24 20        mov         dword ptr [rsp+20h],esi
  0000000000000117: EB 77              jmp         0000000000000190
  0000000000000119: 49 3B 4E 18        cmp         rcx,qword ptr [r14+18h]
  000000000000011D: 73 1F              jae         000000000000013E
  000000000000011F: 48 8D 41 01        lea         rax,[rcx+1]
  0000000000000123: 49 89 46 10        mov         qword ptr [r14+10h],rax
  0000000000000127: 49 8B C6           mov         rax,r14
  000000000000012A: 49 83 7E 18 0F     cmp         qword ptr [r14+18h],0Fh
  000000000000012F: 76 03              jbe         0000000000000134
  0000000000000131: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000134: 44 88 0C 08        mov         byte ptr [rax+rcx],r9b
  0000000000000138: 88 5C 08 01        mov         byte ptr [rax+rcx+1],bl
  000000000000013C: EB 15              jmp         0000000000000153
  000000000000013E: 44 8A 84 24 A0 00  mov         r8b,byte ptr [rsp+0A0h]
                    00 00
  0000000000000146: BA 01 00 00 00     mov         edx,1
  000000000000014B: 49 8B CE           mov         rcx,r14
  000000000000014E: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z
  0000000000000153: 41 B7 01           mov         r15b,1
  0000000000000156: 44 88 BC 24 B8 00  mov         byte ptr [rsp+0B8h],r15b
                    00 00
  000000000000015E: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000161: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000165: 48 8B 4C 39 48     mov         rcx,qword ptr [rcx+rdi+48h]
  000000000000016A: E8 00 00 00 00     call        ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  000000000000016F: 44 8B C8           mov         r9d,eax
  0000000000000172: E9 38 FF FF FF     jmp         00000000000000AF
$LN19:
  0000000000000177: 48 8B BC 24 A0 00  mov         rdi,qword ptr [rsp+0A0h]
                    00 00
  000000000000017F: 8B 74 24 20        mov         esi,dword ptr [rsp+20h]
  0000000000000183: 44 8A BC 24 B8 00  mov         r15b,byte ptr [rsp+0B8h]
                    00 00
  000000000000018B: 4C 8B 64 24 28     mov         r12,qword ptr [rsp+28h]
  0000000000000190: 45 84 FF           test        r15b,r15b
  0000000000000193: 75 03              jne         0000000000000198
  0000000000000195: 83 CE 02           or          esi,2
  0000000000000198: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000019B: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000019F: 48 03 CF           add         rcx,rdi
  00000000000001A2: 0B 71 10           or          esi,dword ptr [rcx+10h]
  00000000000001A5: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  00000000000001A9: 48 F7 D8           neg         rax
  00000000000001AC: 1B D2              sbb         edx,edx
  00000000000001AE: F7 D2              not         edx
  00000000000001B0: 83 E2 04           and         edx,4
  00000000000001B3: 0B D6              or          edx,esi
  00000000000001B5: 83 E2 17           and         edx,17h
  00000000000001B8: 89 51 10           mov         dword ptr [rcx+10h],edx
  00000000000001BB: 23 51 14           and         edx,dword ptr [rcx+14h]
  00000000000001BE: 75 36              jne         00000000000001F6
  00000000000001C0: 49 8B 04 24        mov         rax,qword ptr [r12]
  00000000000001C4: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000001C8: 4A 8B 4C 21 48     mov         rcx,qword ptr [rcx+r12+48h]
  00000000000001CD: 48 85 C9           test        rcx,rcx
  00000000000001D0: 74 07              je          00000000000001D9
  00000000000001D2: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000001D5: FF 50 10           call        qword ptr [rax+10h]
  00000000000001D8: 90                 nop
  00000000000001D9: 48 8B C7           mov         rax,rdi
  00000000000001DC: 4C 8D 5C 24 70     lea         r11,[rsp+70h]
  00000000000001E1: 49 8B 5B 38        mov         rbx,qword ptr [r11+38h]
  00000000000001E5: 49 8B 73 40        mov         rsi,qword ptr [r11+40h]
  00000000000001E9: 49 8B E3           mov         rsp,r11
  00000000000001EC: 41 5F              pop         r15
  00000000000001EE: 41 5E              pop         r14
  00000000000001F0: 41 5D              pop         r13
  00000000000001F2: 41 5C              pop         r12
  00000000000001F4: 5F                 pop         rdi
  00000000000001F5: C3                 ret
  00000000000001F6: F6 C2 04           test        dl,4
  00000000000001F9: 74 09              je          0000000000000204
  00000000000001FB: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000202: EB 15              jmp         0000000000000219
  0000000000000204: F6 C2 02           test        dl,2
  0000000000000207: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000020E: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000215: 48 0F 44 D8        cmove       rbx,rax
  0000000000000219: BA 01 00 00 00     mov         edx,1
  000000000000021E: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  0000000000000223: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000228: 4C 8B C0           mov         r8,rax
  000000000000022B: 48 8B D3           mov         rdx,rbx
  000000000000022E: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  0000000000000233: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000238: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  000000000000023F: 48 8D 4C 24 48     lea         rcx,[rsp+48h]
  0000000000000244: E8 00 00 00 00     call        _CxxThrowException
  0000000000000249: CC                 int         3

?dtor$0@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$0::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$0::std &&,class dtor$0::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$3@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class dtor$3::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class dtor$3::std &&,class dtor$3::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::dtor$3):
  0000000000000000: 48 8D 8A 28 00 00  lea         rcx,[rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$4@?0???$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z@4HA (int `class catch$4::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class catch$4::std &&,class catch$4::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &,char)'::`1'::catch$4):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z (class std::basic_istream<char,struct std::char_traits<char> > & __cdecl std::getline<char,struct std::char_traits<char>,class std::allocator<char> >(class std::basic_istream<char,struct std::char_traits<char> > &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000D: 48 8B F9           mov         rdi,rcx
  0000000000000010: 48 8B DA           mov         rbx,rdx
  0000000000000013: B2 0A              mov         dl,0Ah
  0000000000000015: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000019: 48 03 CF           add         rcx,rdi
  000000000000001C: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000021: 44 8A C0           mov         r8b,al
  0000000000000024: 48 8B D3           mov         rdx,rbx
  0000000000000027: 48 8B CF           mov         rcx,rdi
  000000000000002A: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5F                 pop         rdi
  0000000000000034: E9 00 00 00 00     jmp         ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@$$QEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@D@Z

??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z (class std::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 48 8B E9           mov         rbp,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 35 00 00 00  mov         rsi,qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$codecvt@DDU_Mbstatet@@@std@@2V0locale@2@A]
                    00
  0000000000000070: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000074: 4C 8D 34 FD 00 00  lea         r14,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 F6           test        rsi,rsi
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DE           mov         rbx,rsi
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 48 8B D5           mov         rdx,rbp
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$codecvt@DDU_Mbstatet@@@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::codecvt<char,char,struct _Mbstatet> const & __cdecl std::use_facet<class std::codecvt<char,char,struct _Mbstatet> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z (class std::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 48 8B E9           mov         rbp,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 35 00 00 00  mov         rsi,qword ptr [?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$ctype@D@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$ctype@D@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$ctype@D@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$ctype@D@std@@2V0locale@2@A]
                    00
  0000000000000070: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000074: 4C 8D 34 FD 00 00  lea         r14,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 F6           test        rsi,rsi
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DE           mov         rbx,rsi
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 48 8B D5           mov         rdx,rbp
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$ctype@D@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::ctype<char> const & __cdecl std::use_facet<class std::ctype<char> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z (class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 48 8B E9           mov         rbp,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 35 00 00 00  mov         rsi,qword ptr [?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@2V0locale@2@A]
                    00
  0000000000000070: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000074: 4C 8D 34 FD 00 00  lea         r14,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 F6           test        rsi,rsi
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DE           mov         rbx,rsi
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 48 8B D5           mov         rdx,rbp
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > const & __cdecl std::use_facet<class std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > > >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z (class std::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 56              push        r14
  0000000000000007: 48 83 EC 20        sub         rsp,20h
  000000000000000B: 48 8B E9           mov         rbp,rcx
  000000000000000E: 33 D2              xor         edx,edx
  0000000000000010: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  0000000000000015: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 35 00 00 00  mov         rsi,qword ptr [?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB]
                    00
  0000000000000022: 48 89 74 24 60     mov         qword ptr [rsp+60h],rsi
  0000000000000027: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A]
                    00
  000000000000002E: 48 85 FF           test        rdi,rdi
  0000000000000031: 75 3D              jne         0000000000000070
  0000000000000033: 33 D2              xor         edx,edx
  0000000000000035: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  000000000000003A: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000003F: 48 39 3D 00 00 00  cmp         qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A],rdi
                    00
  0000000000000046: 75 17              jne         000000000000005F
  0000000000000048: 8B 05 00 00 00 00  mov         eax,dword ptr [?_Id_cnt@id@locale@std@@0HA]
  000000000000004E: FF C0              inc         eax
  0000000000000050: 89 05 00 00 00 00  mov         dword ptr [?_Id_cnt@id@locale@std@@0HA],eax
  0000000000000056: 48 98              cdqe
  0000000000000058: 48 89 05 00 00 00  mov         qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A],rax
                    00
  000000000000005F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000064: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  0000000000000069: 48 8B 3D 00 00 00  mov         rdi,qword ptr [?id@?$numpunct@D@std@@2V0locale@2@A]
                    00
  0000000000000070: 48 8B 4D 08        mov         rcx,qword ptr [rbp+8]
  0000000000000074: 4C 8D 34 FD 00 00  lea         r14,[rdi*8]
                    00 00
  000000000000007C: 48 3B 79 18        cmp         rdi,qword ptr [rcx+18h]
  0000000000000080: 73 0F              jae         0000000000000091
  0000000000000082: 48 8B 41 10        mov         rax,qword ptr [rcx+10h]
  0000000000000086: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  000000000000008A: 48 85 DB           test        rbx,rbx
  000000000000008D: 75 64              jne         00000000000000F3
  000000000000008F: EB 02              jmp         0000000000000093
  0000000000000091: 33 DB              xor         ebx,ebx
  0000000000000093: 80 79 24 00        cmp         byte ptr [rcx+24h],0
  0000000000000097: 74 13              je          00000000000000AC
  0000000000000099: E8 00 00 00 00     call        ?_Getgloballocale@locale@std@@CAPEAV_Locimp@12@XZ
  000000000000009E: 48 3B 78 18        cmp         rdi,qword ptr [rax+18h]
  00000000000000A2: 73 0D              jae         00000000000000B1
  00000000000000A4: 48 8B 40 10        mov         rax,qword ptr [rax+10h]
  00000000000000A8: 49 8B 1C 06        mov         rbx,qword ptr [r14+rax]
  00000000000000AC: 48 85 DB           test        rbx,rbx
  00000000000000AF: 75 42              jne         00000000000000F3
  00000000000000B1: 48 85 F6           test        rsi,rsi
  00000000000000B4: 74 05              je          00000000000000BB
  00000000000000B6: 48 8B DE           mov         rbx,rsi
  00000000000000B9: EB 38              jmp         00000000000000F3
  00000000000000BB: 48 8B D5           mov         rdx,rbp
  00000000000000BE: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000C3: E8 00 00 00 00     call        ?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z
  00000000000000C8: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  00000000000000CC: 74 3D              je          000000000000010B
  00000000000000CE: 48 8B 5C 24 60     mov         rbx,qword ptr [rsp+60h]
  00000000000000D3: 48 89 5C 24 50     mov         qword ptr [rsp+50h],rbx
  00000000000000D8: 48 8B CB           mov         rcx,rbx
  00000000000000DB: E8 00 00 00 00     call        ?_Facet_Register@std@@YAXPEAV_Facet_base@1@@Z
  00000000000000E0: 48 8B 0B           mov         rcx,qword ptr [rbx]
  00000000000000E3: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  00000000000000E7: 48 8B CB           mov         rcx,rbx
  00000000000000EA: FF D2              call        rdx
  00000000000000EC: 48 89 1D 00 00 00  mov         qword ptr [?_Psave@?$_Facetptr@V?$numpunct@D@std@@@std@@2PEBVfacet@locale@2@EB],rbx
                    00
  00000000000000F3: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  00000000000000F8: E8 00 00 00 00     call        ??1_Lockit@std@@QEAA@XZ
  00000000000000FD: 48 8B C3           mov         rax,rbx
  0000000000000100: 48 83 C4 20        add         rsp,20h
  0000000000000104: 41 5E              pop         r14
  0000000000000106: 5F                 pop         rdi
  0000000000000107: 5E                 pop         rsi
  0000000000000108: 5D                 pop         rbp
  0000000000000109: 5B                 pop         rbx
  000000000000010A: C3                 ret
  000000000000010B: E8 00 00 00 00     call        ?_Throw_bad_cast@std@@YAXXZ
  0000000000000110: 90                 nop

?dtor$0@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$0::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class dtor$0::locale const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z@4HA (int `class dtor$1::numpunct<char> const & __cdecl std::use_facet<class std::numpunct<char> >(class dtor$1::locale const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ

??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z (public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)):
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 49 89 5B 10        mov         qword ptr [r11+10h],rbx
  0000000000000007: 49 89 4B 08        mov         qword ptr [r11+8],rcx
  000000000000000B: 55                 push        rbp
  000000000000000C: 56                 push        rsi
  000000000000000D: 57                 push        rdi
  000000000000000E: 41 56              push        r14
  0000000000000010: 41 57              push        r15
  0000000000000012: 48 83 EC 60        sub         rsp,60h
  0000000000000016: 41 8B E9           mov         ebp,r9d
  0000000000000019: 41 8B F0           mov         esi,r8d
  000000000000001C: 4C 8B F2           mov         r14,rdx
  000000000000001F: 48 8B F9           mov         rdi,rcx
  0000000000000022: 45 33 FF           xor         r15d,r15d
  0000000000000025: 45 89 7B 18        mov         dword ptr [r11+18h],r15d
  0000000000000029: 44 39 BC 24 B0 00  cmp         dword ptr [rsp+0B0h],r15d
                    00 00
  0000000000000031: 74 6D              je          00000000000000A0
  0000000000000033: 48 8D 05 00 00 00  lea         rax,[??_8?$basic_ifstream@DU?$char_traits@D@std@@@std@@7B@]
                    00
  000000000000003A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000003D: 4C 89 B9 B8 00 00  mov         qword ptr [rcx+0B8h],r15
                    00
  0000000000000044: 4C 89 B9 C0 00 00  mov         qword ptr [rcx+0C0h],r15
                    00
  000000000000004B: 44 89 B9 C8 00 00  mov         dword ptr [rcx+0C8h],r15d
                    00
  0000000000000052: 4C 89 B9 D0 00 00  mov         qword ptr [rcx+0D0h],r15
                    00
  0000000000000059: 4C 89 B9 D8 00 00  mov         qword ptr [rcx+0D8h],r15
                    00
  0000000000000060: 4C 89 B9 E0 00 00  mov         qword ptr [rcx+0E0h],r15
                    00
  0000000000000067: 4C 89 B9 E8 00 00  mov         qword ptr [rcx+0E8h],r15
                    00
  000000000000006E: 4C 89 B9 F0 00 00  mov         qword ptr [rcx+0F0h],r15
                    00
  0000000000000075: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ios@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000007C: 48 89 81 B0 00 00  mov         qword ptr [rcx+0B0h],rax
                    00
  0000000000000083: 4C 89 B9 F8 00 00  mov         qword ptr [rcx+0F8h],r15
                    00
  000000000000008A: 4C 89 B9 00 01 00  mov         qword ptr [rcx+100h],r15
                    00
  0000000000000091: 44 88 B9 08 01 00  mov         byte ptr [rcx+108h],r15b
                    00
  0000000000000098: 41 C7 43 18 01 00  mov         dword ptr [r11+18h],1
                    00 00
  00000000000000A0: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000A3: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000A7: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  00000000000000AE: 48 89 04 39        mov         qword ptr [rcx+rdi],rax
  00000000000000B2: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000B5: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000B9: 8D 51 E8           lea         edx,[rcx-18h]
  00000000000000BC: 89 54 39 FC        mov         dword ptr [rcx+rdi-4],edx
  00000000000000C0: 4C 89 7F 08        mov         qword ptr [rdi+8],r15
  00000000000000C4: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000C7: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000CB: 48 03 CF           add         rcx,rdi
  00000000000000CE: 48 8D 5F 10        lea         rbx,[rdi+10h]
  00000000000000D2: 45 33 C0           xor         r8d,r8d
  00000000000000D5: 48 8B D3           mov         rdx,rbx
  00000000000000D8: E8 00 00 00 00     call        ?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z
  00000000000000DD: 90                 nop
  00000000000000DE: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000E1: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000E5: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  00000000000000EC: 48 89 04 39        mov         qword ptr [rcx+rdi],rax
  00000000000000F0: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000F3: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000F7: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  00000000000000FD: 89 54 39 FC        mov         dword ptr [rcx+rdi-4],edx
  0000000000000101: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000106: 48 8B CB           mov         rcx,rbx
  0000000000000109: E8 00 00 00 00     call        ??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ
  000000000000010E: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000115: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000118: 45 33 C0           xor         r8d,r8d
  000000000000011B: 33 D2              xor         edx,edx
  000000000000011D: 48 8B CB           mov         rcx,rbx
  0000000000000120: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  0000000000000125: 90                 nop
  0000000000000126: 83 CE 01           or          esi,1
  0000000000000129: 44 8B CD           mov         r9d,ebp
  000000000000012C: 44 8B C6           mov         r8d,esi
  000000000000012F: 49 8B D6           mov         rdx,r14
  0000000000000132: 48 8B CB           mov         rcx,rbx
  0000000000000135: E8 00 00 00 00     call        ?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z
  000000000000013A: 48 85 C0           test        rax,rax
  000000000000013D: 75 27              jne         0000000000000166
  000000000000013F: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000142: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000146: 48 03 CF           add         rcx,rdi
  0000000000000149: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  000000000000014D: 48 F7 D8           neg         rax
  0000000000000150: 1B D2              sbb         edx,edx
  0000000000000152: 83 E2 FC           and         edx,0FFFFFFFCh
  0000000000000155: 83 C2 06           add         edx,6
  0000000000000158: 0B 51 10           or          edx,dword ptr [rcx+10h]
  000000000000015B: 83 E2 17           and         edx,17h
  000000000000015E: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000161: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000164: 75 17              jne         000000000000017D
  0000000000000166: 48 8B C7           mov         rax,rdi
  0000000000000169: 48 8B 9C 24 98 00  mov         rbx,qword ptr [rsp+98h]
                    00 00
  0000000000000171: 48 83 C4 60        add         rsp,60h
  0000000000000175: 41 5F              pop         r15
  0000000000000177: 41 5E              pop         r14
  0000000000000179: 5F                 pop         rdi
  000000000000017A: 5E                 pop         rsi
  000000000000017B: 5D                 pop         rbp
  000000000000017C: C3                 ret
  000000000000017D: F6 C2 04           test        dl,4
  0000000000000180: 74 09              je          000000000000018B
  0000000000000182: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000189: EB 15              jmp         00000000000001A0
  000000000000018B: F6 C2 02           test        dl,2
  000000000000018E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000195: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000019C: 48 0F 44 D8        cmove       rbx,rax
  00000000000001A0: BA 01 00 00 00     mov         edx,1
  00000000000001A5: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001AA: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001AF: 4C 8B C0           mov         r8,rax
  00000000000001B2: 48 8B D3           mov         rdx,rbx
  00000000000001B5: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001BA: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001BF: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001C6: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001CB: E8 00 00 00 00     call        _CxxThrowException
  00000000000001D0: CC                 int         3

?dtor$0@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: 8B 85 A0 00 00 00  mov         eax,dword ptr [rbp+0A0h]
  000000000000000F: 83 E0 01           and         eax,1
  0000000000000012: 85 C0              test        eax,eax
  0000000000000014: 74 1A              je          0000000000000030
  0000000000000016: 83 A5 A0 00 00 00  and         dword ptr [rbp+0A0h],0FFFFFFFEh
                    FE
  000000000000001D: 48 8B 8D 90 00 00  mov         rcx,qword ptr [rbp+90h]
                    00
  0000000000000024: 48 81 C1 B0 00 00  add         rcx,0B0h
                    00
  000000000000002B: E8 00 00 00 00     call        ??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000030: 48 83 C4 20        add         rsp,20h
  0000000000000034: 5D                 pop         rbp
  0000000000000035: C3                 ret

?dtor$1@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$1):
  0000000000000000: 48 8B 8A 90 00 00  mov         rcx,qword ptr [rdx+90h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ

?dtor$2@?0???0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z@4HA (int `public: __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::basic_ifstream<char,struct std::char_traits<char> >(char const *,int,int)'::`1'::dtor$2):
  0000000000000000: 48 8B 8A 90 00 00  mov         rcx,qword ptr [rdx+90h]
                    00
  0000000000000007: 48 83 C1 10        add         rcx,10h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ

??0?$basic_streambuf@DU?$char_traits@D@std@@@std@@IEAA@XZ (protected: __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::basic_streambuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 54              push        r12
  0000000000000012: 41 55              push        r13
  0000000000000014: 41 56              push        r14
  0000000000000016: 41 57              push        r15
  0000000000000018: 48 83 EC 20        sub         rsp,20h
  000000000000001C: 48 8B D9           mov         rbx,rcx
  000000000000001F: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000026: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000029: 48 8D 71 08        lea         rsi,[rcx+8]
  000000000000002D: 33 C0              xor         eax,eax
  000000000000002F: 48 89 06           mov         qword ptr [rsi],rax
  0000000000000032: 4C 8D 71 10        lea         r14,[rcx+10h]
  0000000000000036: 49 89 06           mov         qword ptr [r14],rax
  0000000000000039: 48 89 41 18        mov         qword ptr [rcx+18h],rax
  000000000000003D: 48 89 41 20        mov         qword ptr [rcx+20h],rax
  0000000000000041: 4C 8D 79 28        lea         r15,[rcx+28h]
  0000000000000045: 49 89 07           mov         qword ptr [r15],rax
  0000000000000048: 48 8D 69 30        lea         rbp,[rcx+30h]
  000000000000004C: 48 89 45 00        mov         qword ptr [rbp],rax
  0000000000000050: 48 89 41 38        mov         qword ptr [rcx+38h],rax
  0000000000000054: 48 89 41 40        mov         qword ptr [rcx+40h],rax
  0000000000000058: 4C 8D 61 48        lea         r12,[rcx+48h]
  000000000000005C: 41 89 04 24        mov         dword ptr [r12],eax
  0000000000000060: 4C 8D 69 4C        lea         r13,[rcx+4Ch]
  0000000000000064: 41 89 45 00        mov         dword ptr [r13],eax
  0000000000000068: 48 89 41 50        mov         qword ptr [rcx+50h],rax
  000000000000006C: 48 89 41 58        mov         qword ptr [rcx+58h],rax
  0000000000000070: 8D 48 10           lea         ecx,[rax+10h]
  0000000000000073: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000078: 48 8B F8           mov         rdi,rax
  000000000000007B: 33 C0              xor         eax,eax
  000000000000007D: 48 85 FF           test        rdi,rdi
  0000000000000080: 74 0F              je          0000000000000091
  0000000000000082: B1 01              mov         cl,1
  0000000000000084: E8 00 00 00 00     call        ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
  0000000000000089: 48 89 47 08        mov         qword ptr [rdi+8],rax
  000000000000008D: 33 C0              xor         eax,eax
  000000000000008F: EB 03              jmp         0000000000000094
  0000000000000091: 48 8B F8           mov         rdi,rax
  0000000000000094: 48 89 7B 60        mov         qword ptr [rbx+60h],rdi
  0000000000000098: 48 89 73 18        mov         qword ptr [rbx+18h],rsi
  000000000000009C: 4C 89 73 20        mov         qword ptr [rbx+20h],r14
  00000000000000A0: 4C 89 7B 38        mov         qword ptr [rbx+38h],r15
  00000000000000A4: 48 89 6B 40        mov         qword ptr [rbx+40h],rbp
  00000000000000A8: 4C 89 63 50        mov         qword ptr [rbx+50h],r12
  00000000000000AC: 4C 89 6B 58        mov         qword ptr [rbx+58h],r13
  00000000000000B0: 49 89 06           mov         qword ptr [r14],rax
  00000000000000B3: 48 89 45 00        mov         qword ptr [rbp],rax
  00000000000000B7: 41 89 45 00        mov         dword ptr [r13],eax
  00000000000000BB: 48 89 06           mov         qword ptr [rsi],rax
  00000000000000BE: 49 89 07           mov         qword ptr [r15],rax
  00000000000000C1: 41 89 04 24        mov         dword ptr [r12],eax
  00000000000000C5: 48 8B C3           mov         rax,rbx
  00000000000000C8: 48 8B 5C 24 50     mov         rbx,qword ptr [rsp+50h]
  00000000000000CD: 48 8B 6C 24 58     mov         rbp,qword ptr [rsp+58h]
  00000000000000D2: 48 8B 74 24 60     mov         rsi,qword ptr [rsp+60h]
  00000000000000D7: 48 83 C4 20        add         rsp,20h
  00000000000000DB: 41 5F              pop         r15
  00000000000000DD: 41 5E              pop         r14
  00000000000000DF: 41 5D              pop         r13
  00000000000000E1: 41 5C              pop         r12
  00000000000000E3: 5F                 pop         rdi
  00000000000000E4: C3                 ret

??0_Locinfo@std@@QEAA@PEBD@Z (public: __cdecl std::_Locinfo::_Locinfo(char const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B FA           mov         rdi,rdx
  0000000000000012: 48 8B D9           mov         rbx,rcx
  0000000000000015: 33 D2              xor         edx,edx
  0000000000000017: E8 00 00 00 00     call        ??0_Lockit@std@@QEAA@H@Z
  000000000000001C: 90                 nop
  000000000000001D: 33 C0              xor         eax,eax
  000000000000001F: 48 89 43 08        mov         qword ptr [rbx+8],rax
  0000000000000023: 88 43 10           mov         byte ptr [rbx+10h],al
  0000000000000026: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  000000000000002A: 88 43 20           mov         byte ptr [rbx+20h],al
  000000000000002D: 48 89 43 28        mov         qword ptr [rbx+28h],rax
  0000000000000031: 66 89 43 30        mov         word ptr [rbx+30h],ax
  0000000000000035: 48 89 43 38        mov         qword ptr [rbx+38h],rax
  0000000000000039: 66 89 43 40        mov         word ptr [rbx+40h],ax
  000000000000003D: 48 89 43 48        mov         qword ptr [rbx+48h],rax
  0000000000000041: 88 43 50           mov         byte ptr [rbx+50h],al
  0000000000000044: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  0000000000000048: 88 43 60           mov         byte ptr [rbx+60h],al
  000000000000004B: 48 85 FF           test        rdi,rdi
  000000000000004E: 74 1A              je          000000000000006A
  0000000000000050: 48 8B D7           mov         rdx,rdi
  0000000000000053: 48 8B CB           mov         rcx,rbx
  0000000000000056: E8 00 00 00 00     call        ?_Locinfo_ctor@_Locinfo@std@@SAXPEAV12@PEBD@Z
  000000000000005B: 90                 nop
  000000000000005C: 48 8B C3           mov         rax,rbx
  000000000000005F: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000064: 48 83 C4 20        add         rsp,20h
  0000000000000068: 5F                 pop         rdi
  0000000000000069: C3                 ret
  000000000000006A: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@ELKIONDK@bad?5locale?5name@]
                    00
  0000000000000071: E8 00 00 00 00     call        ?_Xruntime_error@std@@YAXPEBD@Z
  0000000000000076: CC                 int         3

?dtor$0@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$0):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

?dtor$1@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$1):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 08        add         rcx,8
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$2@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$2):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 18        add         rcx,18h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$3@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$3):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 28        add         rcx,28h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$4@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$4):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 38        add         rcx,38h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@_W@std@@QEAA@XZ

?dtor$5@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$5):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 48        add         rcx,48h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

?dtor$6@?0???0_Locinfo@std@@QEAA@PEBD@Z@4HA (int `public: __cdecl std::_Locinfo::_Locinfo(char const *)'::`1'::dtor$6):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: 48 83 C1 58        add         rcx,58h
  000000000000000B: E9 00 00 00 00     jmp         ??1?$_Yarn@D@std@@QEAA@XZ

??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z (protected: __cdecl std::_System_error::_System_error(class std::error_code,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 53                 push        rbx
  0000000000000003: 57                 push        rdi
  0000000000000004: 48 8B EC           mov         rbp,rsp
  0000000000000007: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  000000000000000E: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000015: 48 33 C4           xor         rax,rsp
  0000000000000018: 48 89 45 F0        mov         qword ptr [rbp-10h],rax
  000000000000001C: 48 89 4D A0        mov         qword ptr [rbp-60h],rcx
  0000000000000020: 49 8B C0           mov         rax,r8
  0000000000000023: 4D 8B 40 10        mov         r8,qword ptr [r8+10h]
  0000000000000027: 0F 57 C0           xorps       xmm0,xmm0
  000000000000002A: 48 8B FA           mov         rdi,rdx
  000000000000002D: 48 C7 45 C0 00 00  mov         qword ptr [rbp-40h],0
                    00 00
  0000000000000035: 48 8B D9           mov         rbx,rcx
  0000000000000038: 48 C7 45 C8 00 00  mov         qword ptr [rbp-38h],0
                    00 00
  0000000000000040: 48 83 78 18 0F     cmp         qword ptr [rax+18h],0Fh
  0000000000000045: 0F 11 45 B0        movups      xmmword ptr [rbp-50h],xmm0
  0000000000000049: 76 03              jbe         000000000000004E
  000000000000004B: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000004E: 48 8B D0           mov         rdx,rax
  0000000000000051: 48 8D 4D B0        lea         rcx,[rbp-50h]
  0000000000000055: E8 00 00 00 00     call        ??$_Construct@$01PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  000000000000005A: 0F 10 07           movups      xmm0,xmmword ptr [rdi]
  000000000000005D: 4C 8D 45 B0        lea         r8,[rbp-50h]
  0000000000000061: 48 8D 55 A0        lea         rdx,[rbp-60h]
  0000000000000065: 48 8D 4D D0        lea         rcx,[rbp-30h]
  0000000000000069: F3 0F 7F 45 A0     movdqu      xmmword ptr [rbp-60h],xmm0
  000000000000006E: E8 00 00 00 00     call        ?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z
  0000000000000073: 48 83 78 18 0F     cmp         qword ptr [rax+18h],0Fh
  0000000000000078: 76 03              jbe         000000000000007D
  000000000000007A: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000007D: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000084: 48 89 45 A0        mov         qword ptr [rbp-60h],rax
  0000000000000088: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000008B: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000008F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000092: C6 45 A8 01        mov         byte ptr [rbp-58h],1
  0000000000000096: 48 8D 4D A0        lea         rcx,[rbp-60h]
  000000000000009A: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  000000000000009D: E8 00 00 00 00     call        __std_exception_copy
  00000000000000A2: 48 8B 55 E8        mov         rdx,qword ptr [rbp-18h]
  00000000000000A6: 48 8D 05 00 00 00  lea         rax,[??_7runtime_error@std@@6B@]
                    00
  00000000000000AD: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000B0: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000000B4: 76 2D              jbe         00000000000000E3
  00000000000000B6: 48 8B 4D D0        mov         rcx,qword ptr [rbp-30h]
  00000000000000BA: 48 FF C2           inc         rdx
  00000000000000BD: 48 8B C1           mov         rax,rcx
  00000000000000C0: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000000C7: 72 15              jb          00000000000000DE
  00000000000000C9: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000000CD: 48 83 C2 27        add         rdx,27h
  00000000000000D1: 48 2B C1           sub         rax,rcx
  00000000000000D4: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000000D8: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000DC: 77 31              ja          000000000000010F
  00000000000000DE: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000E3: 0F 10 07           movups      xmm0,xmmword ptr [rdi]
  00000000000000E6: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  00000000000000ED: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000F0: 48 8B C3           mov         rax,rbx
  00000000000000F3: F3 0F 7F 43 18     movdqu      xmmword ptr [rbx+18h],xmm0
  00000000000000F8: 48 8B 4D F0        mov         rcx,qword ptr [rbp-10h]
  00000000000000FC: 48 33 CC           xor         rcx,rsp
  00000000000000FF: E8 00 00 00 00     call        __security_check_cookie
  0000000000000104: 48 81 C4 80 00 00  add         rsp,80h
                    00
  000000000000010B: 5F                 pop         rdi
  000000000000010C: 5B                 pop         rbx
  000000000000010D: 5D                 pop         rbp
  000000000000010E: C3                 ret
  000000000000010F: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000114: CC                 int         3

??0_System_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::_System_error::_System_error(class std::_System_error const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8B C7           mov         rax,rdi
  000000000000003A: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  000000000000003E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000043: F3 0F 7F 47 18     movdqu      xmmword ptr [rdi+18h],xmm0
  0000000000000048: 48 83 C4 20        add         rsp,20h
  000000000000004C: 5F                 pop         rdi
  000000000000004D: C3                 ret

??0bad_alloc@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_alloc::bad_alloc(class std::bad_alloc const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000019: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_alloc@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_array_new_length::bad_array_new_length(class std::bad_array_new_length const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000019: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_array_new_length@std@@QEAA@XZ (public: __cdecl std::bad_array_new_length::bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@KINCDENJ@bad?5array?5new?5length@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_array_new_length@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0bad_cast@std@@QEAA@AEBV01@@Z (public: __cdecl std::bad_cast::bad_cast(class std::bad_cast const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000019: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0bad_cast@std@@QEAA@XZ (public: __cdecl std::bad_cast::bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_08EPJLHIJG@bad?5cast@]
                    00
  0000000000000007: 48 C7 41 10 00 00  mov         qword ptr [rcx+10h],0
                    00 00
  000000000000000F: 48 89 41 08        mov         qword ptr [rcx+8],rax
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7bad_cast@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 48 8B C1           mov         rax,rcx
  0000000000000020: C3                 ret

??0exception@std@@QEAA@AEBV01@@Z (public: __cdecl std::exception::exception(class std::exception const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000019: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8B C3           mov         rax,rbx
  000000000000002C: 48 83 C4 20        add         rsp,20h
  0000000000000030: 5B                 pop         rbx
  0000000000000031: C3                 ret

??0failure@ios_base@std@@QEAA@AEBV012@@Z (public: __cdecl std::ios_base::failure::failure(class std::ios_base::failure const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8D 05 00 00 00  lea         rax,[??_7failure@ios_base@std@@6B@]
                    00
  000000000000003E: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 89 07           mov         qword ptr [rdi],rax
  000000000000004A: 48 8B C7           mov         rax,rdi
  000000000000004D: F3 0F 7F 47 18     movdqu      xmmword ptr [rdi+18h],xmm0
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5F                 pop         rdi
  0000000000000057: C3                 ret

??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z (public: __cdecl std::ios_base::failure::failure(char const *,class std::error_code const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 41 0F 10 00        movups      xmm0,xmmword ptr [r8]
  000000000000000A: 4C 8B C2           mov         r8,rdx
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000015: F3 0F 7F 44 24 20  movdqu      xmmword ptr [rsp+20h],xmm0
  000000000000001B: E8 00 00 00 00     call        ??0system_error@std@@QEAA@Verror_code@1@PEBD@Z
  0000000000000020: 48 8D 05 00 00 00  lea         rax,[??_7failure@ios_base@std@@6B@]
                    00
  0000000000000027: 48 89 03           mov         qword ptr [rbx],rax
  000000000000002A: 48 8B C3           mov         rax,rbx
  000000000000002D: 48 83 C4 30        add         rsp,30h
  0000000000000031: 5B                 pop         rbx
  0000000000000032: C3                 ret

??0runtime_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::runtime_error::runtime_error(class std::runtime_error const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B C2           mov         rax,rdx
  000000000000000C: 48 8D 0D 00 00 00  lea         rcx,[??_7exception@std@@6B@]
                    00
  0000000000000013: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000016: 48 89 0B           mov         qword ptr [rbx],rcx
  0000000000000019: 48 8D 53 08        lea         rdx,[rbx+8]
  000000000000001D: 48 8D 48 08        lea         rcx,[rax+8]
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: E8 00 00 00 00     call        __std_exception_copy
  0000000000000029: 48 8D 05 00 00 00  lea         rax,[??_7runtime_error@std@@6B@]
                    00
  0000000000000030: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000033: 48 8B C3           mov         rax,rbx
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class std::basic_ostream<char,struct std::char_traits<char> > &)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 20        sub         rsp,20h
  0000000000000014: 48 8B DA           mov         rbx,rdx
  0000000000000017: 48 8B F1           mov         rsi,rcx
  000000000000001A: 48 89 11           mov         qword ptr [rcx],rdx
  000000000000001D: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000020: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000024: 49 8B 4C 10 48     mov         rcx,qword ptr [r8+rdx+48h]
  0000000000000029: 33 FF              xor         edi,edi
  000000000000002B: 48 85 C9           test        rcx,rcx
  000000000000002E: 74 07              je          0000000000000037
  0000000000000030: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000033: FF 50 08           call        qword ptr [rax+8]
  0000000000000036: 90                 nop
  0000000000000037: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000003A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000003E: 39 7C 19 10        cmp         dword ptr [rcx+rbx+10h],edi
  0000000000000042: 75 28              jne         000000000000006C
  0000000000000044: 48 8B 4C 19 50     mov         rcx,qword ptr [rcx+rbx+50h]
  0000000000000049: 48 85 C9           test        rcx,rcx
  000000000000004C: 74 1B              je          0000000000000069
  000000000000004E: 48 3B CB           cmp         rcx,rbx
  0000000000000051: 74 16              je          0000000000000069
  0000000000000053: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000058: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000005B: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000005F: 39 7C 19 10        cmp         dword ptr [rcx+rbx+10h],edi
  0000000000000063: 40 0F 94 C7        sete        dil
  0000000000000067: EB 03              jmp         000000000000006C
  0000000000000069: 40 B7 01           mov         dil,1
  000000000000006C: 40 88 7E 08        mov         byte ptr [rsi+8],dil
  0000000000000070: 48 8B C6           mov         rax,rsi
  0000000000000073: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  0000000000000078: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000007D: 48 83 C4 20        add         rsp,20h
  0000000000000081: 5F                 pop         rdi
  0000000000000082: C3                 ret

?dtor$0@?0???0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z@4HA (int `public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::sentry(class basic_ostream<char,struct std::char_traits<char> >::sentry &)'::`1'::dtor$0):
  0000000000000000: 48 8B 8A 30 00 00  mov         rcx,qword ptr [rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

??0system_error@std@@QEAA@AEBV01@@Z (public: __cdecl std::system_error::system_error(class std::system_error const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B DA           mov         rbx,rdx
  000000000000000D: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 48 8D 51 08        lea         rdx,[rcx+8]
  000000000000001B: 48 8B F9           mov         rdi,rcx
  000000000000001E: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000021: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  0000000000000024: 48 8D 4B 08        lea         rcx,[rbx+8]
  0000000000000028: E8 00 00 00 00     call        __std_exception_copy
  000000000000002D: 48 8D 05 00 00 00  lea         rax,[??_7_System_error@std@@6B@]
                    00
  0000000000000034: 48 89 07           mov         qword ptr [rdi],rax
  0000000000000037: 48 8D 05 00 00 00  lea         rax,[??_7system_error@std@@6B@]
                    00
  000000000000003E: 0F 10 43 18        movups      xmm0,xmmword ptr [rbx+18h]
  0000000000000042: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000047: 48 89 07           mov         qword ptr [rdi],rax
  000000000000004A: 48 8B C7           mov         rax,rdi
  000000000000004D: F3 0F 7F 47 18     movdqu      xmmword ptr [rdi+18h],xmm0
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5F                 pop         rdi
  0000000000000057: C3                 ret

??0system_error@std@@QEAA@Verror_code@1@PEBD@Z (public: __cdecl std::system_error::system_error(class std::error_code,char const *)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000011: 48 33 C4           xor         rax,rsp
  0000000000000014: 48 89 44 24 50     mov         qword ptr [rsp+50h],rax
  0000000000000019: 49 8B C0           mov         rax,r8
  000000000000001C: 48 8B FA           mov         rdi,rdx
  000000000000001F: 48 8B D9           mov         rbx,rcx
  0000000000000022: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  0000000000000027: 0F 57 C0           xorps       xmm0,xmm0
  000000000000002A: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  000000000000002F: 33 C9              xor         ecx,ecx
  0000000000000031: 48 89 4C 24 40     mov         qword ptr [rsp+40h],rcx
  0000000000000036: 48 89 4C 24 48     mov         qword ptr [rsp+48h],rcx
  000000000000003B: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  000000000000003F: 49 FF C0           inc         r8
  0000000000000042: 42 38 0C 00        cmp         byte ptr [rax+r8],cl
  0000000000000046: 75 F7              jne         000000000000003F
  0000000000000048: 48 8B D0           mov         rdx,rax
  000000000000004B: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000050: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000055: 90                 nop
  0000000000000056: 0F 10 07           movups      xmm0,xmmword ptr [rdi]
  0000000000000059: F3 0F 7F 44 24 20  movdqu      xmmword ptr [rsp+20h],xmm0
  000000000000005F: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000064: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000069: 48 8B CB           mov         rcx,rbx
  000000000000006C: E8 00 00 00 00     call        ??0_System_error@std@@IEAA@Verror_code@1@AEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@1@@Z
  0000000000000071: 90                 nop
  0000000000000072: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000077: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000007B: 76 2E              jbe         00000000000000AB
  000000000000007D: 48 FF C2           inc         rdx
  0000000000000080: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000085: 48 8B C1           mov         rax,rcx
  0000000000000088: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000008F: 72 15              jb          00000000000000A6
  0000000000000091: 48 83 C2 27        add         rdx,27h
  0000000000000095: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000099: 48 2B C1           sub         rax,rcx
  000000000000009C: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000000A0: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000A4: 77 2D              ja          00000000000000D3
  00000000000000A6: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000AB: 48 8D 05 00 00 00  lea         rax,[??_7system_error@std@@6B@]
                    00
  00000000000000B2: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000B5: 48 8B C3           mov         rax,rbx
  00000000000000B8: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  00000000000000BD: 48 33 CC           xor         rcx,rsp
  00000000000000C0: E8 00 00 00 00     call        __security_check_cookie
  00000000000000C5: 48 8B 9C 24 88 00  mov         rbx,qword ptr [rsp+88h]
                    00 00
  00000000000000CD: 48 83 C4 60        add         rsp,60h
  00000000000000D1: 5F                 pop         rdi
  00000000000000D2: C3                 ret
  00000000000000D3: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000000D8: CC                 int         3

?dtor$0@?0???0system_error@std@@QEAA@Verror_code@1@PEBD@Z@4HA (int `public: __cdecl std::system_error::system_error(class system_error::error_code,char const *)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ (public: __cdecl std::_Tidy_guard<class std::numpunct<char> >::~_Tidy_guard<class std::numpunct<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 19           mov         rbx,qword ptr [rcx]
  0000000000000009: 48 85 DB           test        rbx,rbx
  000000000000000C: 74 1B              je          0000000000000029
  000000000000000E: 48 8B 4B 10        mov         rcx,qword ptr [rbx+10h]
  0000000000000012: E8 00 00 00 00     call        free
  0000000000000017: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  000000000000001B: E8 00 00 00 00     call        free
  0000000000000020: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000024: E8 00 00 00 00     call        free
  0000000000000029: 48 83 C4 20        add         rsp,20h
  000000000000002D: 5B                 pop         rbx
  000000000000002E: C3                 ret

??1?$_Yarn@D@std@@QEAA@XZ (public: __cdecl std::_Yarn<char>::~_Yarn<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000000C: 48 85 C9           test        rcx,rcx
  000000000000000F: 74 05              je          0000000000000016
  0000000000000011: E8 00 00 00 00     call        free
  0000000000000016: 48 C7 03 00 00 00  mov         qword ptr [rbx],0
                    00
  000000000000001D: 48 83 C4 20        add         rsp,20h
  0000000000000021: 5B                 pop         rbx
  0000000000000022: C3                 ret

??1?$_Yarn@_W@std@@QEAA@XZ (public: __cdecl std::_Yarn<wchar_t>::~_Yarn<wchar_t>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 09           mov         rcx,qword ptr [rcx]
  000000000000000C: 48 85 C9           test        rcx,rcx
  000000000000000F: 74 05              je          0000000000000016
  0000000000000011: E8 00 00 00 00     call        free
  0000000000000016: 48 C7 03 00 00 00  mov         qword ptr [rbx],0
                    00
  000000000000001D: 48 83 C4 20        add         rsp,20h
  0000000000000021: 5B                 pop         rbx
  0000000000000022: C3                 ret

??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::~basic_filebuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_filebuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000001B: 74 2F              je          000000000000004C
  000000000000001D: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000021: 48 8D 43 70        lea         rax,[rbx+70h]
  0000000000000025: 48 39 01           cmp         qword ptr [rcx],rax
  0000000000000028: 75 22              jne         000000000000004C
  000000000000002A: 4C 8B 83 90 00 00  mov         r8,qword ptr [rbx+90h]
                    00
  0000000000000031: 48 8B 93 88 00 00  mov         rdx,qword ptr [rbx+88h]
                    00
  0000000000000038: 48 89 11           mov         qword ptr [rcx],rdx
  000000000000003B: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  000000000000003F: 48 89 10           mov         qword ptr [rax],rdx
  0000000000000042: 44 2B C2           sub         r8d,edx
  0000000000000045: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000049: 44 89 00           mov         dword ptr [rax],r8d
  000000000000004C: 80 7B 7C 00        cmp         byte ptr [rbx+7Ch],0
  0000000000000050: 74 08              je          000000000000005A
  0000000000000052: 48 8B CB           mov         rcx,rbx
  0000000000000055: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  000000000000005A: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000061: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000064: 48 8B 5B 60        mov         rbx,qword ptr [rbx+60h]
  0000000000000068: 48 85 DB           test        rbx,rbx
  000000000000006B: 74 33              je          00000000000000A0
  000000000000006D: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  0000000000000071: 48 85 C9           test        rcx,rcx
  0000000000000074: 74 1C              je          0000000000000092
  0000000000000076: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000079: FF 50 10           call        qword ptr [rax+10h]
  000000000000007C: 48 85 C0           test        rax,rax
  000000000000007F: 74 11              je          0000000000000092
  0000000000000081: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000084: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000087: BA 01 00 00 00     mov         edx,1
  000000000000008C: 48 8B C8           mov         rcx,rax
  000000000000008F: 41 FF D0           call        r8
  0000000000000092: BA 10 00 00 00     mov         edx,10h
  0000000000000097: 48 8B CB           mov         rcx,rbx
  000000000000009A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000009F: 90                 nop
  00000000000000A0: 48 83 C4 20        add         rsp,20h
  00000000000000A4: 5B                 pop         rbx
  00000000000000A5: C3                 ret

??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::~basic_ifstream<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000014: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001B: 48 89 84 0A 50 FF  mov         qword ptr [rdx+rcx-0B0h],rax
                    FF FF
  0000000000000023: 48 8B 81 50 FF FF  mov         rax,qword ptr [rcx-0B0h]
                    FF
  000000000000002A: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000002E: 44 8D 82 50 FF FF  lea         r8d,[rdx-0B0h]
                    FF
  0000000000000035: 44 89 84 0A 4C FF  mov         dword ptr [rdx+rcx-0B4h],r8d
                    FF FF
  000000000000003D: 48 81 C1 60 FF FF  add         rcx,0FFFFFFFFFFFFFF60h
                    FF
  0000000000000044: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000049: 48 8B 83 50 FF FF  mov         rax,qword ptr [rbx-0B0h]
                    FF
  0000000000000050: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000054: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000005B: 48 89 84 19 50 FF  mov         qword ptr [rcx+rbx-0B0h],rax
                    FF FF
  0000000000000063: 48 8B 83 50 FF FF  mov         rax,qword ptr [rbx-0B0h]
                    FF
  000000000000006A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000006E: 8D 51 E8           lea         edx,[rcx-18h]
  0000000000000071: 89 94 19 4C FF FF  mov         dword ptr [rcx+rbx-0B4h],edx
                    FF
  0000000000000078: 48 83 C4 20        add         rsp,20h
  000000000000007C: 5B                 pop         rbx
  000000000000007D: C3                 ret

??1?$basic_ios@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_ios<char,struct std::char_traits<char> >::~basic_ios<char,struct std::char_traits<char> >(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000000B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000E: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000013: 90                 nop
  0000000000000014: 48 83 C4 28        add         rsp,28h
  0000000000000018: C3                 ret

??1?$basic_istream@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_istream<char,struct std::char_traits<char> >::~basic_istream<char,struct std::char_traits<char> >(void)):
  0000000000000000: 48 8B 41 E8        mov         rax,qword ptr [rcx-18h]
  0000000000000004: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000008: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000000F: 48 89 44 0A E8     mov         qword ptr [rdx+rcx-18h],rax
  0000000000000014: 48 8B 41 E8        mov         rax,qword ptr [rcx-18h]
  0000000000000018: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001C: 44 8D 42 E8        lea         r8d,[rdx-18h]
  0000000000000020: 44 89 44 0A E4     mov         dword ptr [rdx+rcx-1Ch],r8d
  0000000000000025: C3                 ret

??1?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAA@XZ (public: virtual __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::~basic_streambuf<char,struct std::char_traits<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 59 60        mov         rbx,qword ptr [rcx+60h]
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  0000000000000011: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000014: 48 85 DB           test        rbx,rbx
  0000000000000017: 74 32              je          000000000000004B
  0000000000000019: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  000000000000001D: 48 85 C9           test        rcx,rcx
  0000000000000020: 74 1C              je          000000000000003E
  0000000000000022: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000025: FF 50 10           call        qword ptr [rax+10h]
  0000000000000028: 48 85 C0           test        rax,rax
  000000000000002B: 74 11              je          000000000000003E
  000000000000002D: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000030: 48 8B C8           mov         rcx,rax
  0000000000000033: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000036: BA 01 00 00 00     mov         edx,1
  000000000000003B: 41 FF D0           call        r8
  000000000000003E: BA 10 00 00 00     mov         edx,10h
  0000000000000043: 48 8B CB           mov         rcx,rbx
  0000000000000046: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000004B: 48 83 C4 20        add         rsp,20h
  000000000000004F: 5B                 pop         rbx
  0000000000000050: C3                 ret

??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ (public: __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 51 18        mov         rdx,qword ptr [rcx+18h]
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000011: 76 2C              jbe         000000000000003F
  0000000000000013: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000016: 48 FF C2           inc         rdx
  0000000000000019: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000020: 72 18              jb          000000000000003A
  0000000000000022: 4C 8B 41 F8        mov         r8,qword ptr [rcx-8]
  0000000000000026: 48 83 C2 27        add         rdx,27h
  000000000000002A: 49 2B C8           sub         rcx,r8
  000000000000002D: 48 8D 41 F8        lea         rax,[rcx-8]
  0000000000000031: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000035: 77 21              ja          0000000000000058
  0000000000000037: 49 8B C8           mov         rcx,r8
  000000000000003A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000003F: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  0000000000000047: 48 C7 43 18 0F 00  mov         qword ptr [rbx+18h],0Fh
                    00 00
  000000000000004F: C6 03 00           mov         byte ptr [rbx],0
  0000000000000052: 48 83 C4 20        add         rsp,20h
  0000000000000056: 5B                 pop         rbx
  0000000000000057: C3                 ret
  0000000000000058: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000005D: CC                 int         3

??1?$codecvt@DDU_Mbstatet@@@std@@MEAA@XZ (protected: virtual __cdecl std::codecvt<char,char,struct _Mbstatet>::~codecvt<char,char,struct _Mbstatet>(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1?$ctype@D@std@@MEAA@XZ (protected: virtual __cdecl std::ctype<char>::~ctype<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 8B 41 20           mov         eax,dword ptr [rcx+20h]
  0000000000000016: 85 C0              test        eax,eax
  0000000000000018: 7E 0B              jle         0000000000000025
  000000000000001A: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  000000000000001E: E8 00 00 00 00     call        free
  0000000000000023: EB 0B              jmp         0000000000000030
  0000000000000025: 79 09              jns         0000000000000030
  0000000000000027: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  000000000000002B: E8 00 00 00 00     call        ??_V@YAXPEAX@Z
  0000000000000030: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000034: E8 00 00 00 00     call        free
  0000000000000039: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000040: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5B                 pop         rbx
  0000000000000048: C3                 ret

??1?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAA@XZ (protected: virtual __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::~num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1?$numpunct@D@std@@MEAA@XZ (protected: virtual __cdecl std::numpunct<char>::~numpunct<char>(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7?$numpunct@D@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000017: E8 00 00 00 00     call        free
  000000000000001C: 48 8B 4B 20        mov         rcx,qword ptr [rbx+20h]
  0000000000000020: E8 00 00 00 00     call        free
  0000000000000025: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000029: E8 00 00 00 00     call        free
  000000000000002E: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000035: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000038: 48 83 C4 20        add         rsp,20h
  000000000000003C: 5B                 pop         rbx
  000000000000003D: C3                 ret

??1?$unique_ptr@V_Facet_base@std@@U?$default_delete@V_Facet_base@std@@@2@@std@@QEAA@XZ (public: __cdecl std::unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >::~unique_ptr<class std::_Facet_base,struct std::default_delete<class std::_Facet_base> >(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 09           mov         rcx,qword ptr [rcx]
  0000000000000007: 48 85 C9           test        rcx,rcx
  000000000000000A: 74 0A              je          0000000000000016
  000000000000000C: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000F: BA 01 00 00 00     mov         edx,1
  0000000000000014: FF 10              call        qword ptr [rax]
  0000000000000016: 48 83 C4 28        add         rsp,28h
  000000000000001A: C3                 ret

??1_Facet_base@std@@UEAA@XZ (public: virtual __cdecl std::_Facet_base::~_Facet_base(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1_Locinfo@std@@QEAA@XZ (public: __cdecl std::_Locinfo::~_Locinfo(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?_Locinfo_dtor@_Locinfo@std@@SAXPEAV12@@Z
  000000000000000E: 48 8B 4B 58        mov         rcx,qword ptr [rbx+58h]
  0000000000000012: 48 85 C9           test        rcx,rcx
  0000000000000015: 74 05              je          000000000000001C
  0000000000000017: E8 00 00 00 00     call        free
  000000000000001C: 48 C7 43 58 00 00  mov         qword ptr [rbx+58h],0
                    00 00
  0000000000000024: 48 8B 4B 48        mov         rcx,qword ptr [rbx+48h]
  0000000000000028: 48 85 C9           test        rcx,rcx
  000000000000002B: 74 05              je          0000000000000032
  000000000000002D: E8 00 00 00 00     call        free
  0000000000000032: 48 C7 43 48 00 00  mov         qword ptr [rbx+48h],0
                    00 00
  000000000000003A: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  000000000000003E: 48 85 C9           test        rcx,rcx
  0000000000000041: 74 05              je          0000000000000048
  0000000000000043: E8 00 00 00 00     call        free
  0000000000000048: 48 C7 43 38 00 00  mov         qword ptr [rbx+38h],0
                    00 00
  0000000000000050: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  0000000000000054: 48 85 C9           test        rcx,rcx
  0000000000000057: 74 05              je          000000000000005E
  0000000000000059: E8 00 00 00 00     call        free
  000000000000005E: 48 C7 43 28 00 00  mov         qword ptr [rbx+28h],0
                    00 00
  0000000000000066: 48 8B 4B 18        mov         rcx,qword ptr [rbx+18h]
  000000000000006A: 48 85 C9           test        rcx,rcx
  000000000000006D: 74 05              je          0000000000000074
  000000000000006F: E8 00 00 00 00     call        free
  0000000000000074: 48 C7 43 18 00 00  mov         qword ptr [rbx+18h],0
                    00 00
  000000000000007C: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  0000000000000080: 48 85 C9           test        rcx,rcx
  0000000000000083: 74 05              je          000000000000008A
  0000000000000085: E8 00 00 00 00     call        free
  000000000000008A: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  0000000000000092: 48 8B CB           mov         rcx,rbx
  0000000000000095: 48 83 C4 20        add         rsp,20h
  0000000000000099: 5B                 pop         rbx
  000000000000009A: E9 00 00 00 00     jmp         ??1_Lockit@std@@QEAA@XZ

??1_Sentry_base@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1_Sentry_base@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Sentry_base::~_Sentry_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1bad_array_new_length@std@@UEAA@XZ (public: virtual __cdecl std::bad_array_new_length::~bad_array_new_length(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1bad_cast@std@@UEAA@XZ (public: virtual __cdecl std::bad_cast::~bad_cast(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1ctype_base@std@@UEAA@XZ (public: virtual __cdecl std::ctype_base::~ctype_base(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1error_category@std@@UEAA@XZ (public: virtual __cdecl std::error_category::~error_category(void)):
  0000000000000000: C2 00 00           ret         0

??1exception@std@@UEAA@XZ (public: virtual __cdecl std::exception::~exception(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1facet@locale@std@@MEAA@XZ (protected: virtual __cdecl std::locale::facet::~facet(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: C3                 ret

??1failure@ios_base@std@@UEAA@XZ (public: virtual __cdecl std::ios_base::failure::~failure(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??1ios_base@std@@UEAA@XZ (public: virtual __cdecl std::ios_base::~ios_base(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000000B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000E: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000013: 90                 nop
  0000000000000014: 48 83 C4 28        add         rsp,28h
  0000000000000018: C3                 ret

??1locale@std@@QEAA@XZ (public: __cdecl std::locale::~locale(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 49 08        mov         rcx,qword ptr [rcx+8]
  0000000000000008: 48 85 C9           test        rcx,rcx
  000000000000000B: 74 1C              je          0000000000000029
  000000000000000D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000010: FF 50 10           call        qword ptr [rax+10h]
  0000000000000013: 48 85 C0           test        rax,rax
  0000000000000016: 74 11              je          0000000000000029
  0000000000000018: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000001B: BA 01 00 00 00     mov         edx,1
  0000000000000020: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000023: 48 8B C8           mov         rcx,rax
  0000000000000026: 41 FF D0           call        r8
  0000000000000029: 48 83 C4 28        add         rsp,28h
  000000000000002D: C3                 ret

??1sentry@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_istream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000007: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000A: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000000E: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000013: 48 85 C9           test        rcx,rcx
  0000000000000016: 74 07              je          000000000000001F
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: FF 50 10           call        qword ptr [rax+10h]
  000000000000001E: 90                 nop
  000000000000001F: 48 83 C4 28        add         rsp,28h
  0000000000000023: C3                 ret

??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ (public: __cdecl std::basic_ostream<char,struct std::char_traits<char> >::sentry::~sentry(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  000000000000000E: 85 C0              test        eax,eax
  0000000000000010: 75 09              jne         000000000000001B
  0000000000000012: 48 8B 0B           mov         rcx,qword ptr [rbx]
  0000000000000015: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000001A: 90                 nop
  000000000000001B: 48 8B 13           mov         rdx,qword ptr [rbx]
  000000000000001E: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000021: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000025: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  000000000000002A: 48 85 C9           test        rcx,rcx
  000000000000002D: 74 07              je          0000000000000036
  000000000000002F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000032: FF 50 10           call        qword ptr [rax+10h]
  0000000000000035: 90                 nop
  0000000000000036: 48 83 C4 20        add         rsp,20h
  000000000000003A: 5B                 pop         rbx
  000000000000003B: C3                 ret

??1system_error@std@@UEAA@XZ (public: virtual __cdecl std::system_error::~system_error(void)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000007: 48 89 01           mov         qword ptr [rcx],rax
  000000000000000A: 48 83 C1 08        add         rcx,8
  000000000000000E: E9 00 00 00 00     jmp         __std_exception_destroy

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 56              push        r14
  000000000000000A: 41 57              push        r15
  000000000000000C: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000013: 44 8B F2           mov         r14d,edx
  0000000000000016: 48 8B F9           mov         rdi,rcx
  0000000000000019: 33 DB              xor         ebx,ebx
  000000000000001B: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  0000000000000022: 48 8B D1           mov         rdx,rcx
  0000000000000025: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000002A: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  000000000000002F: 90                 nop
  0000000000000030: 38 5C 24 38        cmp         byte ptr [rsp+38h],bl
  0000000000000034: 0F 84 B6 00 00 00  je          00000000000000F0
  000000000000003A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000003D: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000041: 48 8B 44 38 40     mov         rax,qword ptr [rax+rdi+40h]
  0000000000000046: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  000000000000004A: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  000000000000004F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000052: 48 8B CE           mov         rcx,rsi
  0000000000000055: FF 50 08           call        qword ptr [rax+8]
  0000000000000058: 90                 nop
  0000000000000059: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000005E: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  0000000000000063: 4C 8B F8           mov         r15,rax
  0000000000000066: 48 85 F6           test        rsi,rsi
  0000000000000069: 74 1D              je          0000000000000088
  000000000000006B: 48 8B 16           mov         rdx,qword ptr [rsi]
  000000000000006E: 48 8B CE           mov         rcx,rsi
  0000000000000071: FF 52 10           call        qword ptr [rdx+10h]
  0000000000000074: 48 85 C0           test        rax,rax
  0000000000000077: 74 0F              je          0000000000000088
  0000000000000079: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000007C: 4C 8B 01           mov         r8,qword ptr [rcx]
  000000000000007F: 8D 53 01           lea         edx,[rbx+1]
  0000000000000082: 48 8B C8           mov         rcx,rax
  0000000000000085: 41 FF D0           call        r8
  0000000000000088: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000008B: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  000000000000008F: 4C 03 CF           add         r9,rdi
  0000000000000092: 41 8A 49 58        mov         cl,byte ptr [r9+58h]
  0000000000000096: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  000000000000009A: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  000000000000009F: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000A4: 49 8B 07           mov         rax,qword ptr [r15]
  00000000000000A7: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  00000000000000AC: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  00000000000000B2: 44 89 74 24 28     mov         dword ptr [rsp+28h],r14d
  00000000000000B7: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000BB: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000C0: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000000C5: 49 8B CF           mov         rcx,r15
  00000000000000C8: FF 50 48           call        qword ptr [rax+48h]
  00000000000000CB: BA 04 00 00 00     mov         edx,4
  00000000000000D0: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  00000000000000D5: 0F 45 DA           cmovne      ebx,edx
  00000000000000D8: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  00000000000000DF: EB 14              jmp         00000000000000F5
$LN14:
  00000000000000E1: 48 8B BC 24 C0 00  mov         rdi,qword ptr [rsp+0C0h]
                    00 00
  00000000000000E9: 8B 9C 24 D0 00 00  mov         ebx,dword ptr [rsp+0D0h]
                    00
  00000000000000F0: BA 04 00 00 00     mov         edx,4
  00000000000000F5: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000F8: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000FC: 48 03 CF           add         rcx,rdi
  00000000000000FF: 0B 59 10           or          ebx,dword ptr [rcx+10h]
  0000000000000102: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  0000000000000106: 48 F7 D8           neg         rax
  0000000000000109: 45 1B C0           sbb         r8d,r8d
  000000000000010C: 41 F7 D0           not         r8d
  000000000000010F: 44 23 C2           and         r8d,edx
  0000000000000112: 44 0B C3           or          r8d,ebx
  0000000000000115: 41 83 E0 17        and         r8d,17h
  0000000000000119: 44 89 41 10        mov         dword ptr [rcx+10h],r8d
  000000000000011D: 44 23 41 14        and         r8d,dword ptr [rcx+14h]
  0000000000000121: 75 43              jne         0000000000000166
  0000000000000123: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  0000000000000128: 85 C0              test        eax,eax
  000000000000012A: 75 0B              jne         0000000000000137
  000000000000012C: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000131: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000136: 90                 nop
  0000000000000137: 48 8B 54 24 30     mov         rdx,qword ptr [rsp+30h]
  000000000000013C: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000013F: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000143: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000148: 48 85 C9           test        rcx,rcx
  000000000000014B: 74 07              je          0000000000000154
  000000000000014D: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000150: FF 50 10           call        qword ptr [rax+10h]
  0000000000000153: 90                 nop
  0000000000000154: 48 8B C7           mov         rax,rdi
  0000000000000157: 48 81 C4 90 00 00  add         rsp,90h
                    00
  000000000000015E: 41 5F              pop         r15
  0000000000000160: 41 5E              pop         r14
  0000000000000162: 5F                 pop         rdi
  0000000000000163: 5E                 pop         rsi
  0000000000000164: 5B                 pop         rbx
  0000000000000165: C3                 ret
  0000000000000166: 44 84 C2           test        dl,r8b
  0000000000000169: 74 09              je          0000000000000174
  000000000000016B: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000172: EB 16              jmp         000000000000018A
  0000000000000174: 41 F6 C0 02        test        r8b,2
  0000000000000178: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000017F: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000186: 48 0F 44 D8        cmove       rbx,rax
  000000000000018A: BA 01 00 00 00     mov         edx,1
  000000000000018F: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000194: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000199: 4C 8B C0           mov         r8,rax
  000000000000019C: 48 8B D3           mov         rdx,rbx
  000000000000019F: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001A4: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001A9: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001B0: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001B5: E8 00 00 00 00     call        _CxxThrowException
  00000000000001BA: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?catch$5@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$5 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(int)'::`1'::catch$5):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z$0:
  000000000000000D: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 30        add         rsp,30h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 10        mov         qword ptr [rax+10h],rbx
  0000000000000007: 48 89 48 08        mov         qword ptr [rax+8],rcx
  000000000000000B: 56                 push        rsi
  000000000000000C: 57                 push        rdi
  000000000000000D: 41 56              push        r14
  000000000000000F: 48 81 EC A0 00 00  sub         rsp,0A0h
                    00
  0000000000000016: 0F 29 70 D8        movaps      xmmword ptr [rax-28h],xmm6
  000000000000001A: 0F 28 F1           movaps      xmm6,xmm1
  000000000000001D: 48 8B F9           mov         rdi,rcx
  0000000000000020: 33 DB              xor         ebx,ebx
  0000000000000022: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  0000000000000029: 48 8B D1           mov         rdx,rcx
  000000000000002C: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000031: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000036: 90                 nop
  0000000000000037: 38 5C 24 38        cmp         byte ptr [rsp+38h],bl
  000000000000003B: 0F 84 B8 00 00 00  je          00000000000000F9
  0000000000000041: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000044: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000048: 48 8B 44 38 40     mov         rax,qword ptr [rax+rdi+40h]
  000000000000004D: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  0000000000000051: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  0000000000000056: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000059: 48 8B CE           mov         rcx,rsi
  000000000000005C: FF 50 08           call        qword ptr [rax+8]
  000000000000005F: 90                 nop
  0000000000000060: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000065: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  000000000000006A: 4C 8B F0           mov         r14,rax
  000000000000006D: 48 85 F6           test        rsi,rsi
  0000000000000070: 74 1E              je          0000000000000090
  0000000000000072: 48 8B 16           mov         rdx,qword ptr [rsi]
  0000000000000075: 48 8B CE           mov         rcx,rsi
  0000000000000078: FF 52 10           call        qword ptr [rdx+10h]
  000000000000007B: 48 85 C0           test        rax,rax
  000000000000007E: 74 10              je          0000000000000090
  0000000000000080: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000083: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000086: 8D 53 01           lea         edx,[rbx+1]
  0000000000000089: 48 8B C8           mov         rcx,rax
  000000000000008C: 41 FF D0           call        r8
  000000000000008F: 90                 nop
  0000000000000090: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000093: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  0000000000000097: 4C 03 CF           add         r9,rdi
  000000000000009A: 41 8A 49 58        mov         cl,byte ptr [r9+58h]
  000000000000009E: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  00000000000000A2: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  00000000000000A7: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000AC: 49 8B 06           mov         rax,qword ptr [r14]
  00000000000000AF: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  00000000000000B4: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  00000000000000BA: F2 0F 11 74 24 28  movsd       mmword ptr [rsp+28h],xmm6
  00000000000000C0: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000C4: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000C9: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000000CE: 49 8B CE           mov         rcx,r14
  00000000000000D1: FF 50 28           call        qword ptr [rax+28h]
  00000000000000D4: BA 04 00 00 00     mov         edx,4
  00000000000000D9: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  00000000000000DE: 0F 45 DA           cmovne      ebx,edx
  00000000000000E1: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  00000000000000E8: EB 14              jmp         00000000000000FE
$LN11:
  00000000000000EA: 48 8B BC 24 C0 00  mov         rdi,qword ptr [rsp+0C0h]
                    00 00
  00000000000000F2: 8B 9C 24 D0 00 00  mov         ebx,dword ptr [rsp+0D0h]
                    00
  00000000000000F9: BA 04 00 00 00     mov         edx,4
  00000000000000FE: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000101: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000105: 48 03 CF           add         rcx,rdi
  0000000000000108: 0B 59 10           or          ebx,dword ptr [rcx+10h]
  000000000000010B: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  000000000000010F: 48 F7 D8           neg         rax
  0000000000000112: 45 1B C0           sbb         r8d,r8d
  0000000000000115: 41 F7 D0           not         r8d
  0000000000000118: 44 23 C2           and         r8d,edx
  000000000000011B: 44 0B C3           or          r8d,ebx
  000000000000011E: 41 83 E0 17        and         r8d,17h
  0000000000000122: 44 89 41 10        mov         dword ptr [rcx+10h],r8d
  0000000000000126: 44 23 41 14        and         r8d,dword ptr [rcx+14h]
  000000000000012A: 75 4D              jne         0000000000000179
  000000000000012C: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  0000000000000131: 85 C0              test        eax,eax
  0000000000000133: 75 0B              jne         0000000000000140
  0000000000000135: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  000000000000013A: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000013F: 90                 nop
  0000000000000140: 48 8B 54 24 30     mov         rdx,qword ptr [rsp+30h]
  0000000000000145: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000148: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000014C: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000151: 48 85 C9           test        rcx,rcx
  0000000000000154: 74 07              je          000000000000015D
  0000000000000156: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000159: FF 50 10           call        qword ptr [rax+10h]
  000000000000015C: 90                 nop
  000000000000015D: 48 8B C7           mov         rax,rdi
  0000000000000160: 4C 8D 9C 24 A0 00  lea         r11,[rsp+0A0h]
                    00 00
  0000000000000168: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  000000000000016C: 41 0F 28 73 F0     movaps      xmm6,xmmword ptr [r11-10h]
  0000000000000171: 49 8B E3           mov         rsp,r11
  0000000000000174: 41 5E              pop         r14
  0000000000000176: 5F                 pop         rdi
  0000000000000177: 5E                 pop         rsi
  0000000000000178: C3                 ret
  0000000000000179: 44 84 C2           test        dl,r8b
  000000000000017C: 74 09              je          0000000000000187
  000000000000017E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000185: EB 16              jmp         000000000000019D
  0000000000000187: 41 F6 C0 02        test        r8b,2
  000000000000018B: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000192: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000199: 48 0F 44 D8        cmove       rbx,rax
  000000000000019D: BA 01 00 00 00     mov         edx,1
  00000000000001A2: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000001A7: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001AC: 4C 8B C0           mov         r8,rax
  00000000000001AF: 48 8B D3           mov         rdx,rbx
  00000000000001B2: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001B7: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001BC: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001C3: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001C8: E8 00 00 00 00     call        _CxxThrowException
  00000000000001CD: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?catch$5@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$5 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(double)'::`1'::catch$5):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z$0:
  000000000000000D: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 30        add         rsp,30h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)):
  0000000000000000: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000005: 53                 push        rbx
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 56              push        r14
  000000000000000A: 41 57              push        r15
  000000000000000C: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000013: 4C 8B F2           mov         r14,rdx
  0000000000000016: 48 8B F9           mov         rdi,rcx
  0000000000000019: 33 DB              xor         ebx,ebx
  000000000000001B: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  0000000000000022: 48 8B D1           mov         rdx,rcx
  0000000000000025: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000002A: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  000000000000002F: 90                 nop
  0000000000000030: 38 5C 24 38        cmp         byte ptr [rsp+38h],bl
  0000000000000034: 0F 84 B7 00 00 00  je          00000000000000F1
  000000000000003A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000003D: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000041: 48 8B 44 38 40     mov         rax,qword ptr [rax+rdi+40h]
  0000000000000046: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  000000000000004A: 48 89 74 24 48     mov         qword ptr [rsp+48h],rsi
  000000000000004F: 48 8B 06           mov         rax,qword ptr [rsi]
  0000000000000052: 48 8B CE           mov         rcx,rsi
  0000000000000055: FF 50 08           call        qword ptr [rax+8]
  0000000000000058: 90                 nop
  0000000000000059: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  000000000000005E: E8 00 00 00 00     call        ??$use_facet@V?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@@std@@YAAEBV?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@0@AEBVlocale@0@@Z
  0000000000000063: 4C 8B F8           mov         r15,rax
  0000000000000066: 48 85 F6           test        rsi,rsi
  0000000000000069: 74 1E              je          0000000000000089
  000000000000006B: 48 8B 16           mov         rdx,qword ptr [rsi]
  000000000000006E: 48 8B CE           mov         rcx,rsi
  0000000000000071: FF 52 10           call        qword ptr [rdx+10h]
  0000000000000074: 48 85 C0           test        rax,rax
  0000000000000077: 74 10              je          0000000000000089
  0000000000000079: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000007C: 4C 8B 01           mov         r8,qword ptr [rcx]
  000000000000007F: 8D 53 01           lea         edx,[rbx+1]
  0000000000000082: 48 8B C8           mov         rcx,rax
  0000000000000085: 41 FF D0           call        r8
  0000000000000088: 90                 nop
  0000000000000089: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000008C: 4C 63 48 04        movsxd      r9,dword ptr [rax+4]
  0000000000000090: 4C 03 CF           add         r9,rdi
  0000000000000093: 41 8A 49 58        mov         cl,byte ptr [r9+58h]
  0000000000000097: 49 8B 41 48        mov         rax,qword ptr [r9+48h]
  000000000000009B: C6 44 24 40 00     mov         byte ptr [rsp+40h],0
  00000000000000A0: 48 89 44 24 48     mov         qword ptr [rsp+48h],rax
  00000000000000A5: 49 8B 07           mov         rax,qword ptr [r15]
  00000000000000A8: 0F 28 44 24 40     movaps      xmm0,xmmword ptr [rsp+40h]
  00000000000000AD: 66 0F 7F 44 24 40  movdqa      xmmword ptr [rsp+40h],xmm0
  00000000000000B3: 4C 89 74 24 28     mov         qword ptr [rsp+28h],r14
  00000000000000B8: 88 4C 24 20        mov         byte ptr [rsp+20h],cl
  00000000000000BC: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000C1: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  00000000000000C6: 49 8B CF           mov         rcx,r15
  00000000000000C9: FF 50 38           call        qword ptr [rax+38h]
  00000000000000CC: BA 04 00 00 00     mov         edx,4
  00000000000000D1: 80 7C 24 50 00     cmp         byte ptr [rsp+50h],0
  00000000000000D6: 0F 45 DA           cmovne      ebx,edx
  00000000000000D9: 89 9C 24 D0 00 00  mov         dword ptr [rsp+0D0h],ebx
                    00
  00000000000000E0: EB 14              jmp         00000000000000F6
$LN11:
  00000000000000E2: 48 8B BC 24 C0 00  mov         rdi,qword ptr [rsp+0C0h]
                    00 00
  00000000000000EA: 8B 9C 24 D0 00 00  mov         ebx,dword ptr [rsp+0D0h]
                    00
  00000000000000F1: BA 04 00 00 00     mov         edx,4
  00000000000000F6: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000F9: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000FD: 48 03 CF           add         rcx,rdi
  0000000000000100: 0B 59 10           or          ebx,dword ptr [rcx+10h]
  0000000000000103: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  0000000000000107: 48 F7 D8           neg         rax
  000000000000010A: 45 1B C0           sbb         r8d,r8d
  000000000000010D: 41 F7 D0           not         r8d
  0000000000000110: 44 23 C2           and         r8d,edx
  0000000000000113: 44 0B C3           or          r8d,ebx
  0000000000000116: 41 83 E0 17        and         r8d,17h
  000000000000011A: 44 89 41 10        mov         dword ptr [rcx+10h],r8d
  000000000000011E: 44 23 41 14        and         r8d,dword ptr [rcx+14h]
  0000000000000122: 75 43              jne         0000000000000167
  0000000000000124: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  0000000000000129: 85 C0              test        eax,eax
  000000000000012B: 75 0B              jne         0000000000000138
  000000000000012D: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000132: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  0000000000000137: 90                 nop
  0000000000000138: 48 8B 54 24 30     mov         rdx,qword ptr [rsp+30h]
  000000000000013D: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000140: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000144: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  0000000000000149: 48 85 C9           test        rcx,rcx
  000000000000014C: 74 07              je          0000000000000155
  000000000000014E: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000151: FF 50 10           call        qword ptr [rax+10h]
  0000000000000154: 90                 nop
  0000000000000155: 48 8B C7           mov         rax,rdi
  0000000000000158: 48 81 C4 90 00 00  add         rsp,90h
                    00
  000000000000015F: 41 5F              pop         r15
  0000000000000161: 41 5E              pop         r14
  0000000000000163: 5F                 pop         rdi
  0000000000000164: 5E                 pop         rsi
  0000000000000165: 5B                 pop         rbx
  0000000000000166: C3                 ret
  0000000000000167: 44 84 C2           test        dl,r8b
  000000000000016A: 74 09              je          0000000000000175
  000000000000016C: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000173: EB 16              jmp         000000000000018B
  0000000000000175: 41 F6 C0 02        test        r8b,2
  0000000000000179: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000180: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000187: 48 0F 44 D8        cmove       rbx,rax
  000000000000018B: BA 01 00 00 00     mov         edx,1
  0000000000000190: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000195: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000019A: 4C 8B C0           mov         r8,rax
  000000000000019D: 48 8B D3           mov         rdx,rbx
  00000000000001A0: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001A5: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001AA: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001B1: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000001B6: E8 00 00 00 00     call        _CxxThrowException
  00000000000001BB: CC                 int         3

?dtor$0@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$0 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?dtor$1@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::dtor$1 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?catch$5@?0???6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::catch$5 & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::operator<<(__int64)'::`1'::catch$5):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z$0:
  000000000000000D: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 30        add         rsp,30h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vbase destructor'(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 99 B0 00 00  lea         rbx,[rcx+0B0h]
                    00
  000000000000000D: 48 8B CB           mov         rcx,rbx
  0000000000000010: E8 00 00 00 00     call        ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000015: 90                 nop
  0000000000000016: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000001D: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000020: 48 8B CB           mov         rcx,rbx
  0000000000000023: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000028: 90                 nop
  0000000000000029: 48 83 C4 20        add         rsp,20h
  000000000000002D: 5B                 pop         rbx
  000000000000002E: C3                 ret

??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ([thunk]:public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int)):
  0000000000000000: 48 63 41 FC        movsxd      rax,dword ptr [rcx-4]
  0000000000000004: 48 2B C8           sub         rcx,rax
  0000000000000007: E9 00 00 00 00     jmp         ??_E?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z

??_E?$basic_istream@DU?$char_traits@D@std@@@std@@$4PPPPPPPM@A@EAAPEAXI@Z ([thunk]:public: virtual void * __cdecl std::basic_istream<char,struct std::char_traits<char> >::`vector deleting destructor'`vtordisp{4294967292,0}' (unsigned int)):
  0000000000000000: 48 63 41 FC        movsxd      rax,dword ptr [rcx-4]
  0000000000000004: 48 2B C8           sub         rcx,rax
  0000000000000007: E9 00 00 00 00     jmp         ??_E?$basic_istream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z

??_G?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: E8 00 00 00 00     call        ??1?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000014: F6 C3 01           test        bl,1
  0000000000000017: 74 0D              je          0000000000000026
  0000000000000019: BA 98 00 00 00     mov         edx,98h
  000000000000001E: 48 8B CF           mov         rcx,rdi
  0000000000000021: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000026: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000002B: 48 8B C7           mov         rax,rdi
  000000000000002E: 48 83 C4 20        add         rsp,20h
  0000000000000032: 5F                 pop         rdi
  0000000000000033: C3                 ret

??_G?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 8B FA              mov         edi,edx
  0000000000000011: 48 8B D9           mov         rbx,rcx
  0000000000000014: 48 8D B1 50 FF FF  lea         rsi,[rcx-0B0h]
                    FF
  000000000000001B: E8 00 00 00 00     call        ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  0000000000000020: 90                 nop
  0000000000000021: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000028: 48 89 03           mov         qword ptr [rbx],rax
  000000000000002B: 48 8B CB           mov         rcx,rbx
  000000000000002E: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000033: 90                 nop
  0000000000000034: 40 F6 C7 01        test        dil,1
  0000000000000038: 74 0D              je          0000000000000047
  000000000000003A: BA 10 01 00 00     mov         edx,110h
  000000000000003F: 48 8B CE           mov         rcx,rsi
  0000000000000042: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000047: 48 8B C6           mov         rax,rsi
  000000000000004A: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000004F: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000054: 48 83 C4 20        add         rsp,20h
  0000000000000058: 5F                 pop         rdi
  0000000000000059: C3                 ret

??_G?$basic_ios@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_ios<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000016: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000019: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  000000000000001E: 90                 nop
  000000000000001F: F6 C3 01           test        bl,1
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: BA 60 00 00 00     mov         edx,60h
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000031: 48 8B C7           mov         rax,rdi
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5F                 pop         rdi
  000000000000003E: C3                 ret

??_G?$basic_istream@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_istream<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8D 79 E8        lea         rdi,[rcx-18h]
  0000000000000010: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000013: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000017: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_istream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001E: 49 89 44 08 E8     mov         qword ptr [r8+rcx-18h],rax
  0000000000000023: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000026: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000002A: 45 8D 48 E8        lea         r9d,[r8-18h]
  000000000000002E: 45 89 4C 08 E4     mov         dword ptr [r8+rcx-1Ch],r9d
  0000000000000033: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  000000000000003A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000003D: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  0000000000000042: 90                 nop
  0000000000000043: F6 C3 01           test        bl,1
  0000000000000046: 74 0D              je          0000000000000055
  0000000000000048: BA 78 00 00 00     mov         edx,78h
  000000000000004D: 48 8B CF           mov         rcx,rdi
  0000000000000050: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000055: 48 8B C7           mov         rax,rdi
  0000000000000058: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000005D: 48 83 C4 20        add         rsp,20h
  0000000000000061: 5F                 pop         rdi
  0000000000000062: C3                 ret

??_G?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 79 60        mov         rdi,qword ptr [rcx+60h]
  0000000000000013: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_streambuf@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000001A: 48 89 01           mov         qword ptr [rcx],rax
  000000000000001D: 8B F2              mov         esi,edx
  000000000000001F: 48 8B D9           mov         rbx,rcx
  0000000000000022: 48 85 FF           test        rdi,rdi
  0000000000000025: 74 32              je          0000000000000059
  0000000000000027: 48 8B 4F 08        mov         rcx,qword ptr [rdi+8]
  000000000000002B: 48 85 C9           test        rcx,rcx
  000000000000002E: 74 1C              je          000000000000004C
  0000000000000030: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000033: FF 50 10           call        qword ptr [rax+10h]
  0000000000000036: 48 85 C0           test        rax,rax
  0000000000000039: 74 11              je          000000000000004C
  000000000000003B: 48 8B 10           mov         rdx,qword ptr [rax]
  000000000000003E: 48 8B C8           mov         rcx,rax
  0000000000000041: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000044: BA 01 00 00 00     mov         edx,1
  0000000000000049: 41 FF D0           call        r8
  000000000000004C: BA 10 00 00 00     mov         edx,10h
  0000000000000051: 48 8B CF           mov         rcx,rdi
  0000000000000054: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000059: 40 F6 C6 01        test        sil,1
  000000000000005D: 74 0D              je          000000000000006C
  000000000000005F: BA 68 00 00 00     mov         edx,68h
  0000000000000064: 48 8B CB           mov         rcx,rbx
  0000000000000067: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000006C: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000071: 48 8B C3           mov         rax,rbx
  0000000000000074: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000079: 48 83 C4 20        add         rsp,20h
  000000000000007D: 5F                 pop         rdi
  000000000000007E: C3                 ret

??_G?$codecvt@DDU_Mbstatet@@@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::codecvt<char,char,struct _Mbstatet>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G?$ctype@D@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::ctype<char>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  0000000000000011: 8B FA              mov         edi,edx
  0000000000000013: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000016: 48 8B D9           mov         rbx,rcx
  0000000000000019: 8B 41 20           mov         eax,dword ptr [rcx+20h]
  000000000000001C: 85 C0              test        eax,eax
  000000000000001E: 7E 0B              jle         000000000000002B
  0000000000000020: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000024: E8 00 00 00 00     call        free
  0000000000000029: EB 0B              jmp         0000000000000036
  000000000000002B: 79 09              jns         0000000000000036
  000000000000002D: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000031: E8 00 00 00 00     call        ??_V@YAXPEAX@Z
  0000000000000036: 48 8B 4B 28        mov         rcx,qword ptr [rbx+28h]
  000000000000003A: E8 00 00 00 00     call        free
  000000000000003F: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  0000000000000046: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000049: 40 F6 C7 01        test        dil,1
  000000000000004D: 74 0D              je          000000000000005C
  000000000000004F: BA 30 00 00 00     mov         edx,30h
  0000000000000054: 48 8B CB           mov         rcx,rbx
  0000000000000057: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000005C: 48 8B C3           mov         rax,rbx
  000000000000005F: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000064: 48 83 C4 20        add         rsp,20h
  0000000000000068: 5F                 pop         rdi
  0000000000000069: C3                 ret

??_G?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G?$numpunct@D@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::numpunct<char>::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7?$numpunct@D@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000001D: E8 00 00 00 00     call        free
  0000000000000022: 48 8B 4F 20        mov         rcx,qword ptr [rdi+20h]
  0000000000000026: E8 00 00 00 00     call        free
  000000000000002B: 48 8B 4F 28        mov         rcx,qword ptr [rdi+28h]
  000000000000002F: E8 00 00 00 00     call        free
  0000000000000034: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000003B: 48 89 07           mov         qword ptr [rdi],rax
  000000000000003E: F6 C3 01           test        bl,1
  0000000000000041: 74 0D              je          0000000000000050
  0000000000000043: BA 30 00 00 00     mov         edx,30h
  0000000000000048: 48 8B CF           mov         rcx,rdi
  000000000000004B: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000050: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000055: 48 8B C7           mov         rax,rdi
  0000000000000058: 48 83 C4 20        add         rsp,20h
  000000000000005C: 5F                 pop         rdi
  000000000000005D: C3                 ret

??_G_Facet_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_Facet_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 08 00 00 00     mov         edx,8
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_G_Iostream_error_category2@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_Iostream_error_category2::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: F6 C2 01           test        dl,1
  000000000000000C: 74 0A              je          0000000000000018
  000000000000000E: BA 10 00 00 00     mov         edx,10h
  0000000000000013: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000018: 48 8B C3           mov         rax,rbx
  000000000000001B: 48 83 C4 20        add         rsp,20h
  000000000000001F: 5B                 pop         rbx
  0000000000000020: C3                 ret

??_G_System_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::_System_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_alloc@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_alloc::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_array_new_length@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_array_new_length::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gbad_cast@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::bad_cast::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gcodecvt_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::codecvt_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gctype_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ctype_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gexception@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::exception::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gfacet@locale@std@@MEAAPEAXI@Z (protected: virtual void * __cdecl std::locale::facet::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8D 05 00 00 00  lea         rax,[??_7_Facet_base@std@@6B@]
                    00
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000013: F6 C2 01           test        dl,1
  0000000000000016: 74 0A              je          0000000000000022
  0000000000000018: BA 10 00 00 00     mov         edx,10h
  000000000000001D: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000022: 48 8B C3           mov         rax,rbx
  0000000000000025: 48 83 C4 20        add         rsp,20h
  0000000000000029: 5B                 pop         rbx
  000000000000002A: C3                 ret

??_Gfailure@ios_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ios_base::failure::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gios_base@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::ios_base::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 8B DA              mov         ebx,edx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  0000000000000016: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000019: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  000000000000001E: 90                 nop
  000000000000001F: F6 C3 01           test        bl,1
  0000000000000022: 74 0D              je          0000000000000031
  0000000000000024: BA 48 00 00 00     mov         edx,48h
  0000000000000029: 48 8B CF           mov         rcx,rdi
  000000000000002C: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000031: 48 8B C7           mov         rax,rdi
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 83 C4 20        add         rsp,20h
  000000000000003D: 5F                 pop         rdi
  000000000000003E: C3                 ret

??_Gruntime_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::runtime_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 18 00 00 00     mov         edx,18h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

??_Gsystem_error@std@@UEAAPEAXI@Z (public: virtual void * __cdecl std::system_error::`scalar deleting destructor'(unsigned int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8D 05 00 00 00  lea         rax,[??_7exception@std@@6B@]
                    00
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000017: 8B DA              mov         ebx,edx
  0000000000000019: 48 83 C1 08        add         rcx,8
  000000000000001D: E8 00 00 00 00     call        __std_exception_destroy
  0000000000000022: F6 C3 01           test        bl,1
  0000000000000025: 74 0D              je          0000000000000034
  0000000000000027: BA 28 00 00 00     mov         edx,28h
  000000000000002C: 48 8B CF           mov         rcx,rdi
  000000000000002F: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000034: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000039: 48 8B C7           mov         rax,rdi
  000000000000003C: 48 83 C4 20        add         rsp,20h
  0000000000000040: 5F                 pop         rdi
  0000000000000041: C3                 ret

?_Decref@facet@locale@std@@UEAAPEAV_Facet_base@3@XZ (public: virtual class std::_Facet_base * __cdecl std::locale::facet::_Decref(void)):
  0000000000000000: F0 83 41 08 FF     lock add    dword ptr [rcx+8],0FFFFFFFFh
  0000000000000005: B8 00 00 00 00     mov         eax,0
  000000000000000A: 48 0F 44 C1        cmove       rax,rcx
  000000000000000E: C3                 ret

?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ (protected: bool __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Endwrite(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 60        sub         rsp,60h
  000000000000000A: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000011: 48 33 C4           xor         rax,rsp
  0000000000000014: 48 89 44 24 58     mov         qword ptr [rsp+58h],rax
  0000000000000019: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000001E: 48 8B D9           mov         rbx,rcx
  0000000000000021: 74 4C              je          000000000000006F
  0000000000000023: 80 79 71 00        cmp         byte ptr [rcx+71h],0
  0000000000000027: 74 46              je          000000000000006F
  0000000000000029: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000002C: 83 CA FF           or          edx,0FFFFFFFFh
  000000000000002F: FF 50 18           call        qword ptr [rax+18h]
  0000000000000032: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000035: 0F 84 88 00 00 00  je          00000000000000C3
  000000000000003B: 48 8B 4B 68        mov         rcx,qword ptr [rbx+68h]
  000000000000003F: 4C 8D 44 24 30     lea         r8,[rsp+30h]
  0000000000000044: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000049: 48 8D 53 74        lea         rdx,[rbx+74h]
  000000000000004D: 4C 8D 4C 24 58     lea         r9,[rsp+58h]
  0000000000000052: 4C 8D 44 24 38     lea         r8,[rsp+38h]
  0000000000000057: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000005A: FF 50 40           call        qword ptr [rax+40h]
  000000000000005D: 85 C0              test        eax,eax
  000000000000005F: 74 28              je          0000000000000089
  0000000000000061: 83 E8 01           sub         eax,1
  0000000000000064: 74 27              je          000000000000008D
  0000000000000066: 83 F8 02           cmp         eax,2
  0000000000000069: 75 58              jne         00000000000000C3
  000000000000006B: C6 43 71 00        mov         byte ptr [rbx+71h],0
  000000000000006F: B0 01              mov         al,1
  0000000000000071: 48 8B 4C 24 58     mov         rcx,qword ptr [rsp+58h]
  0000000000000076: 48 33 CC           xor         rcx,rsp
  0000000000000079: E8 00 00 00 00     call        __security_check_cookie
  000000000000007E: 48 8B 5C 24 78     mov         rbx,qword ptr [rsp+78h]
  0000000000000083: 48 83 C4 60        add         rsp,60h
  0000000000000087: 5F                 pop         rdi
  0000000000000088: C3                 ret
  0000000000000089: C6 43 71 00        mov         byte ptr [rbx+71h],0
  000000000000008D: 48 8B 7C 24 30     mov         rdi,qword ptr [rsp+30h]
  0000000000000092: 48 8D 44 24 38     lea         rax,[rsp+38h]
  0000000000000097: 48 2B F8           sub         rdi,rax
  000000000000009A: 74 1E              je          00000000000000BA
  000000000000009C: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  00000000000000A3: 48 8D 4C 24 38     lea         rcx,[rsp+38h]
  00000000000000A8: 4C 8B C7           mov         r8,rdi
  00000000000000AB: BA 01 00 00 00     mov         edx,1
  00000000000000B0: E8 00 00 00 00     call        fwrite
  00000000000000B5: 48 3B F8           cmp         rdi,rax
  00000000000000B8: 75 09              jne         00000000000000C3
  00000000000000BA: 80 7B 71 00        cmp         byte ptr [rbx+71h],0
  00000000000000BE: 0F 94 C0           sete        al
  00000000000000C1: EB AE              jmp         0000000000000071
  00000000000000C3: 32 C0              xor         al,al
  00000000000000C5: EB AA              jmp         0000000000000071

?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z (private: char * __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Ffmt(char *,char,int)const ):
  0000000000000000: C6 02 25           mov         byte ptr [rdx],25h
  0000000000000003: 4C 8B D2           mov         r10,rdx
  0000000000000006: 48 8D 4A 01        lea         rcx,[rdx+1]
  000000000000000A: 41 F6 C1 20        test        r9b,20h
  000000000000000E: 74 06              je          0000000000000016
  0000000000000010: C6 01 2B           mov         byte ptr [rcx],2Bh
  0000000000000013: 48 FF C1           inc         rcx
  0000000000000016: 41 F6 C1 10        test        r9b,10h
  000000000000001A: 74 06              je          0000000000000022
  000000000000001C: C6 01 23           mov         byte ptr [rcx],23h
  000000000000001F: 48 FF C1           inc         rcx
  0000000000000022: 66 C7 01 2E 2A     mov         word ptr [rcx],2A2Eh
  0000000000000027: 48 83 C1 02        add         rcx,2
  000000000000002B: 45 84 C0           test        r8b,r8b
  000000000000002E: 74 06              je          0000000000000036
  0000000000000030: 44 88 01           mov         byte ptr [rcx],r8b
  0000000000000033: 48 FF C1           inc         rcx
  0000000000000036: 41 8B D1           mov         edx,r9d
  0000000000000039: B8 00 30 00 00     mov         eax,3000h
  000000000000003E: 23 D0              and         edx,eax
  0000000000000040: 41 F6 C1 04        test        r9b,4
  0000000000000044: 74 1B              je          0000000000000061
  0000000000000046: 81 FA 00 20 00 00  cmp         edx,2000h
  000000000000004C: 74 1B              je          0000000000000069
  000000000000004E: 3B D0              cmp         edx,eax
  0000000000000050: 75 04              jne         0000000000000056
  0000000000000052: B0 41              mov         al,41h
  0000000000000054: EB 32              jmp         0000000000000088
  0000000000000056: B8 47 00 00 00     mov         eax,47h
  000000000000005B: 44 8D 40 FE        lea         r8d,[rax-2]
  000000000000005F: EB 1D              jmp         000000000000007E
  0000000000000061: 81 FA 00 20 00 00  cmp         edx,2000h
  0000000000000067: 75 04              jne         000000000000006D
  0000000000000069: B0 66              mov         al,66h
  000000000000006B: EB 1B              jmp         0000000000000088
  000000000000006D: 3B D0              cmp         edx,eax
  000000000000006F: 75 04              jne         0000000000000075
  0000000000000071: B0 61              mov         al,61h
  0000000000000073: EB 13              jmp         0000000000000088
  0000000000000075: B8 67 00 00 00     mov         eax,67h
  000000000000007A: 44 8D 40 FE        lea         r8d,[rax-2]
  000000000000007E: 81 FA 00 10 00 00  cmp         edx,1000h
  0000000000000084: 41 0F 44 C0        cmove       eax,r8d
  0000000000000088: 88 01              mov         byte ptr [rcx],al
  000000000000008A: 49 8B C2           mov         rax,r10
  000000000000008D: C6 41 01 00        mov         byte ptr [rcx+1],0
  0000000000000091: C3                 ret

?_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000017: 48 8B EA           mov         rbp,rdx
  000000000000001A: 48 8B F9           mov         rdi,rcx
  000000000000001D: 33 F6              xor         esi,esi
  000000000000001F: 89 B4 24 A0 00 00  mov         dword ptr [rsp+0A0h],esi
                    00
  0000000000000026: 48 85 C9           test        rcx,rcx
  0000000000000029: 74 73              je          000000000000009E
  000000000000002B: 48 39 31           cmp         qword ptr [rcx],rsi
  000000000000002E: 75 6E              jne         000000000000009E
  0000000000000030: 8D 4E 10           lea         ecx,[rsi+10h]
  0000000000000033: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000038: 48 8B D8           mov         rbx,rax
  000000000000003B: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000043: 48 85 C0           test        rax,rax
  0000000000000046: 74 41              je          0000000000000089
  0000000000000048: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000004C: 48 85 C0           test        rax,rax
  000000000000004F: 74 0F              je          0000000000000060
  0000000000000051: 48 8B 50 28        mov         rdx,qword ptr [rax+28h]
  0000000000000055: 48 85 D2           test        rdx,rdx
  0000000000000058: 75 0D              jne         0000000000000067
  000000000000005A: 48 8D 50 30        lea         rdx,[rax+30h]
  000000000000005E: EB 07              jmp         0000000000000067
  0000000000000060: 48 8D 15 00 00 00  lea         rdx,[??_C@_00CNPNBAHC@@]
                    00
  0000000000000067: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000006C: E8 00 00 00 00     call        ??0_Locinfo@std@@QEAA@PEBD@Z
  0000000000000071: BE 01 00 00 00     mov         esi,1
  0000000000000076: C7 43 08 00 00 00  mov         dword ptr [rbx+8],0
                    00
  000000000000007D: 48 8D 05 00 00 00  lea         rax,[??_7?$codecvt@DDU_Mbstatet@@@std@@6B@]
                    00
  0000000000000084: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000087: EB 02              jmp         000000000000008B
  0000000000000089: 33 DB              xor         ebx,ebx
  000000000000008B: 48 89 1F           mov         qword ptr [rdi],rbx
  000000000000008E: 40 F6 C6 01        test        sil,1
  0000000000000092: 74 0A              je          000000000000009E
  0000000000000094: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000099: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  000000000000009E: B8 02 00 00 00     mov         eax,2
  00000000000000A3: 4C 8D 9C 24 90 00  lea         r11,[rsp+90h]
                    00 00
  00000000000000AB: 49 8B 5B 18        mov         rbx,qword ptr [r11+18h]
  00000000000000AF: 49 8B 6B 20        mov         rbp,qword ptr [r11+20h]
  00000000000000B3: 49 8B 73 28        mov         rsi,qword ptr [r11+28h]
  00000000000000B7: 49 8B E3           mov         rsp,r11
  00000000000000BA: 5F                 pop         rdi
  00000000000000BB: C3                 ret

?dtor$0@?0??_Getcat@?$codecvt@DDU_Mbstatet@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::codecvt<char,char,struct _Mbstatet>::_Getcat(class codecvt<char,char,struct _Mbstatet>::locale::facet const * *,class codecvt<char,char,struct _Mbstatet>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 10 00 00 00     mov         edx,10h
  000000000000000E: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  0000000000000017: 48 8B EA           mov         rbp,rdx
  000000000000001A: 48 8B F9           mov         rdi,rcx
  000000000000001D: 33 F6              xor         esi,esi
  000000000000001F: 89 B4 24 C0 00 00  mov         dword ptr [rsp+0C0h],esi
                    00
  0000000000000026: 48 85 C9           test        rcx,rcx
  0000000000000029: 0F 84 90 00 00 00  je          00000000000000BF
  000000000000002F: 48 39 31           cmp         qword ptr [rcx],rsi
  0000000000000032: 0F 85 87 00 00 00  jne         00000000000000BF
  0000000000000038: 8D 4E 30           lea         ecx,[rsi+30h]
  000000000000003B: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000040: 48 8B D8           mov         rbx,rax
  0000000000000043: 48 89 84 24 C0 00  mov         qword ptr [rsp+0C0h],rax
                    00 00
  000000000000004B: 48 85 C0           test        rax,rax
  000000000000004E: 74 5A              je          00000000000000AA
  0000000000000050: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  0000000000000054: 48 85 C0           test        rax,rax
  0000000000000057: 74 0F              je          0000000000000068
  0000000000000059: 48 8B 50 28        mov         rdx,qword ptr [rax+28h]
  000000000000005D: 48 85 D2           test        rdx,rdx
  0000000000000060: 75 0D              jne         000000000000006F
  0000000000000062: 48 8D 50 30        lea         rdx,[rax+30h]
  0000000000000066: EB 07              jmp         000000000000006F
  0000000000000068: 48 8D 15 00 00 00  lea         rdx,[??_C@_00CNPNBAHC@@]
                    00
  000000000000006F: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000074: E8 00 00 00 00     call        ??0_Locinfo@std@@QEAA@PEBD@Z
  0000000000000079: BE 01 00 00 00     mov         esi,1
  000000000000007E: C7 43 08 00 00 00  mov         dword ptr [rbx+8],0
                    00
  0000000000000085: 48 8D 05 00 00 00  lea         rax,[??_7?$ctype@D@std@@6B@]
                    00
  000000000000008C: 48 89 03           mov         qword ptr [rbx],rax
  000000000000008F: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000094: E8 00 00 00 00     call        _Getctype
  0000000000000099: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000009C: 0F 11 43 10        movups      xmmword ptr [rbx+10h],xmm0
  00000000000000A0: 0F 10 48 10        movups      xmm1,xmmword ptr [rax+10h]
  00000000000000A4: 0F 11 4B 20        movups      xmmword ptr [rbx+20h],xmm1
  00000000000000A8: EB 02              jmp         00000000000000AC
  00000000000000AA: 33 DB              xor         ebx,ebx
  00000000000000AC: 48 89 1F           mov         qword ptr [rdi],rbx
  00000000000000AF: 40 F6 C6 01        test        sil,1
  00000000000000B3: 74 0A              je          00000000000000BF
  00000000000000B5: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  00000000000000BA: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  00000000000000BF: B8 02 00 00 00     mov         eax,2
  00000000000000C4: 4C 8D 9C 24 B0 00  lea         r11,[rsp+0B0h]
                    00 00
  00000000000000CC: 49 8B 5B 18        mov         rbx,qword ptr [r11+18h]
  00000000000000D0: 49 8B 6B 20        mov         rbp,qword ptr [r11+20h]
  00000000000000D4: 49 8B 73 28        mov         rsi,qword ptr [r11+28h]
  00000000000000D8: 49 8B E3           mov         rsp,r11
  00000000000000DB: 5F                 pop         rdi
  00000000000000DC: C3                 ret

?dtor$0@?0??_Getcat@?$ctype@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::ctype<char>::_Getcat(class ctype<char>::locale::facet const * *,class ctype<char>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 30 00 00 00     mov         edx,30h
  000000000000000E: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000017: 48 8B EA           mov         rbp,rdx
  000000000000001A: 48 8B F9           mov         rdi,rcx
  000000000000001D: 33 F6              xor         esi,esi
  000000000000001F: 89 B4 24 A0 00 00  mov         dword ptr [rsp+0A0h],esi
                    00
  0000000000000026: 48 85 C9           test        rcx,rcx
  0000000000000029: 74 73              je          000000000000009E
  000000000000002B: 48 39 31           cmp         qword ptr [rcx],rsi
  000000000000002E: 75 6E              jne         000000000000009E
  0000000000000030: 8D 4E 10           lea         ecx,[rsi+10h]
  0000000000000033: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000038: 48 8B D8           mov         rbx,rax
  000000000000003B: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  0000000000000043: 48 85 C0           test        rax,rax
  0000000000000046: 74 41              je          0000000000000089
  0000000000000048: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000004C: 48 85 C0           test        rax,rax
  000000000000004F: 74 0F              je          0000000000000060
  0000000000000051: 48 8B 50 28        mov         rdx,qword ptr [rax+28h]
  0000000000000055: 48 85 D2           test        rdx,rdx
  0000000000000058: 75 0D              jne         0000000000000067
  000000000000005A: 48 8D 50 30        lea         rdx,[rax+30h]
  000000000000005E: EB 07              jmp         0000000000000067
  0000000000000060: 48 8D 15 00 00 00  lea         rdx,[??_C@_00CNPNBAHC@@]
                    00
  0000000000000067: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000006C: E8 00 00 00 00     call        ??0_Locinfo@std@@QEAA@PEBD@Z
  0000000000000071: BE 01 00 00 00     mov         esi,1
  0000000000000076: C7 43 08 00 00 00  mov         dword ptr [rbx+8],0
                    00
  000000000000007D: 48 8D 05 00 00 00  lea         rax,[??_7?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@6B@]
                    00
  0000000000000084: 48 89 03           mov         qword ptr [rbx],rax
  0000000000000087: EB 02              jmp         000000000000008B
  0000000000000089: 33 DB              xor         ebx,ebx
  000000000000008B: 48 89 1F           mov         qword ptr [rdi],rbx
  000000000000008E: 40 F6 C6 01        test        sil,1
  0000000000000092: 74 0A              je          000000000000009E
  0000000000000094: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000099: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  000000000000009E: B8 04 00 00 00     mov         eax,4
  00000000000000A3: 4C 8D 9C 24 90 00  lea         r11,[rsp+90h]
                    00 00
  00000000000000AB: 49 8B 5B 18        mov         rbx,qword ptr [r11+18h]
  00000000000000AF: 49 8B 6B 20        mov         rbp,qword ptr [r11+20h]
  00000000000000B3: 49 8B 73 28        mov         rsi,qword ptr [r11+28h]
  00000000000000B7: 49 8B E3           mov         rsp,r11
  00000000000000BA: 5F                 pop         rdi
  00000000000000BB: C3                 ret

?dtor$0@?0??_Getcat@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Getcat(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::locale::facet const * *,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 10 00 00 00     mov         edx,10h
  000000000000000E: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z (public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class std::locale::facet const * *,class std::locale const *)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 10        mov         qword ptr [rax+10h],rbx
  0000000000000007: 55                 push        rbp
  0000000000000008: 56                 push        rsi
  0000000000000009: 57                 push        rdi
  000000000000000A: 48 81 EC 90 00 00  sub         rsp,90h
                    00
  0000000000000011: 48 8B EA           mov         rbp,rdx
  0000000000000014: 48 8B F9           mov         rdi,rcx
  0000000000000017: 33 F6              xor         esi,esi
  0000000000000019: 89 70 08           mov         dword ptr [rax+8],esi
  000000000000001C: 48 85 C9           test        rcx,rcx
  000000000000001F: 0F 84 8E 00 00 00  je          00000000000000B3
  0000000000000025: 48 39 31           cmp         qword ptr [rcx],rsi
  0000000000000028: 0F 85 85 00 00 00  jne         00000000000000B3
  000000000000002E: 8D 4E 30           lea         ecx,[rsi+30h]
  0000000000000031: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  0000000000000036: 48 8B D8           mov         rbx,rax
  0000000000000039: 48 89 84 24 C0 00  mov         qword ptr [rsp+0C0h],rax
                    00 00
  0000000000000041: 48 85 C0           test        rax,rax
  0000000000000044: 74 58              je          000000000000009E
  0000000000000046: 48 8B 45 08        mov         rax,qword ptr [rbp+8]
  000000000000004A: 48 85 C0           test        rax,rax
  000000000000004D: 74 0F              je          000000000000005E
  000000000000004F: 48 8B 50 28        mov         rdx,qword ptr [rax+28h]
  0000000000000053: 48 85 D2           test        rdx,rdx
  0000000000000056: 75 0D              jne         0000000000000065
  0000000000000058: 48 8D 50 30        lea         rdx,[rax+30h]
  000000000000005C: EB 07              jmp         0000000000000065
  000000000000005E: 48 8D 15 00 00 00  lea         rdx,[??_C@_00CNPNBAHC@@]
                    00
  0000000000000065: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000006A: E8 00 00 00 00     call        ??0_Locinfo@std@@QEAA@PEBD@Z
  000000000000006F: 90                 nop
  0000000000000070: BE 01 00 00 00     mov         esi,1
  0000000000000075: 89 B4 24 B0 00 00  mov         dword ptr [rsp+0B0h],esi
                    00
  000000000000007C: C7 43 08 00 00 00  mov         dword ptr [rbx+8],0
                    00
  0000000000000083: 48 8D 0D 00 00 00  lea         rcx,[??_7?$numpunct@D@std@@6B@]
                    00
  000000000000008A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000008D: 44 8A C6           mov         r8b,sil
  0000000000000090: 48 8B D0           mov         rdx,rax
  0000000000000093: 48 8B CB           mov         rcx,rbx
  0000000000000096: E8 00 00 00 00     call        ?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z
  000000000000009B: 90                 nop
  000000000000009C: EB 02              jmp         00000000000000A0
  000000000000009E: 33 DB              xor         ebx,ebx
  00000000000000A0: 48 89 1F           mov         qword ptr [rdi],rbx
  00000000000000A3: 40 F6 C6 01        test        sil,1
  00000000000000A7: 74 0A              je          00000000000000B3
  00000000000000A9: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000AE: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  00000000000000B3: B8 04 00 00 00     mov         eax,4
  00000000000000B8: 48 8B 9C 24 B8 00  mov         rbx,qword ptr [rsp+0B8h]
                    00 00
  00000000000000C0: 48 81 C4 90 00 00  add         rsp,90h
                    00
  00000000000000C7: 5F                 pop         rdi
  00000000000000C8: 5E                 pop         rsi
  00000000000000C9: 5D                 pop         rbp
  00000000000000CA: C3                 ret

?dtor$0@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$0):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: BA 30 00 00 00     mov         edx,30h
  000000000000000E: 48 8B 8D C0 00 00  mov         rcx,qword ptr [rbp+0C0h]
                    00
  0000000000000015: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000001A: 48 83 C4 20        add         rsp,20h
  000000000000001E: 5D                 pop         rbp
  000000000000001F: C3                 ret

?dtor$1@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$1):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B EA           mov         rbp,rdx
  0000000000000009: 8B 85 B0 00 00 00  mov         eax,dword ptr [rbp+0B0h]
  000000000000000F: 83 E0 01           and         eax,1
  0000000000000012: 85 C0              test        eax,eax
  0000000000000014: 74 10              je          0000000000000026
  0000000000000016: 83 A5 B0 00 00 00  and         dword ptr [rbp+0B0h],0FFFFFFFEh
                    FE
  000000000000001D: 48 8D 4D 20        lea         rcx,[rbp+20h]
  0000000000000021: E8 00 00 00 00     call        ??1_Locinfo@std@@QEAA@XZ
  0000000000000026: 48 83 C4 20        add         rsp,20h
  000000000000002A: 5D                 pop         rbp
  000000000000002B: C3                 ret

?dtor$2@?0??_Getcat@?$numpunct@D@std@@SA_KPEAPEBVfacet@locale@2@PEBV42@@Z@4HA (int `public: static unsigned __int64 __cdecl std::numpunct<char>::_Getcat(class numpunct<char>::locale::facet const * *,class numpunct<char>::facet const *)'::`1'::dtor$2):
  0000000000000000: 48 8B 8A C0 00 00  mov         rcx,qword ptr [rdx+0C0h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1facet@locale@std@@MEAA@XZ

?_Incref@facet@locale@std@@UEAAXXZ (public: virtual void __cdecl std::locale::facet::_Incref(void)):
  0000000000000000: F0 FF 41 08        lock inc    dword ptr [rcx+8]
  0000000000000004: C3                 ret

?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z (protected: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Init(struct _iobuf *,enum std::basic_filebuf<char,struct std::char_traits<char> >::_Initfl)):
  0000000000000000: 4C 8B DC           mov         r11,rsp
  0000000000000003: 49 89 5B 18        mov         qword ptr [r11+18h],rbx
  0000000000000007: 57                 push        rdi
  0000000000000008: 48 83 EC 20        sub         rsp,20h
  000000000000000C: C6 41 71 00        mov         byte ptr [rcx+71h],0
  0000000000000010: 4C 8D 51 08        lea         r10,[rcx+8]
  0000000000000014: 4C 89 51 18        mov         qword ptr [rcx+18h],r10
  0000000000000018: 4C 8D 49 28        lea         r9,[rcx+28h]
  000000000000001C: 4C 89 49 38        mov         qword ptr [rcx+38h],r9
  0000000000000020: 48 8B D9           mov         rbx,rcx
  0000000000000023: 41 83 F8 01        cmp         r8d,1
  0000000000000027: 48 8B FA           mov         rdi,rdx
  000000000000002A: 4C 8D 41 10        lea         r8,[rcx+10h]
  000000000000002E: 4C 89 41 20        mov         qword ptr [rcx+20h],r8
  0000000000000032: 0F 94 C0           sete        al
  0000000000000035: 88 41 7C           mov         byte ptr [rcx+7Ch],al
  0000000000000038: 48 8D 53 48        lea         rdx,[rbx+48h]
  000000000000003C: 48 89 53 50        mov         qword ptr [rbx+50h],rdx
  0000000000000040: 48 8D 43 4C        lea         rax,[rbx+4Ch]
  0000000000000044: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  0000000000000048: 48 83 C1 30        add         rcx,30h
  000000000000004C: 48 89 4B 40        mov         qword ptr [rbx+40h],rcx
  0000000000000050: 49 C7 00 00 00 00  mov         qword ptr [r8],0
                    00
  0000000000000057: 48 C7 01 00 00 00  mov         qword ptr [rcx],0
                    00
  000000000000005E: C7 00 00 00 00 00  mov         dword ptr [rax],0
  0000000000000064: 49 C7 02 00 00 00  mov         qword ptr [r10],0
                    00
  000000000000006B: 49 C7 01 00 00 00  mov         qword ptr [r9],0
                    00
  0000000000000072: C7 02 00 00 00 00  mov         dword ptr [rdx],0
  0000000000000078: 48 85 FF           test        rdi,rdi
  000000000000007B: 74 53              je          00000000000000D0
  000000000000007D: 4D 8D 4B 20        lea         r9,[r11+20h]
  0000000000000081: 49 C7 43 08 00 00  mov         qword ptr [r11+8],0
                    00 00
  0000000000000089: 4D 8D 43 10        lea         r8,[r11+10h]
  000000000000008D: 49 C7 43 10 00 00  mov         qword ptr [r11+10h],0
                    00 00
  0000000000000095: 49 8D 53 08        lea         rdx,[r11+8]
  0000000000000099: 49 C7 43 20 00 00  mov         qword ptr [r11+20h],0
                    00 00
  00000000000000A1: 48 8B CF           mov         rcx,rdi
  00000000000000A4: E8 00 00 00 00     call        _get_stream_buffer_pointers
  00000000000000A9: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  00000000000000AE: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  00000000000000B2: 48 89 43 20        mov         qword ptr [rbx+20h],rax
  00000000000000B6: 48 8B 44 24 38     mov         rax,qword ptr [rsp+38h]
  00000000000000BB: 48 89 43 38        mov         qword ptr [rbx+38h],rax
  00000000000000BF: 48 89 43 40        mov         qword ptr [rbx+40h],rax
  00000000000000C3: 48 8B 44 24 48     mov         rax,qword ptr [rsp+48h]
  00000000000000C8: 48 89 43 50        mov         qword ptr [rbx+50h],rax
  00000000000000CC: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  00000000000000D0: 48 89 BB 80 00 00  mov         qword ptr [rbx+80h],rdi
                    00
  00000000000000D7: 48 8B 05 00 00 00  mov         rax,qword ptr [?_Stinit@?1??_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@23@@Z@4U_Mbstatet@@A]
                    00
  00000000000000DE: 48 89 43 74        mov         qword ptr [rbx+74h],rax
  00000000000000E2: 48 C7 43 68 00 00  mov         qword ptr [rbx+68h],0
                    00 00
  00000000000000EA: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000EF: 48 83 C4 20        add         rsp,20h
  00000000000000F3: 5F                 pop         rdi
  00000000000000F4: C3                 ret

?_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z (protected: void __cdecl std::numpunct<char>::_Init(class std::_Locinfo const &,bool)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 50        sub         rsp,50h
  000000000000000F: 41 8A F0           mov         sil,r8b
  0000000000000012: 48 8B D9           mov         rbx,rcx
  0000000000000015: E8 00 00 00 00     call        localeconv
  000000000000001A: 48 8B F8           mov         rdi,rax
  000000000000001D: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000022: E8 00 00 00 00     call        _Getcvt
  0000000000000027: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  000000000000002F: 48 C7 43 20 00 00  mov         qword ptr [rbx+20h],0
                    00 00
  0000000000000037: 48 C7 43 28 00 00  mov         qword ptr [rbx+28h],0
                    00 00
  000000000000003F: 48 89 5C 24 60     mov         qword ptr [rsp+60h],rbx
  0000000000000044: 40 84 F6           test        sil,sil
  0000000000000047: 48 8D 0D 00 00 00  lea         rcx,[??_C@_00CNPNBAHC@@]
                    00
  000000000000004E: 75 04              jne         0000000000000054
  0000000000000050: 48 8B 4F 10        mov         rcx,qword ptr [rdi+10h]
  0000000000000054: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000059: 33 D2              xor         edx,edx
  000000000000005B: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  0000000000000060: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  0000000000000064: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000069: 33 D2              xor         edx,edx
  000000000000006B: 48 8D 0D 00 00 00  lea         rcx,[??_C@_05LAPONLG@false@]
                    00
  0000000000000072: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  0000000000000077: 48 89 43 20        mov         qword ptr [rbx+20h],rax
  000000000000007B: 4C 8D 44 24 20     lea         r8,[rsp+20h]
  0000000000000080: 33 D2              xor         edx,edx
  0000000000000082: 48 8D 0D 00 00 00  lea         rcx,[??_C@_04LOAJBDKD@true@]
                    00
  0000000000000089: E8 00 00 00 00     call        ??$_Maklocstr@D@std@@YAPEADPEBDPEADAEBU_Cvtvec@@@Z
  000000000000008E: 48 89 43 28        mov         qword ptr [rbx+28h],rax
  0000000000000092: 48 C7 44 24 60 00  mov         qword ptr [rsp+60h],0
                    00 00 00
  000000000000009B: 40 84 F6           test        sil,sil
  000000000000009E: 74 08              je          00000000000000A8
  00000000000000A0: C6 43 18 2E        mov         byte ptr [rbx+18h],2Eh
  00000000000000A4: B0 2C              mov         al,2Ch
  00000000000000A6: EB 0E              jmp         00000000000000B6
  00000000000000A8: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000AB: 8A 08              mov         cl,byte ptr [rax]
  00000000000000AD: 88 4B 18           mov         byte ptr [rbx+18h],cl
  00000000000000B0: 48 8B 47 08        mov         rax,qword ptr [rdi+8]
  00000000000000B4: 8A 00              mov         al,byte ptr [rax]
  00000000000000B6: 88 43 19           mov         byte ptr [rbx+19h],al
  00000000000000B9: 48 8B 5C 24 68     mov         rbx,qword ptr [rsp+68h]
  00000000000000BE: 48 8B 74 24 70     mov         rsi,qword ptr [rsp+70h]
  00000000000000C3: 48 83 C4 50        add         rsp,50h
  00000000000000C7: 5F                 pop         rdi
  00000000000000C8: C3                 ret

?dtor$0@?0??_Init@?$numpunct@D@std@@IEAAXAEBV_Locinfo@2@_N@Z@4HA (int `protected: void __cdecl std::numpunct<char>::_Init(class numpunct<char>::_Locinfo const &,bool)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 60 00 00  lea         rcx,[rdx+60h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$_Tidy_guard@V?$numpunct@D@std@@@std@@QEAA@XZ

?_Init@ios_base@std@@IEAAXXZ (protected: void __cdecl std::ios_base::_Init(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: 48 C7 41 40 00 00  mov         qword ptr [rcx+40h],0
                    00 00
  0000000000000015: 48 C7 41 08 00 00  mov         qword ptr [rcx+8],0
                    00 00
  000000000000001D: C7 41 14 00 00 00  mov         dword ptr [rcx+14h],0
                    00
  0000000000000024: C7 41 18 01 02 00  mov         dword ptr [rcx+18h],201h
                    00
  000000000000002B: 48 C7 41 20 06 00  mov         qword ptr [rcx+20h],6
                    00 00
  0000000000000033: 48 C7 41 28 00 00  mov         qword ptr [rcx+28h],0
                    00 00
  000000000000003B: 48 C7 41 30 00 00  mov         qword ptr [rcx+30h],0
                    00 00
  0000000000000043: 48 C7 41 38 00 00  mov         qword ptr [rcx+38h],0
                    00 00
  000000000000004B: 33 D2              xor         edx,edx
  000000000000004D: E8 00 00 00 00     call        ?clear@ios_base@std@@QEAAXH@Z
  0000000000000052: B9 10 00 00 00     mov         ecx,10h
  0000000000000057: E8 00 00 00 00     call        ??2@YAPEAX_K@Z
  000000000000005C: 48 8B F8           mov         rdi,rax
  000000000000005F: 48 85 C0           test        rax,rax
  0000000000000062: 74 0D              je          0000000000000071
  0000000000000064: B1 01              mov         cl,1
  0000000000000066: E8 00 00 00 00     call        ?_Init@locale@std@@CAPEAV_Locimp@12@_N@Z
  000000000000006B: 48 89 47 08        mov         qword ptr [rdi+8],rax
  000000000000006F: EB 02              jmp         0000000000000073
  0000000000000071: 33 FF              xor         edi,edi
  0000000000000073: 48 89 7B 40        mov         qword ptr [rbx+40h],rdi
  0000000000000077: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000007C: 48 83 C4 20        add         rsp,20h
  0000000000000080: 5F                 pop         rdi
  0000000000000081: C3                 ret

?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z (protected: void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Initcvt(class std::codecvt<char,char,struct _Mbstatet> const &)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 02           mov         rax,qword ptr [rdx]
  000000000000000D: 48 8B D9           mov         rbx,rcx
  0000000000000010: 48 8B CA           mov         rcx,rdx
  0000000000000013: 48 8B FA           mov         rdi,rdx
  0000000000000016: FF 50 18           call        qword ptr [rax+18h]
  0000000000000019: 45 33 DB           xor         r11d,r11d
  000000000000001C: 84 C0              test        al,al
  000000000000001E: 74 06              je          0000000000000026
  0000000000000020: 4C 89 5B 68        mov         qword ptr [rbx+68h],r11
  0000000000000024: EB 46              jmp         000000000000006C
  0000000000000026: 48 89 7B 68        mov         qword ptr [rbx+68h],rdi
  000000000000002A: 4C 8D 53 08        lea         r10,[rbx+8]
  000000000000002E: 4C 89 53 18        mov         qword ptr [rbx+18h],r10
  0000000000000032: 4C 8D 43 10        lea         r8,[rbx+10h]
  0000000000000036: 4C 89 43 20        mov         qword ptr [rbx+20h],r8
  000000000000003A: 4C 8D 4B 28        lea         r9,[rbx+28h]
  000000000000003E: 4C 89 4B 38        mov         qword ptr [rbx+38h],r9
  0000000000000042: 48 8D 4B 30        lea         rcx,[rbx+30h]
  0000000000000046: 48 89 4B 40        mov         qword ptr [rbx+40h],rcx
  000000000000004A: 48 8D 53 48        lea         rdx,[rbx+48h]
  000000000000004E: 48 89 53 50        mov         qword ptr [rbx+50h],rdx
  0000000000000052: 48 8D 43 4C        lea         rax,[rbx+4Ch]
  0000000000000056: 48 89 43 58        mov         qword ptr [rbx+58h],rax
  000000000000005A: 4D 89 18           mov         qword ptr [r8],r11
  000000000000005D: 4C 89 19           mov         qword ptr [rcx],r11
  0000000000000060: 44 89 18           mov         dword ptr [rax],r11d
  0000000000000063: 4D 89 1A           mov         qword ptr [r10],r11
  0000000000000066: 4D 89 19           mov         qword ptr [r9],r11
  0000000000000069: 44 89 1A           mov         dword ptr [rdx],r11d
  000000000000006C: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000071: 48 83 C4 20        add         rsp,20h
  0000000000000075: 5F                 pop         rdi
  0000000000000076: C3                 ret

?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z (public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  0000000000000015: 40 8A F2           mov         sil,dl
  0000000000000018: 48 8B D9           mov         rbx,rcx
  000000000000001B: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001E: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  0000000000000022: 41 8B 54 08 10     mov         edx,dword ptr [r8+rcx+10h]
  0000000000000027: 85 D2              test        edx,edx
  0000000000000029: 74 2E              je          0000000000000059
  000000000000002B: 49 8B 44 08 48     mov         rax,qword ptr [r8+rcx+48h]
  0000000000000030: 48 F7 D8           neg         rax
  0000000000000033: 1B C9              sbb         ecx,ecx
  0000000000000035: F7 D1              not         ecx
  0000000000000037: 83 E1 04           and         ecx,4
  000000000000003A: 0B CA              or          ecx,edx
  000000000000003C: 83 E1 15           and         ecx,15h
  000000000000003F: 83 C9 02           or          ecx,2
  0000000000000042: 41 89 4C 18 10     mov         dword ptr [r8+rbx+10h],ecx
  0000000000000047: 41 23 4C 18 14     and         ecx,dword ptr [r8+rbx+14h]
  000000000000004C: 0F 85 47 01 00 00  jne         0000000000000199
  0000000000000052: 32 C0              xor         al,al
  0000000000000054: E9 2C 01 00 00     jmp         0000000000000185
  0000000000000059: 49 8B 4C 08 50     mov         rcx,qword ptr [r8+rcx+50h]
  000000000000005E: 48 85 C9           test        rcx,rcx
  0000000000000061: 74 05              je          0000000000000068
  0000000000000063: E8 00 00 00 00     call        ?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ
  0000000000000068: 40 32 FF           xor         dil,dil
  000000000000006B: 40 88 BC 24 B0 00  mov         byte ptr [rsp+0B0h],dil
                    00 00
  0000000000000073: 40 84 F6           test        sil,sil
  0000000000000076: 0F 85 FA 00 00 00  jne         0000000000000176
  000000000000007C: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000007F: 48 63 40 04        movsxd      rax,dword ptr [rax+4]
  0000000000000083: F6 44 18 18 01     test        byte ptr [rax+rbx+18h],1
  0000000000000088: 0F 84 E8 00 00 00  je          0000000000000176
  000000000000008E: 48 8B 44 18 40     mov         rax,qword ptr [rax+rbx+40h]
  0000000000000093: 48 8B 70 08        mov         rsi,qword ptr [rax+8]
  0000000000000097: 48 89 74 24 28     mov         qword ptr [rsp+28h],rsi
  000000000000009C: 48 8B 06           mov         rax,qword ptr [rsi]
  000000000000009F: 48 8B CE           mov         rcx,rsi
  00000000000000A2: FF 50 08           call        qword ptr [rax+8]
  00000000000000A5: 90                 nop
  00000000000000A6: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000000AB: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000B0: 4C 8B F0           mov         r14,rax
  00000000000000B3: 48 85 F6           test        rsi,rsi
  00000000000000B6: 74 20              je          00000000000000D8
  00000000000000B8: 48 8B 16           mov         rdx,qword ptr [rsi]
  00000000000000BB: 48 8B CE           mov         rcx,rsi
  00000000000000BE: FF 52 10           call        qword ptr [rdx+10h]
  00000000000000C1: 48 85 C0           test        rax,rax
  00000000000000C4: 74 12              je          00000000000000D8
  00000000000000C6: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000C9: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000CC: BA 01 00 00 00     mov         edx,1
  00000000000000D1: 48 8B C8           mov         rcx,rax
  00000000000000D4: 41 FF D0           call        r8
  00000000000000D7: 90                 nop
  00000000000000D8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000DB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000DF: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  00000000000000E4: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  00000000000000E8: 48 8B 10           mov         rdx,qword ptr [rax]
  00000000000000EB: 48 85 D2           test        rdx,rdx
  00000000000000EE: 74 0E              je          00000000000000FE
  00000000000000F0: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  00000000000000F4: 83 38 00           cmp         dword ptr [rax],0
  00000000000000F7: 7E 05              jle         00000000000000FE
  00000000000000F9: 0F B6 02           movzx       eax,byte ptr [rdx]
  00000000000000FC: EB 06              jmp         0000000000000104
  00000000000000FE: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000101: FF 50 30           call        qword ptr [rax+30h]
  0000000000000104: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000107: 75 0D              jne         0000000000000116
  0000000000000109: 40 B7 01           mov         dil,1
  000000000000010C: 40 88 BC 24 B0 00  mov         byte ptr [rsp+0B0h],dil
                    00 00
  0000000000000114: EB 0D              jmp         0000000000000123
  0000000000000116: 0F B6 C8           movzx       ecx,al
  0000000000000119: 49 8B 46 18        mov         rax,qword ptr [r14+18h]
  000000000000011D: F6 04 48 48        test        byte ptr [rax+rcx*2],48h
  0000000000000121: 75 02              jne         0000000000000125
  0000000000000123: EB 23              jmp         0000000000000148
  0000000000000125: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000128: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000012C: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000131: E8 00 00 00 00     call        ?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ
  0000000000000136: EB CC              jmp         0000000000000104
$LN18:
  0000000000000138: 48 8B 9C 24 A0 00  mov         rbx,qword ptr [rsp+0A0h]
                    00 00
  0000000000000140: 40 8A BC 24 B0 00  mov         dil,byte ptr [rsp+0B0h]
                    00 00
  0000000000000148: 40 84 FF           test        dil,dil
  000000000000014B: 74 29              je          0000000000000176
  000000000000014D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000150: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000154: 48 03 CB           add         rcx,rbx
  0000000000000157: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  000000000000015B: 48 F7 D8           neg         rax
  000000000000015E: 1B D2              sbb         edx,edx
  0000000000000160: F7 D2              not         edx
  0000000000000162: 83 E2 04           and         edx,4
  0000000000000165: 0B 51 10           or          edx,dword ptr [rcx+10h]
  0000000000000168: 83 E2 14           and         edx,14h
  000000000000016B: 83 CA 03           or          edx,3
  000000000000016E: 89 51 10           mov         dword ptr [rcx+10h],edx
  0000000000000171: 23 51 14           and         edx,dword ptr [rcx+14h]
  0000000000000174: 75 77              jne         00000000000001ED
  0000000000000176: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000179: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000017D: 83 7C 19 10 00     cmp         dword ptr [rcx+rbx+10h],0
  0000000000000182: 0F 94 C0           sete        al
  0000000000000185: 48 8B 9C 24 A8 00  mov         rbx,qword ptr [rsp+0A8h]
                    00 00
  000000000000018D: 48 81 C4 80 00 00  add         rsp,80h
                    00
  0000000000000194: 41 5E              pop         r14
  0000000000000196: 5F                 pop         rdi
  0000000000000197: 5E                 pop         rsi
  0000000000000198: C3                 ret
  0000000000000199: F6 C1 04           test        cl,4
  000000000000019C: 74 09              je          00000000000001A7
  000000000000019E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001A5: EB 15              jmp         00000000000001BC
  00000000000001A7: F6 C1 02           test        cl,2
  00000000000001AA: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  00000000000001B1: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  00000000000001B8: 48 0F 44 D8        cmove       rbx,rax
  00000000000001BC: BA 01 00 00 00     mov         edx,1
  00000000000001C1: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  00000000000001C6: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  00000000000001CB: 4C 8B C0           mov         r8,rax
  00000000000001CE: 48 8B D3           mov         rdx,rbx
  00000000000001D1: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001D6: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000001DB: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000001E2: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001E7: E8 00 00 00 00     call        _CxxThrowException
  00000000000001EC: CC                 int         3
  00000000000001ED: F6 C2 04           test        dl,4
  00000000000001F0: 74 09              je          00000000000001FB
  00000000000001F2: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000001F9: EB 15              jmp         0000000000000210
  00000000000001FB: F6 C2 02           test        dl,2
  00000000000001FE: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000205: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000020C: 48 0F 44 D8        cmove       rbx,rax
  0000000000000210: BA 01 00 00 00     mov         edx,1
  0000000000000215: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000021A: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000021F: 4C 8B C0           mov         r8,rax
  0000000000000222: 48 8B D3           mov         rdx,rbx
  0000000000000225: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  000000000000022A: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000022F: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000236: 48 8D 4C 24 58     lea         rcx,[rsp+58h]
  000000000000023B: E8 00 00 00 00     call        _CxxThrowException
  0000000000000240: CC                 int         3

?dtor$0@?0??_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z@4HA (int `public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?catch$2@?0??_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z@4HA (int `public: bool __cdecl std::basic_istream<char,struct std::char_traits<char> >::_Ipfx(bool)'::`1'::catch$2):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?_Ipfx@?$basic_istream@DU?$char_traits@D@std@@@std@@QEAA_N_N@Z$0:
  000000000000000D: 48 8B 8D A0 00 00  mov         rcx,qword ptr [rbp+0A0h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,char *,unsigned __int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 55                 push        rbp
  0000000000000006: 56                 push        rsi
  0000000000000007: 57                 push        rdi
  0000000000000008: 41 54              push        r12
  000000000000000A: 41 55              push        r13
  000000000000000C: 41 56              push        r14
  000000000000000E: 41 57              push        r15
  0000000000000010: 48 8D 6C 24 F1     lea         rbp,[rsp-0Fh]
  0000000000000015: 48 81 EC B0 00 00  sub         rsp,0B0h
                    00
  000000000000001C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000023: 48 33 C4           xor         rax,rsp
  0000000000000026: 48 89 45 07        mov         qword ptr [rbp+7],rax
  000000000000002A: 4D 8B F9           mov         r15,r9
  000000000000002D: 4D 8B E0           mov         r12,r8
  0000000000000030: 48 89 55 BF        mov         qword ptr [rbp-41h],rdx
  0000000000000034: 4C 8B E9           mov         r13,rcx
  0000000000000037: 8A 45 6F           mov         al,byte ptr [rbp+6Fh]
  000000000000003A: 88 45 8F           mov         byte ptr [rbp-71h],al
  000000000000003D: 4C 8B 75 77        mov         r14,qword ptr [rbp+77h]
  0000000000000041: 48 8B 75 7F        mov         rsi,qword ptr [rbp+7Fh]
  0000000000000045: 48 85 F6           test        rsi,rsi
  0000000000000048: 74 10              je          000000000000005A
  000000000000004A: 41 8A 06           mov         al,byte ptr [r14]
  000000000000004D: 2C 2B              sub         al,2Bh
  000000000000004F: A8 FD              test        al,0FDh
  0000000000000051: 75 07              jne         000000000000005A
  0000000000000053: BB 01 00 00 00     mov         ebx,1
  0000000000000058: EB 02              jmp         000000000000005C
  000000000000005A: 33 DB              xor         ebx,ebx
  000000000000005C: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000060: 25 00 0E 00 00     and         eax,0E00h
  0000000000000065: 3D 00 08 00 00     cmp         eax,800h
  000000000000006A: 75 1D              jne         0000000000000089
  000000000000006C: 48 8D 4B 02        lea         rcx,[rbx+2]
  0000000000000070: 48 3B CE           cmp         rcx,rsi
  0000000000000073: 77 14              ja          0000000000000089
  0000000000000075: 41 80 3C 1E 30     cmp         byte ptr [r14+rbx],30h
  000000000000007A: 75 0D              jne         0000000000000089
  000000000000007C: 41 8A 44 1E 01     mov         al,byte ptr [r14+rbx+1]
  0000000000000081: 2C 58              sub         al,58h
  0000000000000083: A8 DF              test        al,0DFh
  0000000000000085: 48 0F 44 D9        cmove       rbx,rcx
  0000000000000089: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  000000000000008D: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000091: 48 89 7D A7        mov         qword ptr [rbp-59h],rdi
  0000000000000095: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000098: 48 8B CF           mov         rcx,rdi
  000000000000009B: FF 50 08           call        qword ptr [rax+8]
  000000000000009E: 90                 nop
  000000000000009F: 48 8D 4D 9F        lea         rcx,[rbp-61h]
  00000000000000A3: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  00000000000000A8: 48 89 45 9F        mov         qword ptr [rbp-61h],rax
  00000000000000AC: 48 85 FF           test        rdi,rdi
  00000000000000AF: 74 1B              je          00000000000000CC
  00000000000000B1: 48 8B 07           mov         rax,qword ptr [rdi]
  00000000000000B4: 48 8B CF           mov         rcx,rdi
  00000000000000B7: FF 50 10           call        qword ptr [rax+10h]
  00000000000000BA: 48 8B C8           mov         rcx,rax
  00000000000000BD: 48 85 C0           test        rax,rax
  00000000000000C0: 74 0A              je          00000000000000CC
  00000000000000C2: 48 8B 00           mov         rax,qword ptr [rax]
  00000000000000C5: BA 01 00 00 00     mov         edx,1
  00000000000000CA: FF 10              call        qword ptr [rax]
  00000000000000CC: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000CF: 0F 11 45 C7        movups      xmmword ptr [rbp-39h],xmm0
  00000000000000D3: 48 C7 45 D7 00 00  mov         qword ptr [rbp-29h],0
                    00 00
  00000000000000DB: 48 C7 45 DF 00 00  mov         qword ptr [rbp-21h],0
                    00 00
  00000000000000E3: 4C 8B C6           mov         r8,rsi
  00000000000000E6: 33 D2              xor         edx,edx
  00000000000000E8: 48 8D 4D C7        lea         rcx,[rbp-39h]
  00000000000000EC: E8 00 00 00 00     call        ??$_Construct@$0A@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXD_K@Z
  00000000000000F1: 90                 nop
  00000000000000F2: 4C 8D 4D C7        lea         r9,[rbp-39h]
  00000000000000F6: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000000FB: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  0000000000000100: 48 8B 4D 9F        mov         rcx,qword ptr [rbp-61h]
  0000000000000104: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000107: 4E 8D 04 36        lea         r8,[rsi+r14]
  000000000000010B: 49 8B D6           mov         rdx,r14
  000000000000010E: FF 50 38           call        qword ptr [rax+38h]
  0000000000000111: 49 8B 47 40        mov         rax,qword ptr [r15+40h]
  0000000000000115: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000119: 48 89 7D A7        mov         qword ptr [rbp-59h],rdi
  000000000000011D: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000120: 48 8B CF           mov         rcx,rdi
  0000000000000123: FF 50 08           call        qword ptr [rax+8]
  0000000000000126: 90                 nop
  0000000000000127: 48 8D 4D 9F        lea         rcx,[rbp-61h]
  000000000000012B: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  0000000000000130: 4C 8B F0           mov         r14,rax
  0000000000000133: 48 85 FF           test        rdi,rdi
  0000000000000136: 74 1B              je          0000000000000153
  0000000000000138: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000013B: 48 8B CF           mov         rcx,rdi
  000000000000013E: FF 50 10           call        qword ptr [rax+10h]
  0000000000000141: 48 8B C8           mov         rcx,rax
  0000000000000144: 48 85 C0           test        rax,rax
  0000000000000147: 74 0A              je          0000000000000153
  0000000000000149: 48 8B 00           mov         rax,qword ptr [rax]
  000000000000014C: BA 01 00 00 00     mov         edx,1
  0000000000000151: FF 10              call        qword ptr [rax]
  0000000000000153: 49 8B 06           mov         rax,qword ptr [r14]
  0000000000000156: 48 8D 55 E7        lea         rdx,[rbp-19h]
  000000000000015A: 49 8B CE           mov         rcx,r14
  000000000000015D: FF 50 28           call        qword ptr [rax+28h]
  0000000000000160: 90                 nop
  0000000000000161: 48 8D 7D E7        lea         rdi,[rbp-19h]
  0000000000000165: 48 83 7D FF 0F     cmp         qword ptr [rbp-1],0Fh
  000000000000016A: 48 0F 47 7D E7     cmova       rdi,qword ptr [rbp-19h]
  000000000000016F: 8A 07              mov         al,byte ptr [rdi]
  0000000000000171: FE C8              dec         al
  0000000000000173: 3C 7D              cmp         al,7Dh
  0000000000000175: 77 4A              ja          00000000000001C1
  0000000000000177: 49 8B 06           mov         rax,qword ptr [r14]
  000000000000017A: 49 8B CE           mov         rcx,r14
  000000000000017D: FF 50 20           call        qword ptr [rax+20h]
  0000000000000180: 44 8A F0           mov         r14b,al
  0000000000000183: EB 36              jmp         00000000000001BB
  0000000000000185: 84 C0              test        al,al
  0000000000000187: 7E 38              jle         00000000000001C1
  0000000000000189: 48 0F BE 0F        movsx       rcx,byte ptr [rdi]
  000000000000018D: 48 8B C6           mov         rax,rsi
  0000000000000190: 48 2B C3           sub         rax,rbx
  0000000000000193: 48 3B C8           cmp         rcx,rax
  0000000000000196: 73 29              jae         00000000000001C1
  0000000000000198: 48 2B F1           sub         rsi,rcx
  000000000000019B: 45 8A CE           mov         r9b,r14b
  000000000000019E: 41 B8 01 00 00 00  mov         r8d,1
  00000000000001A4: 48 8B D6           mov         rdx,rsi
  00000000000001A7: 48 8D 4D C7        lea         rcx,[rbp-39h]
  00000000000001AB: E8 00 00 00 00     call        ?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z
  00000000000001B0: 48 8D 47 01        lea         rax,[rdi+1]
  00000000000001B4: 80 38 00           cmp         byte ptr [rax],0
  00000000000001B7: 48 0F 4F F8        cmovg       rdi,rax
  00000000000001BB: 8A 07              mov         al,byte ptr [rdi]
  00000000000001BD: 3C 7F              cmp         al,7Fh
  00000000000001BF: 75 C4              jne         0000000000000185
  00000000000001C1: 48 8B 75 D7        mov         rsi,qword ptr [rbp-29h]
  00000000000001C5: 49 8B 7F 28        mov         rdi,qword ptr [r15+28h]
  00000000000001C9: 48 85 FF           test        rdi,rdi
  00000000000001CC: 7E 0A              jle         00000000000001D8
  00000000000001CE: 48 3B FE           cmp         rdi,rsi
  00000000000001D1: 76 05              jbe         00000000000001D8
  00000000000001D3: 48 2B FE           sub         rdi,rsi
  00000000000001D6: EB 02              jmp         00000000000001DA
  00000000000001D8: 33 FF              xor         edi,edi
  00000000000001DA: 41 8B 47 18        mov         eax,dword ptr [r15+18h]
  00000000000001DE: 25 C0 01 00 00     and         eax,1C0h
  00000000000001E3: 41 0F 10 04 24     movups      xmm0,xmmword ptr [r12]
  00000000000001E8: 4C 8D 45 9F        lea         r8,[rbp-61h]
  00000000000001EC: 48 8D 55 AF        lea         rdx,[rbp-51h]
  00000000000001F0: 49 8B CD           mov         rcx,r13
  00000000000001F3: F3 0F 7F 45 9F     movdqu      xmmword ptr [rbp-61h],xmm0
  00000000000001F8: 83 F8 40           cmp         eax,40h
  00000000000001FB: 0F 84 87 00 00 00  je          0000000000000288
  0000000000000201: 3D 00 01 00 00     cmp         eax,100h
  0000000000000206: 74 40              je          0000000000000248
  0000000000000208: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000020D: 44 8A 75 8F        mov         r14b,byte ptr [rbp-71h]
  0000000000000211: 45 8A CE           mov         r9b,r14b
  0000000000000214: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000219: 33 FF              xor         edi,edi
  000000000000021B: 4C 8D 4D C7        lea         r9,[rbp-39h]
  000000000000021F: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000224: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  0000000000000229: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  000000000000022C: F3 0F 7F 45 9F     movdqu      xmmword ptr [rbp-61h],xmm0
  0000000000000231: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000236: 4C 8D 45 9F        lea         r8,[rbp-61h]
  000000000000023A: 48 8D 55 AF        lea         rdx,[rbp-51h]
  000000000000023E: 49 8B CD           mov         rcx,r13
  0000000000000241: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  0000000000000246: EB 5C              jmp         00000000000002A4
  0000000000000248: 4C 8D 4D C7        lea         r9,[rbp-39h]
  000000000000024C: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000251: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  0000000000000256: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000025B: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  0000000000000260: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  0000000000000263: F3 0F 7F 45 9F     movdqu      xmmword ptr [rbp-61h],xmm0
  0000000000000268: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  000000000000026D: 44 8A 75 8F        mov         r14b,byte ptr [rbp-71h]
  0000000000000271: 45 8A CE           mov         r9b,r14b
  0000000000000274: 4C 8D 45 9F        lea         r8,[rbp-61h]
  0000000000000278: 48 8D 55 AF        lea         rdx,[rbp-51h]
  000000000000027C: 49 8B CD           mov         rcx,r13
  000000000000027F: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000284: 33 FF              xor         edi,edi
  0000000000000286: EB 1C              jmp         00000000000002A4
  0000000000000288: 4C 8D 4D C7        lea         r9,[rbp-39h]
  000000000000028C: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000291: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  0000000000000296: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  000000000000029B: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  00000000000002A0: 44 8A 75 8F        mov         r14b,byte ptr [rbp-71h]
  00000000000002A4: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000002A7: F3 41 0F 7F 04 24  movdqu      xmmword ptr [r12],xmm0
  00000000000002AD: 4C 8D 4D C7        lea         r9,[rbp-39h]
  00000000000002B1: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000002B6: 4C 0F 47 4D C7     cmova       r9,qword ptr [rbp-39h]
  00000000000002BB: 4C 03 CB           add         r9,rbx
  00000000000002BE: F3 0F 7F 45 9F     movdqu      xmmword ptr [rbp-61h],xmm0
  00000000000002C3: 48 2B F3           sub         rsi,rbx
  00000000000002C6: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  00000000000002CB: 4C 8D 45 9F        lea         r8,[rbp-61h]
  00000000000002CF: 48 8D 55 AF        lea         rdx,[rbp-51h]
  00000000000002D3: 49 8B CD           mov         rcx,r13
  00000000000002D6: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  00000000000002DB: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000002DE: 33 F6              xor         esi,esi
  00000000000002E0: 49 89 77 28        mov         qword ptr [r15+28h],rsi
  00000000000002E4: F3 0F 7F 45 9F     movdqu      xmmword ptr [rbp-61h],xmm0
  00000000000002E9: 48 89 7C 24 20     mov         qword ptr [rsp+20h],rdi
  00000000000002EE: 45 8A CE           mov         r9b,r14b
  00000000000002F1: 4C 8D 45 9F        lea         r8,[rbp-61h]
  00000000000002F5: 48 8B 5D BF        mov         rbx,qword ptr [rbp-41h]
  00000000000002F9: 48 8B D3           mov         rdx,rbx
  00000000000002FC: 49 8B CD           mov         rcx,r13
  00000000000002FF: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000304: 90                 nop
  0000000000000305: BF 00 10 00 00     mov         edi,1000h
  000000000000030A: 48 8B 55 FF        mov         rdx,qword ptr [rbp-1]
  000000000000030E: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000312: 76 29              jbe         000000000000033D
  0000000000000314: 48 FF C2           inc         rdx
  0000000000000317: 48 8B 4D E7        mov         rcx,qword ptr [rbp-19h]
  000000000000031B: 48 8B C1           mov         rax,rcx
  000000000000031E: 48 3B D7           cmp         rdx,rdi
  0000000000000321: 72 15              jb          0000000000000338
  0000000000000323: 48 83 C2 27        add         rdx,27h
  0000000000000327: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000032B: 48 2B C1           sub         rax,rcx
  000000000000032E: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000332: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000336: 77 78              ja          00000000000003B0
  0000000000000338: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000033D: 48 89 75 F7        mov         qword ptr [rbp-9],rsi
  0000000000000341: 48 C7 45 FF 0F 00  mov         qword ptr [rbp-1],0Fh
                    00 00
  0000000000000349: 40 88 75 E7        mov         byte ptr [rbp-19h],sil
  000000000000034D: 48 8B 55 DF        mov         rdx,qword ptr [rbp-21h]
  0000000000000351: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000355: 76 29              jbe         0000000000000380
  0000000000000357: 48 FF C2           inc         rdx
  000000000000035A: 48 8B 4D C7        mov         rcx,qword ptr [rbp-39h]
  000000000000035E: 48 8B C1           mov         rax,rcx
  0000000000000361: 48 3B D7           cmp         rdx,rdi
  0000000000000364: 72 15              jb          000000000000037B
  0000000000000366: 48 83 C2 27        add         rdx,27h
  000000000000036A: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000036E: 48 2B C1           sub         rax,rcx
  0000000000000371: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000375: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000379: 77 2F              ja          00000000000003AA
  000000000000037B: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000380: 48 8B C3           mov         rax,rbx
  0000000000000383: 48 8B 4D 07        mov         rcx,qword ptr [rbp+7]
  0000000000000387: 48 33 CC           xor         rcx,rsp
  000000000000038A: E8 00 00 00 00     call        __security_check_cookie
  000000000000038F: 48 8B 9C 24 F0 00  mov         rbx,qword ptr [rsp+0F0h]
                    00 00
  0000000000000397: 48 81 C4 B0 00 00  add         rsp,0B0h
                    00
  000000000000039E: 41 5F              pop         r15
  00000000000003A0: 41 5E              pop         r14
  00000000000003A2: 41 5D              pop         r13
  00000000000003A4: 41 5C              pop         r12
  00000000000003A6: 5F                 pop         rdi
  00000000000003A7: 5E                 pop         rsi
  00000000000003A8: 5D                 pop         rbp
  00000000000003A9: C3                 ret
  00000000000003AA: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000003AF: 90                 nop
  00000000000003B0: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000003B5: 90                 nop

?dtor$0@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 68 00 00  lea         rcx,[rdx+68h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$2@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$2):
  0000000000000000: 48 8D 8A 40 00 00  lea         rcx,[rdx+40h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$3@?0??_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z@4HA (int `private: class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Iput(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,char *,unsigned __int64)const '::`1'::dtor$3):
  0000000000000000: 48 8D 8A 88 00 00  lea         rcx,[rdx+88h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?_Lock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Lock(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  000000000000000B: 48 85 C9           test        rcx,rcx
  000000000000000E: 74 05              je          0000000000000015
  0000000000000010: E8 00 00 00 00     call        _lock_file
  0000000000000015: 48 83 C4 28        add         rsp,28h
  0000000000000019: C3                 ret

?_Lock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::_Lock(void)):
  0000000000000000: C2 00 00           ret         0

?_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z (private: static class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class std::error_code,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 56                 push        rsi
  0000000000000003: 57                 push        rdi
  0000000000000004: 48 83 EC 60        sub         rsp,60h
  0000000000000008: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000000F: 48 33 C4           xor         rax,rsp
  0000000000000012: 48 89 44 24 50     mov         qword ptr [rsp+50h],rax
  0000000000000017: 49 8B D8           mov         rbx,r8
  000000000000001A: 48 8B F2           mov         rsi,rdx
  000000000000001D: 48 8B F9           mov         rdi,rcx
  0000000000000020: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000025: 48 89 5C 24 28     mov         qword ptr [rsp+28h],rbx
  000000000000002A: 49 83 78 10 00     cmp         qword ptr [r8+10h],0
  000000000000002F: 74 15              je          0000000000000046
  0000000000000031: 41 B8 02 00 00 00  mov         r8d,2
  0000000000000037: 48 8D 15 00 00 00  lea         rdx,[??_C@_02LMMGGCAJ@?3?5@]
                    00
  000000000000003E: 48 8B CB           mov         rcx,rbx
  0000000000000041: E8 00 00 00 00     call        ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
  0000000000000046: 48 8B 4E 08        mov         rcx,qword ptr [rsi+8]
  000000000000004A: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000004D: 44 8B 06           mov         r8d,dword ptr [rsi]
  0000000000000050: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000055: FF 50 10           call        qword ptr [rax+10h]
  0000000000000058: 90                 nop
  0000000000000059: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  000000000000005E: BE 0F 00 00 00     mov         esi,0Fh
  0000000000000063: 48 39 74 24 48     cmp         qword ptr [rsp+48h],rsi
  0000000000000068: 48 0F 47 54 24 30  cmova       rdx,qword ptr [rsp+30h]
  000000000000006E: 4C 8B 44 24 40     mov         r8,qword ptr [rsp+40h]
  0000000000000073: 48 8B CB           mov         rcx,rbx
  0000000000000076: E8 00 00 00 00     call        ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z
  000000000000007B: 90                 nop
  000000000000007C: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000081: 48 3B D6           cmp         rdx,rsi
  0000000000000084: 76 2E              jbe         00000000000000B4
  0000000000000086: 48 FF C2           inc         rdx
  0000000000000089: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  000000000000008E: 48 8B C1           mov         rax,rcx
  0000000000000091: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000098: 72 15              jb          00000000000000AF
  000000000000009A: 48 83 C2 27        add         rdx,27h
  000000000000009E: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000000A2: 48 2B C1           sub         rax,rcx
  00000000000000A5: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000000A9: 48 83 F8 1F        cmp         rax,1Fh
  00000000000000AD: 77 5F              ja          000000000000010E
  00000000000000AF: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000000B4: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000B7: 0F 11 07           movups      xmmword ptr [rdi],xmm0
  00000000000000BA: 48 C7 47 10 00 00  mov         qword ptr [rdi+10h],0
                    00 00
  00000000000000C2: 48 C7 47 18 00 00  mov         qword ptr [rdi+18h],0
                    00 00
  00000000000000CA: 41 B8 20 00 00 00  mov         r8d,20h
  00000000000000D0: 48 8B D3           mov         rdx,rbx
  00000000000000D3: 48 8B CF           mov         rcx,rdi
  00000000000000D6: E8 00 00 00 00     call        memcpy
  00000000000000DB: 90                 nop
  00000000000000DC: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  00000000000000E4: C6 03 00           mov         byte ptr [rbx],0
  00000000000000E7: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  00000000000000EF: 48 89 73 18        mov         qword ptr [rbx+18h],rsi
  00000000000000F3: C6 03 00           mov         byte ptr [rbx],0
  00000000000000F6: 48 8B C7           mov         rax,rdi
  00000000000000F9: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  00000000000000FE: 48 33 CC           xor         rcx,rsp
  0000000000000101: E8 00 00 00 00     call        __security_check_cookie
  0000000000000106: 48 83 C4 60        add         rsp,60h
  000000000000010A: 5F                 pop         rdi
  000000000000010B: 5E                 pop         rsi
  000000000000010C: 5B                 pop         rbx
  000000000000010D: C3                 ret
  000000000000010E: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000113: 90                 nop

?dtor$0@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA (int `private: static class _System_error::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class _System_error::error_code,class _System_error::std)'::`1'::dtor$0):
  0000000000000000: 48 8B 8A 28 00 00  mov         rcx,qword ptr [rdx+28h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?dtor$1@?0??_Makestr@_System_error@std@@CA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@Verror_code@2@V32@@Z@4HA (int `private: static class _System_error::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_System_error::_Makestr(class _System_error::error_code,class _System_error::std)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000000C: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000010: 83 7C 19 10 00     cmp         dword ptr [rcx+rbx+10h],0
  0000000000000015: 75 32              jne         $LN10
  0000000000000017: F6 44 19 18 02     test        byte ptr [rcx+rbx+18h],2
  000000000000001C: 74 2B              je          $LN10
  000000000000001E: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  0000000000000023: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000026: FF 50 68           call        qword ptr [rax+68h]
  0000000000000029: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000002C: 75 1B              jne         $LN10
  000000000000002E: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000031: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000035: 8B 44 19 10        mov         eax,dword ptr [rcx+rbx+10h]
  0000000000000039: 83 E0 13           and         eax,13h
  000000000000003C: 83 C8 04           or          eax,4
  000000000000003F: 89 44 19 10        mov         dword ptr [rcx+rbx+10h],eax
  0000000000000043: 23 44 19 14        and         eax,dword ptr [rcx+rbx+14h]
  0000000000000047: 75 06              jne         000000000000004F
$LN10:
  0000000000000049: 48 83 C4 60        add         rsp,60h
  000000000000004D: 5B                 pop         rbx
  000000000000004E: C3                 ret
  000000000000004F: A8 04              test        al,4
  0000000000000051: 74 09              je          000000000000005C
  0000000000000053: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  000000000000005A: EB 14              jmp         0000000000000070
  000000000000005C: A8 02              test        al,2
  000000000000005E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000065: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  000000000000006C: 48 0F 44 D8        cmove       rbx,rax
  0000000000000070: BA 01 00 00 00     mov         edx,1
  0000000000000075: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000007A: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000007F: 4C 8B C0           mov         r8,rax
  0000000000000082: 48 8B D3           mov         rdx,rbx
  0000000000000085: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000008A: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000008F: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000096: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000009B: E8 00 00 00 00     call        _CxxThrowException
  00000000000000A0: CC                 int         3
$LN31:
  00000000000000A1: CC                 int         3

?catch$0@?0??_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ@4HA (int `public: void __cdecl std::basic_ostream<char,struct std::char_traits<char> >::_Osfx(void)'::`1'::catch$0):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ$0:
  000000000000000D: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5D                 pop         rbp
  000000000000001C: C3                 ret
  000000000000001D: CC                 int         3

?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,char const *,unsigned __int64)const ):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 56              push        r14
  0000000000000015: 48 83 EC 20        sub         rsp,20h
  0000000000000019: 48 8B 7C 24 50     mov         rdi,qword ptr [rsp+50h]
  000000000000001E: 4D 8B F1           mov         r14,r9
  0000000000000021: 49 8B F0           mov         rsi,r8
  0000000000000024: 48 8B EA           mov         rbp,rdx
  0000000000000027: 48 85 FF           test        rdi,rdi
  000000000000002A: 74 62              je          000000000000008E
  000000000000002C: 49 8B 58 08        mov         rbx,qword ptr [r8+8]
  0000000000000030: 45 0F B6 0E        movzx       r9d,byte ptr [r14]
  0000000000000034: 48 85 DB           test        rbx,rbx
  0000000000000037: 74 49              je          0000000000000082
  0000000000000039: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000003D: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000041: 74 08              je          000000000000004B
  0000000000000043: 48 8B 43 58        mov         rax,qword ptr [rbx+58h]
  0000000000000047: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000049: EB 02              jmp         000000000000004D
  000000000000004B: 33 C9              xor         ecx,ecx
  000000000000004D: 45 8B C1           mov         r8d,r9d
  0000000000000050: 85 C9              test        ecx,ecx
  0000000000000052: 7E 19              jle         000000000000006D
  0000000000000054: 48 8B 43 58        mov         rax,qword ptr [rbx+58h]
  0000000000000058: FF 08              dec         dword ptr [rax]
  000000000000005A: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  000000000000005E: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000061: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000065: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000068: 44 88 0A           mov         byte ptr [rdx],r9b
  000000000000006B: EB 0F              jmp         000000000000007C
  000000000000006D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000070: 41 8B D1           mov         edx,r9d
  0000000000000073: 48 8B CB           mov         rcx,rbx
  0000000000000076: FF 50 18           call        qword ptr [rax+18h]
  0000000000000079: 44 8B C0           mov         r8d,eax
  000000000000007C: 41 83 F8 FF        cmp         r8d,0FFFFFFFFh
  0000000000000080: 75 03              jne         0000000000000085
  0000000000000082: C6 06 01           mov         byte ptr [rsi],1
  0000000000000085: 49 FF C6           inc         r14
  0000000000000088: 48 83 EF 01        sub         rdi,1
  000000000000008C: 75 A2              jne         0000000000000030
  000000000000008E: 0F 10 06           movups      xmm0,xmmword ptr [rsi]
  0000000000000091: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000096: 48 8B C5           mov         rax,rbp
  0000000000000099: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000009E: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  00000000000000A3: F3 0F 7F 45 00     movdqu      xmmword ptr [rbp],xmm0
  00000000000000A8: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  00000000000000AD: 48 83 C4 20        add         rsp,20h
  00000000000000B1: 41 5E              pop         r14
  00000000000000B3: C3                 ret

?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z (private: class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::_Rep(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,char,unsigned __int64)const ):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 56              push        r14
  0000000000000015: 48 83 EC 20        sub         rsp,20h
  0000000000000019: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  000000000000001E: 49 8B F8           mov         rdi,r8
  0000000000000021: 45 0F B6 F1        movzx       r14d,r9b
  0000000000000025: 48 8B F2           mov         rsi,rdx
  0000000000000028: 48 85 ED           test        rbp,rbp
  000000000000002B: 74 5B              je          0000000000000088
  000000000000002D: 49 8B 58 08        mov         rbx,qword ptr [r8+8]
  0000000000000031: 48 85 DB           test        rbx,rbx
  0000000000000034: 74 49              je          000000000000007F
  0000000000000036: 48 8B 43 40        mov         rax,qword ptr [rbx+40h]
  000000000000003A: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000003E: 74 08              je          0000000000000048
  0000000000000040: 48 8B 43 58        mov         rax,qword ptr [rbx+58h]
  0000000000000044: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000046: EB 02              jmp         000000000000004A
  0000000000000048: 33 C9              xor         ecx,ecx
  000000000000004A: 45 8B C6           mov         r8d,r14d
  000000000000004D: 85 C9              test        ecx,ecx
  000000000000004F: 7E 19              jle         000000000000006A
  0000000000000051: 48 8B 43 58        mov         rax,qword ptr [rbx+58h]
  0000000000000055: FF 08              dec         dword ptr [rax]
  0000000000000057: 48 8B 4B 40        mov         rcx,qword ptr [rbx+40h]
  000000000000005B: 48 8B 11           mov         rdx,qword ptr [rcx]
  000000000000005E: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000062: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000065: 44 88 32           mov         byte ptr [rdx],r14b
  0000000000000068: EB 0F              jmp         0000000000000079
  000000000000006A: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000006D: 41 8B D6           mov         edx,r14d
  0000000000000070: 48 8B CB           mov         rcx,rbx
  0000000000000073: FF 50 18           call        qword ptr [rax+18h]
  0000000000000076: 44 8B C0           mov         r8d,eax
  0000000000000079: 41 83 F8 FF        cmp         r8d,0FFFFFFFFh
  000000000000007D: 75 03              jne         0000000000000082
  000000000000007F: C6 07 01           mov         byte ptr [rdi],1
  0000000000000082: 48 83 ED 01        sub         rbp,1
  0000000000000086: 75 A9              jne         0000000000000031
  0000000000000088: 0F 10 07           movups      xmm0,xmmword ptr [rdi]
  000000000000008B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000090: 48 8B C6           mov         rax,rsi
  0000000000000093: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  0000000000000098: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  000000000000009D: F3 0F 7F 06        movdqu      xmmword ptr [rsi],xmm0
  00000000000000A1: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  00000000000000A6: 48 83 C4 20        add         rsp,20h
  00000000000000AA: 41 5E              pop         r14
  00000000000000AC: C3                 ret

?_Throw_bad_array_new_length@std@@YAXXZ (void __cdecl std::_Throw_bad_array_new_length(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_array_new_length@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI3?AVbad_array_new_length@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Throw_bad_cast@std@@YAXXZ (void __cdecl std::_Throw_bad_cast(void)):
  0000000000000000: 48 83 EC 48        sub         rsp,48h
  0000000000000004: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000009: E8 00 00 00 00     call        ??0bad_cast@std@@QEAA@XZ
  000000000000000E: 48 8D 15 00 00 00  lea         rdx,[_TI2?AVbad_cast@std@@]
                    00
  0000000000000015: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000001A: E8 00 00 00 00     call        _CxxThrowException
  000000000000001F: CC                 int         3

?_Unlock@?$basic_filebuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::_Unlock(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  000000000000000B: 48 85 C9           test        rcx,rcx
  000000000000000E: 74 05              je          0000000000000015
  0000000000000010: E8 00 00 00 00     call        _unlock_file
  0000000000000015: 48 83 C4 28        add         rsp,28h
  0000000000000019: C3                 ret

?_Unlock@?$basic_streambuf@DU?$char_traits@D@std@@@std@@UEAAXXZ (public: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::_Unlock(void)):
  0000000000000000: C2 00 00           ret         0

?_Xlen_string@std@@YAXXZ (void __cdecl std::_Xlen_string(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BA@JFNIOLAK@string?5too?5long@]
                    00
  000000000000000B: E8 00 00 00 00     call        ?_Xlength_error@std@@YAXPEBD@Z
  0000000000000010: CC                 int         3

?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ (public: static void __cdecl std::_String_val<struct std::_Simple_types<char> >::_Xran(void)):
  0000000000000000: 48 83 EC 28        sub         rsp,28h
  0000000000000004: 48 8D 0D 00 00 00  lea         rcx,[??_C@_0BI@CFPLBAOH@invalid?5string?5position@]
                    00
  000000000000000B: E8 00 00 00 00     call        ?_Xout_of_range@std@@YAXPEBD@Z
  0000000000000010: CC                 int         3

?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z (void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 57              push        r15
  000000000000000E: 48 8D 6C 24 90     lea         rbp,[rsp-70h]
  0000000000000013: 48 81 EC 70 01 00  sub         rsp,170h
                    00
  000000000000001A: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000021: 48 33 C4           xor         rax,rsp
  0000000000000024: 48 89 45 60        mov         qword ptr [rbp+60h],rax
  0000000000000028: 48 8B FA           mov         rdi,rdx
  000000000000002B: 48 8B D9           mov         rbx,rcx
  000000000000002E: 48 8B D1           mov         rdx,rcx
  0000000000000031: 41 BF 0F 00 00 00  mov         r15d,0Fh
  0000000000000037: 4C 39 79 18        cmp         qword ptr [rcx+18h],r15
  000000000000003B: 76 03              jbe         0000000000000040
  000000000000003D: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000040: C7 44 24 20 01 00  mov         dword ptr [rsp+20h],1
                    00 00
  0000000000000048: 41 B9 40 00 00 00  mov         r9d,40h
  000000000000004E: 45 8D 41 C1        lea         r8d,[r9-3Fh]
  0000000000000052: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000057: E8 00 00 00 00     call        ??0?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAA@PEBDHH@Z
  000000000000005C: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000061: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000065: 48 8D 05 00 00 00  lea         rax,[??_7?$basic_ifstream@DU?$char_traits@D@std@@@std@@6B@]
                    00
  000000000000006C: 48 89 44 0C 30     mov         qword ptr [rsp+rcx+30h],rax
  0000000000000071: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000076: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000007A: 8D 91 50 FF FF FF  lea         edx,[rcx-0B0h]
  0000000000000080: 89 54 0C 2C        mov         dword ptr [rsp+rcx+2Ch],edx
  0000000000000084: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000089: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  000000000000008D: F6 44 0C 40 06     test        byte ptr [rsp+rcx+40h],6
  0000000000000092: 74 38              je          00000000000000CC
  0000000000000094: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BP@CLEANGEK@Failed?5to?5open?5assembly?5file?3?5@]
                    00
  000000000000009B: 48 8D 0D 00 00 00  lea         rcx,[?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000000A2: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000000A7: 4C 8B 43 10        mov         r8,qword ptr [rbx+10h]
  00000000000000AB: 4C 39 7B 18        cmp         qword ptr [rbx+18h],r15
  00000000000000AF: 76 03              jbe         00000000000000B4
  00000000000000B1: 48 8B 1B           mov         rbx,qword ptr [rbx]
  00000000000000B4: 48 8B D3           mov         rdx,rbx
  00000000000000B7: 48 8B C8           mov         rcx,rax
  00000000000000BA: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000000BF: 48 8B C8           mov         rcx,rax
  00000000000000C2: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000000C7: E9 F7 01 00 00     jmp         00000000000002C3
  00000000000000CC: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000CF: 0F 11 45 40        movups      xmmword ptr [rbp+40h],xmm0
  00000000000000D3: 48 C7 45 50 00 00  mov         qword ptr [rbp+50h],0
                    00 00
  00000000000000DB: 4C 89 7D 58        mov         qword ptr [rbp+58h],r15
  00000000000000DF: C6 45 40 00        mov         byte ptr [rbp+40h],0
  00000000000000E3: 32 DB              xor         bl,bl
  00000000000000E5: 33 F6              xor         esi,esi
  00000000000000E7: E9 F9 00 00 00     jmp         00000000000001E5
  00000000000000EC: 84 DB              test        bl,bl
  00000000000000EE: 75 62              jne         0000000000000152
  00000000000000F0: 45 33 C0           xor         r8d,r8d
  00000000000000F3: 48 8B D7           mov         rdx,rdi
  00000000000000F6: 48 8D 4D 40        lea         rcx,[rbp+40h]
  00000000000000FA: E8 00 00 00 00     call        ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z
  00000000000000FF: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000103: 0F 84 DC 00 00 00  je          00000000000001E5
  0000000000000109: B3 01              mov         bl,1
  000000000000010B: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BD@ONCPFNCC@?6?9?9?9?5Assembly?5for?5@]
                    00
  0000000000000112: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000119: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000011E: 48 8B D7           mov         rdx,rdi
  0000000000000121: 4C 39 7F 18        cmp         qword ptr [rdi+18h],r15
  0000000000000125: 76 03              jbe         000000000000012A
  0000000000000127: 48 8B 17           mov         rdx,qword ptr [rdi]
  000000000000012A: 4C 8B 47 10        mov         r8,qword ptr [rdi+10h]
  000000000000012E: 48 8B C8           mov         rcx,rax
  0000000000000131: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  0000000000000136: 48 8D 15 00 00 00  lea         rdx,[??_C@_06DNEENEDP@?$CI?$CJ?5?9?9?9@]
                    00
  000000000000013D: 48 8B C8           mov         rcx,rax
  0000000000000140: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000145: 48 8B C8           mov         rcx,rax
  0000000000000148: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  000000000000014D: E9 93 00 00 00     jmp         00000000000001E5
  0000000000000152: 48 83 7D 50 00     cmp         qword ptr [rbp+50h],0
  0000000000000157: 0F 84 A8 00 00 00  je          0000000000000205
  000000000000015D: 45 33 C0           xor         r8d,r8d
  0000000000000160: 48 8D 15 00 00 00  lea         rdx,[??_C@_04BPCNIIJN@ENDP@]
                    00
  0000000000000167: 48 8D 4D 40        lea         rcx,[rbp+40h]
  000000000000016B: E8 00 00 00 00     call        ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
  0000000000000170: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000174: 0F 85 8B 00 00 00  jne         0000000000000205
  000000000000017A: 45 33 C0           xor         r8d,r8d
  000000000000017D: 48 8D 15 00 00 00  lea         rdx,[??_C@_0N@DLPPFFCM@?4cfi_endproc@]
                    00
  0000000000000184: 48 8D 4D 40        lea         rcx,[rbp+40h]
  0000000000000188: E8 00 00 00 00     call        ?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z
  000000000000018D: 48 83 F8 FF        cmp         rax,0FFFFFFFFFFFFFFFFh
  0000000000000191: 75 72              jne         0000000000000205
  0000000000000193: 4C 8B 45 50        mov         r8,qword ptr [rbp+50h]
  0000000000000197: 4D 85 C0           test        r8,r8
  000000000000019A: 74 49              je          00000000000001E5
  000000000000019C: 48 8D 45 40        lea         rax,[rbp+40h]
  00000000000001A0: 48 8B 4D 40        mov         rcx,qword ptr [rbp+40h]
  00000000000001A4: 4C 8B 4D 58        mov         r9,qword ptr [rbp+58h]
  00000000000001A8: 4D 3B CF           cmp         r9,r15
  00000000000001AB: 48 0F 47 C1        cmova       rax,rcx
  00000000000001AF: 80 38 09           cmp         byte ptr [rax],9
  00000000000001B2: 74 10              je          00000000000001C4
  00000000000001B4: 48 8D 45 40        lea         rax,[rbp+40h]
  00000000000001B8: 4D 3B CF           cmp         r9,r15
  00000000000001BB: 48 0F 47 C1        cmova       rax,rcx
  00000000000001BF: 80 38 20           cmp         byte ptr [rax],20h
  00000000000001C2: 75 21              jne         00000000000001E5
  00000000000001C4: 48 8D 55 40        lea         rdx,[rbp+40h]
  00000000000001C8: 4D 3B CF           cmp         r9,r15
  00000000000001CB: 48 0F 47 D1        cmova       rdx,rcx
  00000000000001CF: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  00000000000001D6: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000001DB: 48 8B C8           mov         rcx,rax
  00000000000001DE: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000001E3: FF C6              inc         esi
  00000000000001E5: 48 8D 55 40        lea         rdx,[rbp+40h]
  00000000000001E9: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000001EE: E8 00 00 00 00     call        ??$getline@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@YAAEAV?$basic_istream@DU?$char_traits@D@std@@@0@AEAV10@AEAV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@@Z
  00000000000001F3: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000001F6: 48 63 51 04        movsxd      rdx,dword ptr [rcx+4]
  00000000000001FA: F6 44 02 10 06     test        byte ptr [rdx+rax+10h],6
  00000000000001FF: 0F 84 E7 FE FF FF  je          00000000000000EC
  0000000000000205: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  000000000000020A: E8 00 00 00 00     call        ?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  000000000000020F: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BJ@GBOBHEAK@?9?9?9?5End?5of?5Assembly?5?9?9?9?6@]
                    00
  0000000000000216: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000021D: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000222: 48 8B C8           mov         rcx,rax
  0000000000000225: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  000000000000022A: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_GREEN@Color@@3PEBDEB]
                    00
  0000000000000231: 48 8D 0D 00 00 00  lea         rcx,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  0000000000000238: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000023D: 48 8B C8           mov         rcx,rax
  0000000000000240: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@GAEEPCAL@Assembly?5Lines?3?5?5?5?5?5@]
                    00
  0000000000000247: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000024C: 8B D6              mov         edx,esi
  000000000000024E: 48 8B C8           mov         rcx,rax
  0000000000000251: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@H@Z
  0000000000000256: 48 8B C8           mov         rcx,rax
  0000000000000259: 48 8D 15 00 00 00  lea         rdx,[??_C@_0O@JCHDNDCO@?5instructions@]
                    00
  0000000000000260: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000265: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  000000000000026C: 48 8B C8           mov         rcx,rax
  000000000000026F: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000274: 48 8B C8           mov         rcx,rax
  0000000000000277: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  000000000000027C: 90                 nop
  000000000000027D: 48 8B 55 58        mov         rdx,qword ptr [rbp+58h]
  0000000000000281: 49 3B D7           cmp         rdx,r15
  0000000000000284: 76 2D              jbe         00000000000002B3
  0000000000000286: 48 FF C2           inc         rdx
  0000000000000289: 48 8B 4D 40        mov         rcx,qword ptr [rbp+40h]
  000000000000028D: 48 8B C1           mov         rax,rcx
  0000000000000290: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  0000000000000297: 72 15              jb          00000000000002AE
  0000000000000299: 48 83 C2 27        add         rdx,27h
  000000000000029D: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000002A1: 48 2B C1           sub         rax,rcx
  00000000000002A4: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000002A8: 48 83 F8 1F        cmp         rax,1Fh
  00000000000002AC: 77 58              ja          0000000000000306
  00000000000002AE: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000002B3: 48 C7 45 50 00 00  mov         qword ptr [rbp+50h],0
                    00 00
  00000000000002BB: 4C 89 7D 58        mov         qword ptr [rbp+58h],r15
  00000000000002BF: C6 45 40 00        mov         byte ptr [rbp+40h],0
  00000000000002C3: 48 8D 4D E0        lea         rcx,[rbp-20h]
  00000000000002C7: E8 00 00 00 00     call        ??1?$basic_ifstream@DU?$char_traits@D@std@@@std@@UEAA@XZ
  00000000000002CC: 90                 nop
  00000000000002CD: 48 8D 05 00 00 00  lea         rax,[??_7ios_base@std@@6B@]
                    00
  00000000000002D4: 48 89 45 E0        mov         qword ptr [rbp-20h],rax
  00000000000002D8: 48 8D 4D E0        lea         rcx,[rbp-20h]
  00000000000002DC: E8 00 00 00 00     call        ?_Ios_base_dtor@ios_base@std@@CAXPEAV12@@Z
  00000000000002E1: 90                 nop
  00000000000002E2: 48 8B 4D 60        mov         rcx,qword ptr [rbp+60h]
  00000000000002E6: 48 33 CC           xor         rcx,rsp
  00000000000002E9: E8 00 00 00 00     call        __security_check_cookie
  00000000000002EE: 4C 8D 9C 24 70 01  lea         r11,[rsp+170h]
                    00 00
  00000000000002F6: 49 8B 5B 30        mov         rbx,qword ptr [r11+30h]
  00000000000002FA: 49 8B 73 38        mov         rsi,qword ptr [r11+38h]
  00000000000002FE: 49 8B E3           mov         rsp,r11
  0000000000000301: 41 5F              pop         r15
  0000000000000303: 5F                 pop         rdi
  0000000000000304: 5D                 pop         rbp
  0000000000000305: C3                 ret
  0000000000000306: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000030B: 90                 nop

?dtor$0@?0??analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA (int `void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??_D?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ

?dtor$1@?0??analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z@4HA (int `void __cdecl analyze_disassembly(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &)'::`1'::dtor$1):
  0000000000000000: 48 8D 8A 40 01 00  lea         rcx,[rdx+140h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@QEBD_K@Z (public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(char const * const,unsigned __int64)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 30        sub         rsp,30h
  000000000000000F: 48 8B F9           mov         rdi,rcx
  0000000000000012: 49 8B F0           mov         rsi,r8
  0000000000000015: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000019: 48 8B 47 18        mov         rax,qword ptr [rdi+18h]
  000000000000001D: 48 2B C1           sub         rax,rcx
  0000000000000020: 4C 3B C0           cmp         r8,rax
  0000000000000023: 77 2A              ja          000000000000004F
  0000000000000025: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  000000000000002A: 4A 8D 04 01        lea         rax,[rcx+r8]
  000000000000002E: 48 89 47 10        mov         qword ptr [rdi+10h],rax
  0000000000000032: 48 8B C7           mov         rax,rdi
  0000000000000035: 76 03              jbe         000000000000003A
  0000000000000037: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000003A: 48 8D 1C 08        lea         rbx,[rax+rcx]
  000000000000003E: 48 8B CB           mov         rcx,rbx
  0000000000000041: E8 00 00 00 00     call        memmove
  0000000000000046: 48 8B C7           mov         rax,rdi
  0000000000000049: C6 04 33 00        mov         byte ptr [rbx+rsi],0
  000000000000004D: EB 18              jmp         0000000000000067
  000000000000004F: 44 8A 44 24 40     mov         r8b,byte ptr [rsp+40h]
  0000000000000054: 4C 8B CA           mov         r9,rdx
  0000000000000057: 48 8B D6           mov         rdx,rsi
  000000000000005A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000005F: 48 8B CF           mov         rcx,rdi
  0000000000000062: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@QEBD_K@Z@PEBD_K@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@QEBD0@Z@PEBD_K@Z
  0000000000000067: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  000000000000006C: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000071: 48 83 C4 30        add         rsp,30h
  0000000000000075: 5F                 pop         rdi
  0000000000000076: C3                 ret

?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z (public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append(unsigned __int64,char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 30        sub         rsp,30h
  000000000000000F: 48 8B F9           mov         rdi,rcx
  0000000000000012: 48 8B F2           mov         rsi,rdx
  0000000000000015: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000019: 48 8B 47 18        mov         rax,qword ptr [rdi+18h]
  000000000000001D: 48 2B C1           sub         rax,rcx
  0000000000000020: 48 3B D0           cmp         rdx,rax
  0000000000000023: 77 31              ja          0000000000000056
  0000000000000025: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  000000000000002A: 48 8D 04 11        lea         rax,[rcx+rdx]
  000000000000002E: 48 89 47 10        mov         qword ptr [rdi+10h],rax
  0000000000000032: 48 8B C7           mov         rax,rdi
  0000000000000035: 76 03              jbe         000000000000003A
  0000000000000037: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000003A: 48 8D 1C 08        lea         rbx,[rax+rcx]
  000000000000003E: 41 0F BE D0        movsx       edx,r8b
  0000000000000042: 48 8B CB           mov         rcx,rbx
  0000000000000045: 4C 8B C6           mov         r8,rsi
  0000000000000048: E8 00 00 00 00     call        memset
  000000000000004D: 48 8B C7           mov         rax,rdi
  0000000000000050: C6 04 33 00        mov         byte ptr [rbx+rsi],0
  0000000000000054: EB 15              jmp         000000000000006B
  0000000000000056: 44 88 44 24 20     mov         byte ptr [rsp+20h],r8b
  000000000000005B: 4C 8B CE           mov         r9,rsi
  000000000000005E: 44 8A 44 24 40     mov         r8b,byte ptr [rsp+40h]
  0000000000000063: 48 8B CF           mov         rcx,rdi
  0000000000000066: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_KD@Z@_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??append@01@QEAAAEAV01@0D@Z@_KD@Z
  000000000000006B: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000070: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  0000000000000075: 48 83 C4 30        add         rsp,30h
  0000000000000079: 5F                 pop         rdi
  000000000000007A: C3                 ret

?clear@ios_base@std@@QEAAXH@Z (public: void __cdecl std::ios_base::clear(int)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 83 E2 17           and         edx,17h
  0000000000000009: 89 51 10           mov         dword ptr [rcx+10h],edx
  000000000000000C: 23 51 14           and         edx,dword ptr [rcx+14h]
  000000000000000F: 75 06              jne         0000000000000017
  0000000000000011: 48 83 C4 60        add         rsp,60h
  0000000000000015: 5B                 pop         rbx
  0000000000000016: C3                 ret
  0000000000000017: F6 C2 04           test        dl,4
  000000000000001A: 74 09              je          0000000000000025
  000000000000001C: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000023: EB 15              jmp         000000000000003A
  0000000000000025: F6 C2 02           test        dl,2
  0000000000000028: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000002F: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000036: 48 0F 44 D8        cmove       rbx,rax
  000000000000003A: BA 01 00 00 00     mov         edx,1
  000000000000003F: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000044: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000049: 4C 8B C0           mov         r8,rax
  000000000000004C: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000051: 48 8B D3           mov         rdx,rbx
  0000000000000054: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000059: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000060: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000065: E8 00 00 00 00     call        _CxxThrowException
  000000000000006A: CC                 int         3

?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ (public: class std::basic_filebuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::close(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 33 F6              xor         esi,esi
  0000000000000011: 48 8B F9           mov         rdi,rcx
  0000000000000014: 48 39 B1 80 00 00  cmp         qword ptr [rcx+80h],rsi
                    00
  000000000000001B: 74 51              je          000000000000006E
  000000000000001D: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  0000000000000021: 48 8D 47 70        lea         rax,[rdi+70h]
  0000000000000025: 48 39 01           cmp         qword ptr [rcx],rax
  0000000000000028: 75 22              jne         000000000000004C
  000000000000002A: 48 8B 97 88 00 00  mov         rdx,qword ptr [rdi+88h]
                    00
  0000000000000031: 4C 8B 87 90 00 00  mov         r8,qword ptr [rdi+90h]
                    00
  0000000000000038: 48 89 11           mov         qword ptr [rcx],rdx
  000000000000003B: 44 2B C2           sub         r8d,edx
  000000000000003E: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000042: 48 89 10           mov         qword ptr [rax],rdx
  0000000000000045: 48 8B 47 50        mov         rax,qword ptr [rdi+50h]
  0000000000000049: 44 89 00           mov         dword ptr [rax],r8d
  000000000000004C: 48 8B CF           mov         rcx,rdi
  000000000000004F: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  0000000000000054: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000005B: F6 D8              neg         al
  000000000000005D: 48 1B DB           sbb         rbx,rbx
  0000000000000060: 48 23 DF           and         rbx,rdi
  0000000000000063: E8 00 00 00 00     call        fclose
  0000000000000068: 85 C0              test        eax,eax
  000000000000006A: 48 0F 44 F3        cmove       rsi,rbx
  000000000000006E: 33 D2              xor         edx,edx
  0000000000000070: 48 8B CF           mov         rcx,rdi
  0000000000000073: 44 8D 42 02        lea         r8d,[rdx+2]
  0000000000000077: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  000000000000007C: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000081: 48 8B C6           mov         rax,rsi
  0000000000000084: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000089: 48 83 C4 20        add         rsp,20h
  000000000000008D: 5F                 pop         rdi
  000000000000008E: C3                 ret

?close@?$basic_ifstream@DU?$char_traits@D@std@@@std@@QEAAXXZ (public: void __cdecl std::basic_ifstream<char,struct std::char_traits<char> >::close(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 60        sub         rsp,60h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 83 C1 10        add         rcx,10h
  000000000000000D: E8 00 00 00 00     call        ?close@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@XZ
  0000000000000012: 48 85 C0           test        rax,rax
  0000000000000015: 75 29              jne         0000000000000040
  0000000000000017: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000001A: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  000000000000001E: 48 03 D3           add         rdx,rbx
  0000000000000021: 48 8B 42 48        mov         rax,qword ptr [rdx+48h]
  0000000000000025: 48 F7 D8           neg         rax
  0000000000000028: 1B C9              sbb         ecx,ecx
  000000000000002A: F7 D1              not         ecx
  000000000000002C: 83 E1 04           and         ecx,4
  000000000000002F: 0B 4A 10           or          ecx,dword ptr [rdx+10h]
  0000000000000032: 83 E1 15           and         ecx,15h
  0000000000000035: 83 C9 02           or          ecx,2
  0000000000000038: 89 4A 10           mov         dword ptr [rdx+10h],ecx
  000000000000003B: 23 4A 14           and         ecx,dword ptr [rdx+14h]
  000000000000003E: 75 06              jne         0000000000000046
  0000000000000040: 48 83 C4 60        add         rsp,60h
  0000000000000044: 5B                 pop         rbx
  0000000000000045: C3                 ret
  0000000000000046: F6 C1 04           test        cl,4
  0000000000000049: 74 09              je          0000000000000054
  000000000000004B: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000052: EB 15              jmp         0000000000000069
  0000000000000054: F6 C1 02           test        cl,2
  0000000000000057: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  000000000000005E: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000065: 48 0F 44 D8        cmove       rbx,rax
  0000000000000069: BA 01 00 00 00     mov         edx,1
  000000000000006E: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000073: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  0000000000000078: 4C 8B C0           mov         r8,rax
  000000000000007B: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000080: 48 8B D3           mov         rdx,rbx
  0000000000000083: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  0000000000000088: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  000000000000008F: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000094: E8 00 00 00 00     call        _CxxThrowException
  0000000000000099: CC                 int         3

?default_error_condition@error_category@std@@UEBA?AVerror_condition@2@H@Z (public: virtual class std::error_condition __cdecl std::error_category::default_error_condition(int)const ):
  0000000000000000: 44 89 02           mov         dword ptr [rdx],r8d
  0000000000000003: 48 8B C2           mov         rax,rdx
  0000000000000006: 48 89 4A 08        mov         qword ptr [rdx+8],rcx
  000000000000000A: C3                 ret

?do_always_noconv@?$codecvt@DDU_Mbstatet@@@std@@MEBA_NXZ (protected: virtual bool __cdecl std::codecvt<char,char,struct _Mbstatet>::do_always_noconv(void)const ):
  0000000000000000: B0 01              mov         al,1
  0000000000000002: C3                 ret

?do_always_noconv@codecvt_base@std@@MEBA_NXZ (protected: virtual bool __cdecl std::codecvt_base::do_always_noconv(void)const ):
  0000000000000000: 32 C0              xor         al,al
  0000000000000002: C3                 ret

?do_decimal_point@?$numpunct@D@std@@MEBADXZ (protected: virtual char __cdecl std::numpunct<char>::do_decimal_point(void)const ):
  0000000000000000: 8A 41 18           mov         al,byte ptr [rcx+18h]
  0000000000000003: C3                 ret

?do_encoding@codecvt_base@std@@MEBAHXZ (protected: virtual int __cdecl std::codecvt_base::do_encoding(void)const ):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?do_falsename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_falsename(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 20        mov         rdx,qword ptr [rcx+20h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  0000000000000016: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000019: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  000000000000001D: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000021: 49 FF C0           inc         r8
  0000000000000024: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  0000000000000028: 75 F7              jne         0000000000000021
  000000000000002A: 48 8B CB           mov         rcx,rbx
  000000000000002D: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000032: 48 8B C3           mov         rax,rbx
  0000000000000035: 48 83 C4 30        add         rsp,30h
  0000000000000039: 5B                 pop         rbx
  000000000000003A: C3                 ret

?do_grouping@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_grouping(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 10        mov         rdx,qword ptr [rcx+10h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  0000000000000016: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000019: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  000000000000001D: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000021: 49 FF C0           inc         r8
  0000000000000024: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  0000000000000028: 75 F7              jne         0000000000000021
  000000000000002A: 48 8B CB           mov         rcx,rbx
  000000000000002D: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000032: 48 8B C3           mov         rax,rbx
  0000000000000035: 48 83 C4 30        add         rsp,30h
  0000000000000039: 5B                 pop         rbx
  000000000000003A: C3                 ret

?do_in@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_in(struct _Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  000000000000000A: 4C 89 00           mov         qword ptr [rax],r8
  000000000000000D: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000012: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000015: B8 03 00 00 00     mov         eax,3
  000000000000001A: C3                 ret

?do_length@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1_K@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_length(struct _Mbstatet &,char const *,char const *,unsigned __int64)const ):
  0000000000000000: 4D 2B C8           sub         r9,r8
  0000000000000003: B8 FF FF FF 7F     mov         eax,7FFFFFFFh
  0000000000000008: 4C 3B C8           cmp         r9,rax
  000000000000000B: 4C 0F 4F C8        cmovg       r9,rax
  000000000000000F: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000014: 4C 3B C8           cmp         r9,rax
  0000000000000017: 41 0F 42 C1        cmovb       eax,r9d
  000000000000001B: C3                 ret

?do_max_length@codecvt_base@std@@MEBAHXZ (protected: virtual int __cdecl std::codecvt_base::do_max_length(void)const ):
  0000000000000000: B8 01 00 00 00     mov         eax,1
  0000000000000005: C3                 ret

?do_narrow@?$ctype@D@std@@MEBADDD@Z (protected: virtual char __cdecl std::ctype<char>::do_narrow(char,char)const ):
  0000000000000000: 8A C2              mov         al,dl
  0000000000000002: C3                 ret

?do_narrow@?$ctype@D@std@@MEBAPEBDPEBD0DPEAD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_narrow(char const *,char const *,char,char *)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  000000000000000B: 49 8B D8           mov         rbx,r8
  000000000000000E: 4C 2B C2           sub         r8,rdx
  0000000000000011: E8 00 00 00 00     call        memcpy
  0000000000000016: 48 8B C3           mov         rax,rbx
  0000000000000019: 48 83 C4 20        add         rsp,20h
  000000000000001D: 5B                 pop         rbx
  000000000000001E: C3                 ret

?do_out@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEBD1AEAPEBDPEAD3AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_out(struct _Mbstatet &,char const *,char const *,char const * &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  000000000000000A: 4C 89 00           mov         qword ptr [rax],r8
  000000000000000D: 48 8B 44 24 30     mov         rax,qword ptr [rsp+30h]
  0000000000000012: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000015: B8 03 00 00 00     mov         eax,3
  000000000000001A: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DJ@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,long)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 48 81 EC B8 00 00  sub         rsp,0B8h
                    00
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  000000000000001E: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000022: 48 8B FA           mov         rdi,rdx
  0000000000000025: 8B D0              mov         edx,eax
  0000000000000027: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  000000000000002C: 49 8B D9           mov         rbx,r9
  000000000000002F: 49 8B E8           mov         rbp,r8
  0000000000000032: 48 8B F1           mov         rsi,rcx
  0000000000000035: 83 E2 20           and         edx,20h
  0000000000000038: 74 05              je          000000000000003F
  000000000000003A: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  000000000000003F: 85 D2              test        edx,edx
  0000000000000041: 48 8D 4C 24 51     lea         rcx,[rsp+51h]
  0000000000000046: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004B: 49 0F 45 C8        cmovne      rcx,r8
  000000000000004F: A8 08              test        al,8
  0000000000000051: 74 06              je          0000000000000059
  0000000000000053: C6 01 23           mov         byte ptr [rcx],23h
  0000000000000056: 48 FF C1           inc         rcx
  0000000000000059: 8B D0              mov         edx,eax
  000000000000005B: C6 01 6C           mov         byte ptr [rcx],6Ch
  000000000000005E: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000064: 81 FA 00 04 00 00  cmp         edx,400h
  000000000000006A: 75 04              jne         0000000000000070
  000000000000006C: B0 6F              mov         al,6Fh
  000000000000006E: EB 15              jmp         0000000000000085
  0000000000000070: 81 FA 00 08 00 00  cmp         edx,800h
  0000000000000076: 74 04              je          000000000000007C
  0000000000000078: B0 64              mov         al,64h
  000000000000007A: EB 09              jmp         0000000000000085
  000000000000007C: C0 E0 03           shl         al,3
  000000000000007F: F6 D0              not         al
  0000000000000081: 24 20              and         al,20h
  0000000000000083: 0C 58              or          al,58h
  0000000000000085: 44 8B 8C 24 08 01  mov         r9d,dword ptr [rsp+108h]
                    00 00
  000000000000008D: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000092: 88 41 01           mov         byte ptr [rcx+1],al
  0000000000000095: BA 40 00 00 00     mov         edx,40h
  000000000000009A: C6 41 02 00        mov         byte ptr [rcx+2],0
  000000000000009E: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A3: E8 00 00 00 00     call        sprintf_s
  00000000000000A8: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000AC: 48 63 D0           movsxd      rdx,eax
  00000000000000AF: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000B4: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  00000000000000B9: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000BE: 8A 94 24 00 01 00  mov         dl,byte ptr [rsp+100h]
                    00
  00000000000000C5: 4C 8B CB           mov         r9,rbx
  00000000000000C8: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000CD: 48 8B CE           mov         rcx,rsi
  00000000000000D0: 88 54 24 20        mov         byte ptr [rsp+20h],dl
  00000000000000D4: 48 8B D7           mov         rdx,rdi
  00000000000000D7: F3 0F 7F 44 24 40  movdqu      xmmword ptr [rsp+40h],xmm0
  00000000000000DD: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000E2: 48 8B C7           mov         rax,rdi
  00000000000000E5: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000ED: 48 33 CC           xor         rcx,rsp
  00000000000000F0: E8 00 00 00 00     call        __security_check_cookie
  00000000000000F5: 48 81 C4 B8 00 00  add         rsp,0B8h
                    00
  00000000000000FC: 5F                 pop         rdi
  00000000000000FD: 5E                 pop         rsi
  00000000000000FE: 5D                 pop         rbp
  00000000000000FF: 5B                 pop         rbx
  0000000000000100: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DK@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,unsigned long)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 48 81 EC B8 00 00  sub         rsp,0B8h
                    00
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  000000000000001E: 41 8B 41 18        mov         eax,dword ptr [r9+18h]
  0000000000000022: 48 8B FA           mov         rdi,rdx
  0000000000000025: 8B D0              mov         edx,eax
  0000000000000027: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  000000000000002C: 49 8B D9           mov         rbx,r9
  000000000000002F: 49 8B E8           mov         rbp,r8
  0000000000000032: 48 8B F1           mov         rsi,rcx
  0000000000000035: 83 E2 20           and         edx,20h
  0000000000000038: 74 05              je          000000000000003F
  000000000000003A: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  000000000000003F: 85 D2              test        edx,edx
  0000000000000041: 48 8D 4C 24 51     lea         rcx,[rsp+51h]
  0000000000000046: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004B: 49 0F 45 C8        cmovne      rcx,r8
  000000000000004F: A8 08              test        al,8
  0000000000000051: 74 06              je          0000000000000059
  0000000000000053: C6 01 23           mov         byte ptr [rcx],23h
  0000000000000056: 48 FF C1           inc         rcx
  0000000000000059: 8B D0              mov         edx,eax
  000000000000005B: C6 01 6C           mov         byte ptr [rcx],6Ch
  000000000000005E: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000064: 81 FA 00 04 00 00  cmp         edx,400h
  000000000000006A: 75 04              jne         0000000000000070
  000000000000006C: B0 6F              mov         al,6Fh
  000000000000006E: EB 15              jmp         0000000000000085
  0000000000000070: 81 FA 00 08 00 00  cmp         edx,800h
  0000000000000076: 74 04              je          000000000000007C
  0000000000000078: B0 75              mov         al,75h
  000000000000007A: EB 09              jmp         0000000000000085
  000000000000007C: C0 E0 03           shl         al,3
  000000000000007F: F6 D0              not         al
  0000000000000081: 24 20              and         al,20h
  0000000000000083: 0C 58              or          al,58h
  0000000000000085: 44 8B 8C 24 08 01  mov         r9d,dword ptr [rsp+108h]
                    00 00
  000000000000008D: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  0000000000000092: 88 41 01           mov         byte ptr [rcx+1],al
  0000000000000095: BA 40 00 00 00     mov         edx,40h
  000000000000009A: C6 41 02 00        mov         byte ptr [rcx+2],0
  000000000000009E: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A3: E8 00 00 00 00     call        sprintf_s
  00000000000000A8: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000AC: 48 63 D0           movsxd      rdx,eax
  00000000000000AF: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000B4: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  00000000000000B9: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000BE: 8A 94 24 00 01 00  mov         dl,byte ptr [rsp+100h]
                    00
  00000000000000C5: 4C 8B CB           mov         r9,rbx
  00000000000000C8: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000CD: 48 8B CE           mov         rcx,rsi
  00000000000000D0: 88 54 24 20        mov         byte ptr [rsp+20h],dl
  00000000000000D4: 48 8B D7           mov         rdx,rdi
  00000000000000D7: F3 0F 7F 44 24 40  movdqu      xmmword ptr [rsp+40h],xmm0
  00000000000000DD: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000E2: 48 8B C7           mov         rax,rdi
  00000000000000E5: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000ED: 48 33 CC           xor         rcx,rsp
  00000000000000F0: E8 00 00 00 00     call        __security_check_cookie
  00000000000000F5: 48 81 C4 B8 00 00  add         rsp,0B8h
                    00
  00000000000000FC: 5F                 pop         rdi
  00000000000000FD: 5E                 pop         rsi
  00000000000000FE: 5D                 pop         rbp
  00000000000000FF: 5B                 pop         rbx
  0000000000000100: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,double)const ):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 55                 push        rbp
  0000000000000004: 53                 push        rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 57                 push        rdi
  0000000000000007: 41 54              push        r12
  0000000000000009: 41 55              push        r13
  000000000000000B: 41 56              push        r14
  000000000000000D: 41 57              push        r15
  000000000000000F: 48 8D 68 B1        lea         rbp,[rax-4Fh]
  0000000000000013: 48 81 EC 98 00 00  sub         rsp,98h
                    00
  000000000000001A: 0F 29 70 A8        movaps      xmmword ptr [rax-58h],xmm6
  000000000000001E: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000025: 48 33 C4           xor         rax,rsp
  0000000000000028: 48 89 45 EF        mov         qword ptr [rbp-11h],rax
  000000000000002C: 49 8B F1           mov         rsi,r9
  000000000000002F: 4D 8B E0           mov         r12,r8
  0000000000000032: 4C 8B F2           mov         r14,rdx
  0000000000000035: 4C 8B F9           mov         r15,rcx
  0000000000000038: 0F 57 C0           xorps       xmm0,xmm0
  000000000000003B: 0F 11 45 C7        movups      xmmword ptr [rbp-39h],xmm0
  000000000000003F: 45 33 ED           xor         r13d,r13d
  0000000000000042: 41 8B C5           mov         eax,r13d
  0000000000000045: 48 89 45 D7        mov         qword ptr [rbp-29h],rax
  0000000000000049: 48 C7 45 DF 0F 00  mov         qword ptr [rbp-21h],0Fh
                    00 00
  0000000000000051: 44 88 6D C7        mov         byte ptr [rbp-39h],r13b
  0000000000000055: 41 8B 49 18        mov         ecx,dword ptr [r9+18h]
  0000000000000059: BA 00 30 00 00     mov         edx,3000h
  000000000000005E: 23 CA              and         ecx,edx
  0000000000000060: F2 0F 10 75 7F     movsd       xmm6,mmword ptr [rbp+7Fh]
  0000000000000065: 3B CA              cmp         ecx,edx
  0000000000000067: 75 09              jne         0000000000000072
  0000000000000069: 48 83 CF FF        or          rdi,0FFFFFFFFFFFFFFFFh
  000000000000006D: 8D 5F 0E           lea         ebx,[rdi+0Eh]
  0000000000000070: EB 73              jmp         00000000000000E5
  0000000000000072: 49 8B 79 20        mov         rdi,qword ptr [r9+20h]
  0000000000000076: 48 85 FF           test        rdi,rdi
  0000000000000079: 7E 04              jle         000000000000007F
  000000000000007B: 8B D7              mov         edx,edi
  000000000000007D: EB 15              jmp         0000000000000094
  000000000000007F: 75 0E              jne         000000000000008F
  0000000000000081: 85 C9              test        ecx,ecx
  0000000000000083: 75 05              jne         000000000000008A
  0000000000000085: 8D 59 01           lea         ebx,[rcx+1]
  0000000000000088: EB 5B              jmp         00000000000000E5
  000000000000008A: 41 8B D5           mov         edx,r13d
  000000000000008D: EB 05              jmp         0000000000000094
  000000000000008F: BA 06 00 00 00     mov         edx,6
  0000000000000094: 48 63 DA           movsxd      rbx,edx
  0000000000000097: 81 F9 00 20 00 00  cmp         ecx,2000h
  000000000000009D: 75 46              jne         00000000000000E5
  000000000000009F: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000A2: E8 00 00 00 00     call        fabs
  00000000000000A7: 66 0F 2F 05 00 00  comisd      xmm0,mmword ptr [__real@4202a05f20000000]
                    00 00
  00000000000000AF: 76 30              jbe         00000000000000E1
  00000000000000B1: 48 8D 55 B7        lea         rdx,[rbp-49h]
  00000000000000B5: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000B8: E8 00 00 00 00     call        frexp
  00000000000000BD: 8B 4D B7           mov         ecx,dword ptr [rbp-49h]
  00000000000000C0: E8 00 00 00 00     call        abs
  00000000000000C5: 69 C8 97 75 00 00  imul        ecx,eax,7597h
  00000000000000CB: B8 89 B5 F8 14     mov         eax,14F8B589h
  00000000000000D0: F7 E9              imul        ecx
  00000000000000D2: C1 FA 0D           sar         edx,0Dh
  00000000000000D5: 8B C2              mov         eax,edx
  00000000000000D7: C1 E8 1F           shr         eax,1Fh
  00000000000000DA: 03 C2              add         eax,edx
  00000000000000DC: 48 98              cdqe
  00000000000000DE: 48 03 D8           add         rbx,rax
  00000000000000E1: 48 8B 45 D7        mov         rax,qword ptr [rbp-29h]
  00000000000000E5: 48 8D 53 32        lea         rdx,[rbx+32h]
  00000000000000E9: 48 3B D0           cmp         rdx,rax
  00000000000000EC: 77 18              ja          0000000000000106
  00000000000000EE: 48 89 55 D7        mov         qword ptr [rbp-29h],rdx
  00000000000000F2: 48 8D 45 C7        lea         rax,[rbp-39h]
  00000000000000F6: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000000FB: 48 0F 47 45 C7     cmova       rax,qword ptr [rbp-39h]
  0000000000000100: 44 88 2C 10        mov         byte ptr [rax+rdx],r13b
  0000000000000104: EB 0F              jmp         0000000000000115
  0000000000000106: 48 2B D0           sub         rdx,rax
  0000000000000109: 45 33 C0           xor         r8d,r8d
  000000000000010C: 48 8D 4D C7        lea         rcx,[rbp-39h]
  0000000000000110: E8 00 00 00 00     call        ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
  0000000000000115: F2 0F 11 75 B7     movsd       mmword ptr [rbp-49h],xmm6
  000000000000011A: 48 8D 4D B7        lea         rcx,[rbp-49h]
  000000000000011E: E8 00 00 00 00     call        _dtest
  0000000000000123: 66 85 C0           test        ax,ax
  0000000000000126: 0F 9E C3           setle       bl
  0000000000000129: 44 8B 4E 18        mov         r9d,dword ptr [rsi+18h]
  000000000000012D: 41 8B C9           mov         ecx,r9d
  0000000000000130: 83 E1 EF           and         ecx,0FFFFFFEFh
  0000000000000133: 66 85 C0           test        ax,ax
  0000000000000136: 44 0F 4F C9        cmovg       r9d,ecx
  000000000000013A: 45 33 C0           xor         r8d,r8d
  000000000000013D: 48 8D 55 E7        lea         rdx,[rbp-19h]
  0000000000000141: 49 8B CF           mov         rcx,r15
  0000000000000144: E8 00 00 00 00     call        ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
  0000000000000149: 48 8D 4D C7        lea         rcx,[rbp-39h]
  000000000000014D: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000152: 48 0F 47 4D C7     cmova       rcx,qword ptr [rbp-39h]
  0000000000000157: F2 0F 11 74 24 20  movsd       mmword ptr [rsp+20h],xmm6
  000000000000015D: 44 8B CF           mov         r9d,edi
  0000000000000160: 4C 8B C0           mov         r8,rax
  0000000000000163: 48 8B 55 D7        mov         rdx,qword ptr [rbp-29h]
  0000000000000167: E8 00 00 00 00     call        sprintf_s
  000000000000016C: 48 63 D0           movsxd      rdx,eax
  000000000000016F: 48 8D 45 C7        lea         rax,[rbp-39h]
  0000000000000173: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000178: 48 0F 47 45 C7     cmova       rax,qword ptr [rbp-39h]
  000000000000017D: 41 0F 10 04 24     movups      xmm0,xmmword ptr [r12]
  0000000000000182: F3 0F 7F 45 B7     movdqu      xmmword ptr [rbp-49h],xmm0
  0000000000000187: 88 5C 24 38        mov         byte ptr [rsp+38h],bl
  000000000000018B: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000190: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000195: 8A 45 77           mov         al,byte ptr [rbp+77h]
  0000000000000198: 88 44 24 20        mov         byte ptr [rsp+20h],al
  000000000000019C: 4C 8B CE           mov         r9,rsi
  000000000000019F: 4C 8D 45 B7        lea         r8,[rbp-49h]
  00000000000001A3: 49 8B D6           mov         rdx,r14
  00000000000001A6: 49 8B CF           mov         rcx,r15
  00000000000001A9: E8 00 00 00 00     call        ??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
  00000000000001AE: 90                 nop
  00000000000001AF: 48 8B 55 DF        mov         rdx,qword ptr [rbp-21h]
  00000000000001B3: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000001B7: 76 2D              jbe         00000000000001E6
  00000000000001B9: 48 FF C2           inc         rdx
  00000000000001BC: 48 8B 4D C7        mov         rcx,qword ptr [rbp-39h]
  00000000000001C0: 48 8B C1           mov         rax,rcx
  00000000000001C3: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000001CA: 72 15              jb          00000000000001E1
  00000000000001CC: 48 83 C2 27        add         rdx,27h
  00000000000001D0: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000001D4: 48 2B C1           sub         rax,rcx
  00000000000001D7: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000001DB: 48 83 F8 1F        cmp         rax,1Fh
  00000000000001DF: 77 30              ja          0000000000000211
  00000000000001E1: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000001E6: 49 8B C6           mov         rax,r14
  00000000000001E9: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  00000000000001ED: 48 33 CC           xor         rcx,rsp
  00000000000001F0: E8 00 00 00 00     call        __security_check_cookie
  00000000000001F5: 0F 28 B4 24 80 00  movaps      xmm6,xmmword ptr [rsp+80h]
                    00 00
  00000000000001FD: 48 81 C4 98 00 00  add         rsp,98h
                    00
  0000000000000204: 41 5F              pop         r15
  0000000000000206: 41 5E              pop         r14
  0000000000000208: 41 5D              pop         r13
  000000000000020A: 41 5C              pop         r12
  000000000000020C: 5F                 pop         rdi
  000000000000020D: 5E                 pop         rsi
  000000000000020E: 5B                 pop         rbx
  000000000000020F: 5D                 pop         rbp
  0000000000000210: C3                 ret
  0000000000000211: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000216: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DN@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,double)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,long double)const ):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 55                 push        rbp
  0000000000000004: 53                 push        rbx
  0000000000000005: 56                 push        rsi
  0000000000000006: 57                 push        rdi
  0000000000000007: 41 54              push        r12
  0000000000000009: 41 55              push        r13
  000000000000000B: 41 56              push        r14
  000000000000000D: 41 57              push        r15
  000000000000000F: 48 8D 68 B1        lea         rbp,[rax-4Fh]
  0000000000000013: 48 81 EC 98 00 00  sub         rsp,98h
                    00
  000000000000001A: 0F 29 70 A8        movaps      xmmword ptr [rax-58h],xmm6
  000000000000001E: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000025: 48 33 C4           xor         rax,rsp
  0000000000000028: 48 89 45 EF        mov         qword ptr [rbp-11h],rax
  000000000000002C: 49 8B F1           mov         rsi,r9
  000000000000002F: 4D 8B E0           mov         r12,r8
  0000000000000032: 4C 8B F2           mov         r14,rdx
  0000000000000035: 4C 8B F9           mov         r15,rcx
  0000000000000038: 0F 57 C0           xorps       xmm0,xmm0
  000000000000003B: 0F 11 45 C7        movups      xmmword ptr [rbp-39h],xmm0
  000000000000003F: 45 33 ED           xor         r13d,r13d
  0000000000000042: 41 8B C5           mov         eax,r13d
  0000000000000045: 48 89 45 D7        mov         qword ptr [rbp-29h],rax
  0000000000000049: 48 C7 45 DF 0F 00  mov         qword ptr [rbp-21h],0Fh
                    00 00
  0000000000000051: 44 88 6D C7        mov         byte ptr [rbp-39h],r13b
  0000000000000055: 41 8B 49 18        mov         ecx,dword ptr [r9+18h]
  0000000000000059: BA 00 30 00 00     mov         edx,3000h
  000000000000005E: 23 CA              and         ecx,edx
  0000000000000060: F2 0F 10 75 7F     movsd       xmm6,mmword ptr [rbp+7Fh]
  0000000000000065: 3B CA              cmp         ecx,edx
  0000000000000067: 75 09              jne         0000000000000072
  0000000000000069: 48 83 CF FF        or          rdi,0FFFFFFFFFFFFFFFFh
  000000000000006D: 8D 5F 0E           lea         ebx,[rdi+0Eh]
  0000000000000070: EB 73              jmp         00000000000000E5
  0000000000000072: 49 8B 79 20        mov         rdi,qword ptr [r9+20h]
  0000000000000076: 48 85 FF           test        rdi,rdi
  0000000000000079: 7E 04              jle         000000000000007F
  000000000000007B: 8B D7              mov         edx,edi
  000000000000007D: EB 15              jmp         0000000000000094
  000000000000007F: 75 0E              jne         000000000000008F
  0000000000000081: 85 C9              test        ecx,ecx
  0000000000000083: 75 05              jne         000000000000008A
  0000000000000085: 8D 59 01           lea         ebx,[rcx+1]
  0000000000000088: EB 5B              jmp         00000000000000E5
  000000000000008A: 41 8B D5           mov         edx,r13d
  000000000000008D: EB 05              jmp         0000000000000094
  000000000000008F: BA 06 00 00 00     mov         edx,6
  0000000000000094: 48 63 DA           movsxd      rbx,edx
  0000000000000097: 81 F9 00 20 00 00  cmp         ecx,2000h
  000000000000009D: 75 46              jne         00000000000000E5
  000000000000009F: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000A2: E8 00 00 00 00     call        fabs
  00000000000000A7: 66 0F 2F 05 00 00  comisd      xmm0,mmword ptr [__real@4202a05f20000000]
                    00 00
  00000000000000AF: 76 30              jbe         00000000000000E1
  00000000000000B1: 48 8D 55 B7        lea         rdx,[rbp-49h]
  00000000000000B5: 0F 28 C6           movaps      xmm0,xmm6
  00000000000000B8: E8 00 00 00 00     call        frexp
  00000000000000BD: 8B 4D B7           mov         ecx,dword ptr [rbp-49h]
  00000000000000C0: E8 00 00 00 00     call        abs
  00000000000000C5: 69 C8 97 75 00 00  imul        ecx,eax,7597h
  00000000000000CB: B8 89 B5 F8 14     mov         eax,14F8B589h
  00000000000000D0: F7 E9              imul        ecx
  00000000000000D2: C1 FA 0D           sar         edx,0Dh
  00000000000000D5: 8B C2              mov         eax,edx
  00000000000000D7: C1 E8 1F           shr         eax,1Fh
  00000000000000DA: 03 C2              add         eax,edx
  00000000000000DC: 48 98              cdqe
  00000000000000DE: 48 03 D8           add         rbx,rax
  00000000000000E1: 48 8B 45 D7        mov         rax,qword ptr [rbp-29h]
  00000000000000E5: 48 8D 53 32        lea         rdx,[rbx+32h]
  00000000000000E9: 48 3B D0           cmp         rdx,rax
  00000000000000EC: 77 18              ja          0000000000000106
  00000000000000EE: 48 89 55 D7        mov         qword ptr [rbp-29h],rdx
  00000000000000F2: 48 8D 45 C7        lea         rax,[rbp-39h]
  00000000000000F6: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  00000000000000FB: 48 0F 47 45 C7     cmova       rax,qword ptr [rbp-39h]
  0000000000000100: 44 88 2C 10        mov         byte ptr [rax+rdx],r13b
  0000000000000104: EB 0F              jmp         0000000000000115
  0000000000000106: 48 2B D0           sub         rdx,rax
  0000000000000109: 45 33 C0           xor         r8d,r8d
  000000000000010C: 48 8D 4D C7        lea         rcx,[rbp-39h]
  0000000000000110: E8 00 00 00 00     call        ?append@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_KD@Z
  0000000000000115: F2 0F 11 75 B7     movsd       mmword ptr [rbp-49h],xmm6
  000000000000011A: 48 8D 4D B7        lea         rcx,[rbp-49h]
  000000000000011E: E8 00 00 00 00     call        _ldtest
  0000000000000123: 66 85 C0           test        ax,ax
  0000000000000126: 0F 9E C3           setle       bl
  0000000000000129: 44 8B 4E 18        mov         r9d,dword ptr [rsi+18h]
  000000000000012D: 41 8B C9           mov         ecx,r9d
  0000000000000130: 83 E1 EF           and         ecx,0FFFFFFEFh
  0000000000000133: 66 85 C0           test        ax,ax
  0000000000000136: 44 0F 4F C9        cmovg       r9d,ecx
  000000000000013A: 41 B0 4C           mov         r8b,4Ch
  000000000000013D: 48 8D 55 E7        lea         rdx,[rbp-19h]
  0000000000000141: 49 8B CF           mov         rcx,r15
  0000000000000144: E8 00 00 00 00     call        ?_Ffmt@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBAPEADPEADDH@Z
  0000000000000149: 48 8D 4D C7        lea         rcx,[rbp-39h]
  000000000000014D: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000152: 48 0F 47 4D C7     cmova       rcx,qword ptr [rbp-39h]
  0000000000000157: F2 0F 11 74 24 20  movsd       mmword ptr [rsp+20h],xmm6
  000000000000015D: 44 8B CF           mov         r9d,edi
  0000000000000160: 4C 8B C0           mov         r8,rax
  0000000000000163: 48 8B 55 D7        mov         rdx,qword ptr [rbp-29h]
  0000000000000167: E8 00 00 00 00     call        sprintf_s
  000000000000016C: 48 63 D0           movsxd      rdx,eax
  000000000000016F: 48 8D 45 C7        lea         rax,[rbp-39h]
  0000000000000173: 48 83 7D DF 0F     cmp         qword ptr [rbp-21h],0Fh
  0000000000000178: 48 0F 47 45 C7     cmova       rax,qword ptr [rbp-39h]
  000000000000017D: 41 0F 10 04 24     movups      xmm0,xmmword ptr [r12]
  0000000000000182: F3 0F 7F 45 B7     movdqu      xmmword ptr [rbp-49h],xmm0
  0000000000000187: 88 5C 24 38        mov         byte ptr [rsp+38h],bl
  000000000000018B: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000190: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  0000000000000195: 8A 45 77           mov         al,byte ptr [rbp+77h]
  0000000000000198: 88 44 24 20        mov         byte ptr [rsp+20h],al
  000000000000019C: 4C 8B CE           mov         r9,rsi
  000000000000019F: 4C 8D 45 B7        lea         r8,[rbp-49h]
  00000000000001A3: 49 8B D6           mov         rdx,r14
  00000000000001A6: 49 8B CF           mov         rcx,r15
  00000000000001A9: E8 00 00 00 00     call        ??$_Fput_v3@$0A@@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@1@V21@AEAVios_base@1@DPEBD_K_N@Z
  00000000000001AE: 90                 nop
  00000000000001AF: 48 8B 55 DF        mov         rdx,qword ptr [rbp-21h]
  00000000000001B3: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000001B7: 76 2D              jbe         00000000000001E6
  00000000000001B9: 48 FF C2           inc         rdx
  00000000000001BC: 48 8B 4D C7        mov         rcx,qword ptr [rbp-39h]
  00000000000001C0: 48 8B C1           mov         rax,rcx
  00000000000001C3: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  00000000000001CA: 72 15              jb          00000000000001E1
  00000000000001CC: 48 83 C2 27        add         rdx,27h
  00000000000001D0: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000001D4: 48 2B C1           sub         rax,rcx
  00000000000001D7: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  00000000000001DB: 48 83 F8 1F        cmp         rax,1Fh
  00000000000001DF: 77 30              ja          0000000000000211
  00000000000001E1: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  00000000000001E6: 49 8B C6           mov         rax,r14
  00000000000001E9: 48 8B 4D EF        mov         rcx,qword ptr [rbp-11h]
  00000000000001ED: 48 33 CC           xor         rcx,rsp
  00000000000001F0: E8 00 00 00 00     call        __security_check_cookie
  00000000000001F5: 0F 28 B4 24 80 00  movaps      xmm6,xmmword ptr [rsp+80h]
                    00 00
  00000000000001FD: 48 81 C4 98 00 00  add         rsp,98h
                    00
  0000000000000204: 41 5F              pop         r15
  0000000000000206: 41 5E              pop         r14
  0000000000000208: 41 5D              pop         r13
  000000000000020A: 41 5C              pop         r12
  000000000000020C: 5F                 pop         rdi
  000000000000020D: 5E                 pop         rsi
  000000000000020E: 5B                 pop         rbx
  000000000000020F: 5D                 pop         rbp
  0000000000000210: C3                 ret
  0000000000000211: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000216: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DO@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,long double)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEBX@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,void const *)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 48 81 EC A8 00 00  sub         rsp,0A8h
                    00
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 84 24 90 00  mov         qword ptr [rsp+90h],rax
                    00 00
  000000000000001E: 49 8B F1           mov         rsi,r9
  0000000000000021: 49 8B D8           mov         rbx,r8
  0000000000000024: 4C 8B 8C 24 F8 00  mov         r9,qword ptr [rsp+0F8h]
                    00 00
  000000000000002C: 4C 8D 05 00 00 00  lea         r8,[??_C@_02BBAHNLBA@?$CFp@]
                    00
  0000000000000033: 48 8B EA           mov         rbp,rdx
  0000000000000036: 48 8B F9           mov         rdi,rcx
  0000000000000039: BA 40 00 00 00     mov         edx,40h
  000000000000003E: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  0000000000000043: E8 00 00 00 00     call        sprintf_s
  0000000000000048: 0F 10 03           movups      xmm0,xmmword ptr [rbx]
  000000000000004B: 48 63 D0           movsxd      rdx,eax
  000000000000004E: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  0000000000000053: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  0000000000000058: 48 8D 44 24 50     lea         rax,[rsp+50h]
  000000000000005D: 8A 94 24 F0 00 00  mov         dl,byte ptr [rsp+0F0h]
                    00
  0000000000000064: 4C 8B CE           mov         r9,rsi
  0000000000000067: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  000000000000006C: 48 8B CF           mov         rcx,rdi
  000000000000006F: 88 54 24 20        mov         byte ptr [rsp+20h],dl
  0000000000000073: 48 8B D5           mov         rdx,rbp
  0000000000000076: F3 0F 7F 44 24 40  movdqu      xmmword ptr [rsp+40h],xmm0
  000000000000007C: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  0000000000000081: 48 8B C5           mov         rax,rbp
  0000000000000084: 48 8B 8C 24 90 00  mov         rcx,qword ptr [rsp+90h]
                    00 00
  000000000000008C: 48 33 CC           xor         rcx,rsp
  000000000000008F: E8 00 00 00 00     call        __security_check_cookie
  0000000000000094: 48 81 C4 A8 00 00  add         rsp,0A8h
                    00
  000000000000009B: 5F                 pop         rdi
  000000000000009C: 5E                 pop         rsi
  000000000000009D: 5D                 pop         rbp
  000000000000009E: 5B                 pop         rbx
  000000000000009F: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_J@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,__int64)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 48 81 EC B8 00 00  sub         rsp,0B8h
                    00
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  000000000000001E: 48 8B FA           mov         rdi,rdx
  0000000000000021: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 49 8B D9           mov         rbx,r9
  000000000000002C: 41 8B 49 18        mov         ecx,dword ptr [r9+18h]
  0000000000000030: 49 8B E8           mov         rbp,r8
  0000000000000033: 8B D1              mov         edx,ecx
  0000000000000035: 83 E2 20           and         edx,20h
  0000000000000038: 74 05              je          000000000000003F
  000000000000003A: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  000000000000003F: 85 D2              test        edx,edx
  0000000000000041: 48 8D 44 24 51     lea         rax,[rsp+51h]
  0000000000000046: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004B: 49 0F 45 C0        cmovne      rax,r8
  000000000000004F: F6 C1 08           test        cl,8
  0000000000000052: 74 06              je          000000000000005A
  0000000000000054: C6 00 23           mov         byte ptr [rax],23h
  0000000000000057: 48 FF C0           inc         rax
  000000000000005A: 8B D1              mov         edx,ecx
  000000000000005C: 66 C7 00 49 36     mov         word ptr [rax],3649h
  0000000000000061: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000067: C6 40 02 34        mov         byte ptr [rax+2],34h
  000000000000006B: 81 FA 00 04 00 00  cmp         edx,400h
  0000000000000071: 75 04              jne         0000000000000077
  0000000000000073: B1 6F              mov         cl,6Fh
  0000000000000075: EB 17              jmp         000000000000008E
  0000000000000077: 81 FA 00 08 00 00  cmp         edx,800h
  000000000000007D: 74 04              je          0000000000000083
  000000000000007F: B1 64              mov         cl,64h
  0000000000000081: EB 0B              jmp         000000000000008E
  0000000000000083: C0 E1 03           shl         cl,3
  0000000000000086: F6 D1              not         cl
  0000000000000088: 80 E1 20           and         cl,20h
  000000000000008B: 80 C9 58           or          cl,58h
  000000000000008E: 4C 8B 8C 24 08 01  mov         r9,qword ptr [rsp+108h]
                    00 00
  0000000000000096: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000009B: 88 48 03           mov         byte ptr [rax+3],cl
  000000000000009E: BA 40 00 00 00     mov         edx,40h
  00000000000000A3: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A8: C6 40 04 00        mov         byte ptr [rax+4],0
  00000000000000AC: E8 00 00 00 00     call        sprintf_s
  00000000000000B1: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000B5: 48 63 D0           movsxd      rdx,eax
  00000000000000B8: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000BD: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  00000000000000C2: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000C7: 8A 94 24 00 01 00  mov         dl,byte ptr [rsp+100h]
                    00
  00000000000000CE: 4C 8B CB           mov         r9,rbx
  00000000000000D1: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000D6: 48 8B CE           mov         rcx,rsi
  00000000000000D9: 88 54 24 20        mov         byte ptr [rsp+20h],dl
  00000000000000DD: 48 8B D7           mov         rdx,rdi
  00000000000000E0: F3 0F 7F 44 24 40  movdqu      xmmword ptr [rsp+40h],xmm0
  00000000000000E6: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000EB: 48 8B C7           mov         rax,rdi
  00000000000000EE: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000F6: 48 33 CC           xor         rcx,rsp
  00000000000000F9: E8 00 00 00 00     call        __security_check_cookie
  00000000000000FE: 48 81 C4 B8 00 00  add         rsp,0B8h
                    00
  0000000000000105: 5F                 pop         rdi
  0000000000000106: 5E                 pop         rsi
  0000000000000107: 5D                 pop         rbp
  0000000000000108: 5B                 pop         rbx
  0000000000000109: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_K@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,unsigned __int64)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 55                 push        rbp
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 48 81 EC B8 00 00  sub         rsp,0B8h
                    00
  000000000000000C: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000013: 48 33 C4           xor         rax,rsp
  0000000000000016: 48 89 84 24 A0 00  mov         qword ptr [rsp+0A0h],rax
                    00 00
  000000000000001E: 48 8B FA           mov         rdi,rdx
  0000000000000021: C6 44 24 50 25     mov         byte ptr [rsp+50h],25h
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 49 8B D9           mov         rbx,r9
  000000000000002C: 41 8B 49 18        mov         ecx,dword ptr [r9+18h]
  0000000000000030: 49 8B E8           mov         rbp,r8
  0000000000000033: 8B D1              mov         edx,ecx
  0000000000000035: 83 E2 20           and         edx,20h
  0000000000000038: 74 05              je          000000000000003F
  000000000000003A: C6 44 24 51 2B     mov         byte ptr [rsp+51h],2Bh
  000000000000003F: 85 D2              test        edx,edx
  0000000000000041: 48 8D 44 24 51     lea         rax,[rsp+51h]
  0000000000000046: 4C 8D 44 24 52     lea         r8,[rsp+52h]
  000000000000004B: 49 0F 45 C0        cmovne      rax,r8
  000000000000004F: F6 C1 08           test        cl,8
  0000000000000052: 74 06              je          000000000000005A
  0000000000000054: C6 00 23           mov         byte ptr [rax],23h
  0000000000000057: 48 FF C0           inc         rax
  000000000000005A: 8B D1              mov         edx,ecx
  000000000000005C: 66 C7 00 49 36     mov         word ptr [rax],3649h
  0000000000000061: 81 E2 00 0E 00 00  and         edx,0E00h
  0000000000000067: C6 40 02 34        mov         byte ptr [rax+2],34h
  000000000000006B: 81 FA 00 04 00 00  cmp         edx,400h
  0000000000000071: 75 04              jne         0000000000000077
  0000000000000073: B1 6F              mov         cl,6Fh
  0000000000000075: EB 17              jmp         000000000000008E
  0000000000000077: 81 FA 00 08 00 00  cmp         edx,800h
  000000000000007D: 74 04              je          0000000000000083
  000000000000007F: B1 75              mov         cl,75h
  0000000000000081: EB 0B              jmp         000000000000008E
  0000000000000083: C0 E1 03           shl         cl,3
  0000000000000086: F6 D1              not         cl
  0000000000000088: 80 E1 20           and         cl,20h
  000000000000008B: 80 C9 58           or          cl,58h
  000000000000008E: 4C 8B 8C 24 08 01  mov         r9,qword ptr [rsp+108h]
                    00 00
  0000000000000096: 4C 8D 44 24 50     lea         r8,[rsp+50h]
  000000000000009B: 88 48 03           mov         byte ptr [rax+3],cl
  000000000000009E: BA 40 00 00 00     mov         edx,40h
  00000000000000A3: 48 8D 4C 24 60     lea         rcx,[rsp+60h]
  00000000000000A8: C6 40 04 00        mov         byte ptr [rax+4],0
  00000000000000AC: E8 00 00 00 00     call        sprintf_s
  00000000000000B1: 0F 10 45 00        movups      xmm0,xmmword ptr [rbp]
  00000000000000B5: 48 63 D0           movsxd      rdx,eax
  00000000000000B8: 4C 8D 44 24 40     lea         r8,[rsp+40h]
  00000000000000BD: 48 89 54 24 30     mov         qword ptr [rsp+30h],rdx
  00000000000000C2: 48 8D 44 24 60     lea         rax,[rsp+60h]
  00000000000000C7: 8A 94 24 00 01 00  mov         dl,byte ptr [rsp+100h]
                    00
  00000000000000CE: 4C 8B CB           mov         r9,rbx
  00000000000000D1: 48 89 44 24 28     mov         qword ptr [rsp+28h],rax
  00000000000000D6: 48 8B CE           mov         rcx,rsi
  00000000000000D9: 88 54 24 20        mov         byte ptr [rsp+20h],dl
  00000000000000DD: 48 8B D7           mov         rdx,rdi
  00000000000000E0: F3 0F 7F 44 24 40  movdqu      xmmword ptr [rsp+40h],xmm0
  00000000000000E6: E8 00 00 00 00     call        ?_Iput@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@DPEAD_K@Z
  00000000000000EB: 48 8B C7           mov         rax,rdi
  00000000000000EE: 48 8B 8C 24 A0 00  mov         rcx,qword ptr [rsp+0A0h]
                    00 00
  00000000000000F6: 48 33 CC           xor         rcx,rsp
  00000000000000F9: E8 00 00 00 00     call        __security_check_cookie
  00000000000000FE: 48 81 C4 B8 00 00  add         rsp,0B8h
                    00
  0000000000000105: 5F                 pop         rdi
  0000000000000106: 5E                 pop         rsi
  0000000000000107: 5D                 pop         rbp
  0000000000000108: 5B                 pop         rbx
  0000000000000109: C3                 ret

?do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z (protected: virtual class std::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class std::ostreambuf_iterator<char,struct std::char_traits<char> >,class std::ios_base &,char,bool)const ):
  0000000000000000: 40 55              push        rbp
  0000000000000002: 53                 push        rbx
  0000000000000003: 56                 push        rsi
  0000000000000004: 57                 push        rdi
  0000000000000005: 41 54              push        r12
  0000000000000007: 41 55              push        r13
  0000000000000009: 41 56              push        r14
  000000000000000B: 41 57              push        r15
  000000000000000D: 48 8D 6C 24 F1     lea         rbp,[rsp-0Fh]
  0000000000000012: 48 81 EC 98 00 00  sub         rsp,98h
                    00
  0000000000000019: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000020: 48 33 C4           xor         rax,rsp
  0000000000000023: 48 89 45 FF        mov         qword ptr [rbp-1],rax
  0000000000000027: 49 8B F9           mov         rdi,r9
  000000000000002A: 4D 8B E0           mov         r12,r8
  000000000000002D: 4C 8B F2           mov         r14,rdx
  0000000000000030: 4C 8B F9           mov         r15,rcx
  0000000000000033: 44 8A 6D 77        mov         r13b,byte ptr [rbp+77h]
  0000000000000037: 41 F7 41 18 00 40  test        dword ptr [r9+18h],4000h
                    00 00
  000000000000003F: 75 2E              jne         000000000000006F
  0000000000000041: 41 0F 10 00        movups      xmm0,xmmword ptr [r8]
  0000000000000045: F3 0F 7F 45 A7     movdqu      xmmword ptr [rbp-59h],xmm0
  000000000000004A: 44 0F B6 45 7F     movzx       r8d,byte ptr [rbp+7Fh]
  000000000000004F: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000052: 4C 8B 52 48        mov         r10,qword ptr [rdx+48h]
  0000000000000056: 44 89 44 24 28     mov         dword ptr [rsp+28h],r8d
  000000000000005B: 44 88 6C 24 20     mov         byte ptr [rsp+20h],r13b
  0000000000000060: 4C 8D 45 A7        lea         r8,[rbp-59h]
  0000000000000064: 49 8B D6           mov         rdx,r14
  0000000000000067: 41 FF D2           call        r10
  000000000000006A: E9 E7 01 00 00     jmp         0000000000000256
  000000000000006F: 49 8B 41 40        mov         rax,qword ptr [r9+40h]
  0000000000000073: 48 8B 58 08        mov         rbx,qword ptr [rax+8]
  0000000000000077: 48 89 5D AF        mov         qword ptr [rbp-51h],rbx
  000000000000007B: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000007E: 48 8B CB           mov         rcx,rbx
  0000000000000081: FF 50 08           call        qword ptr [rax+8]
  0000000000000084: 90                 nop
  0000000000000085: 48 8D 4D A7        lea         rcx,[rbp-59h]
  0000000000000089: E8 00 00 00 00     call        ??$use_facet@V?$numpunct@D@std@@@std@@YAAEBV?$numpunct@D@0@AEBVlocale@0@@Z
  000000000000008E: 48 8B F0           mov         rsi,rax
  0000000000000091: 48 85 DB           test        rbx,rbx
  0000000000000094: 74 1F              je          00000000000000B5
  0000000000000096: 48 8B 13           mov         rdx,qword ptr [rbx]
  0000000000000099: 48 8B CB           mov         rcx,rbx
  000000000000009C: FF 52 10           call        qword ptr [rdx+10h]
  000000000000009F: 33 DB              xor         ebx,ebx
  00000000000000A1: 48 85 C0           test        rax,rax
  00000000000000A4: 74 0F              je          00000000000000B5
  00000000000000A6: 48 8B 08           mov         rcx,qword ptr [rax]
  00000000000000A9: 4C 8B 01           mov         r8,qword ptr [rcx]
  00000000000000AC: 8D 53 01           lea         edx,[rbx+1]
  00000000000000AF: 48 8B C8           mov         rcx,rax
  00000000000000B2: 41 FF D0           call        r8
  00000000000000B5: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000B8: 0F 11 45 BF        movups      xmmword ptr [rbp-41h],xmm0
  00000000000000BC: 48 89 5D CF        mov         qword ptr [rbp-31h],rbx
  00000000000000C0: 48 C7 45 D7 0F 00  mov         qword ptr [rbp-29h],0Fh
                    00 00
  00000000000000C8: 88 5D BF           mov         byte ptr [rbp-41h],bl
  00000000000000CB: 48 8B 06           mov         rax,qword ptr [rsi]
  00000000000000CE: 48 8D 55 DF        lea         rdx,[rbp-21h]
  00000000000000D2: 48 8B CE           mov         rcx,rsi
  00000000000000D5: 38 5D 7F           cmp         byte ptr [rbp+7Fh],bl
  00000000000000D8: 74 3C              je          0000000000000116
  00000000000000DA: FF 50 38           call        qword ptr [rax+38h]
  00000000000000DD: BE 00 10 00 00     mov         esi,1000h
  00000000000000E2: 48 8B 55 D7        mov         rdx,qword ptr [rbp-29h]
  00000000000000E6: 48 83 FA 0F        cmp         rdx,0Fh
  00000000000000EA: 76 69              jbe         0000000000000155
  00000000000000EC: 48 FF C2           inc         rdx
  00000000000000EF: 48 8B 4D BF        mov         rcx,qword ptr [rbp-41h]
  00000000000000F3: 48 8B C1           mov         rax,rcx
  00000000000000F6: 48 3B D6           cmp         rdx,rsi
  00000000000000F9: 72 55              jb          0000000000000150
  00000000000000FB: 48 83 C2 27        add         rdx,27h
  00000000000000FF: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000103: 48 2B C1           sub         rax,rcx
  0000000000000106: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000010A: 48 83 F8 1F        cmp         rax,1Fh
  000000000000010E: 0F 87 6B 01 00 00  ja          000000000000027F
  0000000000000114: EB 3A              jmp         0000000000000150
  0000000000000116: FF 50 30           call        qword ptr [rax+30h]
  0000000000000119: BE 00 10 00 00     mov         esi,1000h
  000000000000011E: 48 8B 55 D7        mov         rdx,qword ptr [rbp-29h]
  0000000000000122: 48 83 FA 0F        cmp         rdx,0Fh
  0000000000000126: 76 2D              jbe         0000000000000155
  0000000000000128: 48 FF C2           inc         rdx
  000000000000012B: 48 8B 4D BF        mov         rcx,qword ptr [rbp-41h]
  000000000000012F: 48 8B C1           mov         rax,rcx
  0000000000000132: 48 3B D6           cmp         rdx,rsi
  0000000000000135: 72 19              jb          0000000000000150
  0000000000000137: 48 83 C2 27        add         rdx,27h
  000000000000013B: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000013F: 48 2B C1           sub         rax,rcx
  0000000000000142: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000146: 48 83 F8 1F        cmp         rax,1Fh
  000000000000014A: 0F 87 35 01 00 00  ja          0000000000000285
  0000000000000150: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000155: 48 89 5D CF        mov         qword ptr [rbp-31h],rbx
  0000000000000159: 48 C7 45 D7 0F 00  mov         qword ptr [rbp-29h],0Fh
                    00 00
  0000000000000161: 88 5D BF           mov         byte ptr [rbp-41h],bl
  0000000000000164: 41 B8 20 00 00 00  mov         r8d,20h
  000000000000016A: 48 8D 55 DF        lea         rdx,[rbp-21h]
  000000000000016E: 48 8D 4D BF        lea         rcx,[rbp-41h]
  0000000000000172: E8 00 00 00 00     call        memcpy
  0000000000000177: 48 8B 5F 28        mov         rbx,qword ptr [rdi+28h]
  000000000000017B: 48 8B 4D CF        mov         rcx,qword ptr [rbp-31h]
  000000000000017F: 48 85 DB           test        rbx,rbx
  0000000000000182: 7E 0A              jle         000000000000018E
  0000000000000184: 48 3B D9           cmp         rbx,rcx
  0000000000000187: 76 05              jbe         000000000000018E
  0000000000000189: 48 2B D9           sub         rbx,rcx
  000000000000018C: EB 02              jmp         0000000000000190
  000000000000018E: 33 DB              xor         ebx,ebx
  0000000000000190: 8B 47 18           mov         eax,dword ptr [rdi+18h]
  0000000000000193: 25 C0 01 00 00     and         eax,1C0h
  0000000000000198: 83 F8 40           cmp         eax,40h
  000000000000019B: 74 31              je          00000000000001CE
  000000000000019D: 41 0F 10 04 24     movups      xmm0,xmmword ptr [r12]
  00000000000001A2: F3 0F 7F 45 A7     movdqu      xmmword ptr [rbp-59h],xmm0
  00000000000001A7: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  00000000000001AC: 45 8A CD           mov         r9b,r13b
  00000000000001AF: 4C 8D 45 A7        lea         r8,[rbp-59h]
  00000000000001B3: 48 8D 55 DF        lea         rdx,[rbp-21h]
  00000000000001B7: 49 8B CF           mov         rcx,r15
  00000000000001BA: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  00000000000001BF: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000001C2: F3 41 0F 7F 04 24  movdqu      xmmword ptr [r12],xmm0
  00000000000001C8: 33 DB              xor         ebx,ebx
  00000000000001CA: 48 8B 4D CF        mov         rcx,qword ptr [rbp-31h]
  00000000000001CE: 4C 8D 4D BF        lea         r9,[rbp-41h]
  00000000000001D2: 48 83 7D D7 0F     cmp         qword ptr [rbp-29h],0Fh
  00000000000001D7: 4C 0F 47 4D BF     cmova       r9,qword ptr [rbp-41h]
  00000000000001DC: 41 0F 10 04 24     movups      xmm0,xmmword ptr [r12]
  00000000000001E1: F3 0F 7F 45 A7     movdqu      xmmword ptr [rbp-59h],xmm0
  00000000000001E6: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  00000000000001EB: 4C 8D 45 A7        lea         r8,[rbp-59h]
  00000000000001EF: 48 8D 55 DF        lea         rdx,[rbp-21h]
  00000000000001F3: 49 8B CF           mov         rcx,r15
  00000000000001F6: E8 00 00 00 00     call        ?_Put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@PEBD_K@Z
  00000000000001FB: 0F 10 00           movups      xmm0,xmmword ptr [rax]
  00000000000001FE: 48 C7 47 28 00 00  mov         qword ptr [rdi+28h],0
                    00 00
  0000000000000206: F3 0F 7F 45 A7     movdqu      xmmword ptr [rbp-59h],xmm0
  000000000000020B: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000210: 45 8A CD           mov         r9b,r13b
  0000000000000213: 4C 8D 45 A7        lea         r8,[rbp-59h]
  0000000000000217: 49 8B D6           mov         rdx,r14
  000000000000021A: 49 8B CF           mov         rcx,r15
  000000000000021D: E8 00 00 00 00     call        ?_Rep@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@AEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@D_K@Z
  0000000000000222: 90                 nop
  0000000000000223: 48 8B 55 D7        mov         rdx,qword ptr [rbp-29h]
  0000000000000227: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000022B: 76 29              jbe         0000000000000256
  000000000000022D: 48 FF C2           inc         rdx
  0000000000000230: 48 8B 4D BF        mov         rcx,qword ptr [rbp-41h]
  0000000000000234: 48 8B C1           mov         rax,rcx
  0000000000000237: 48 3B D6           cmp         rdx,rsi
  000000000000023A: 72 15              jb          0000000000000251
  000000000000023C: 48 83 C2 27        add         rdx,27h
  0000000000000240: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000244: 48 2B C1           sub         rax,rcx
  0000000000000247: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  000000000000024B: 48 83 F8 1F        cmp         rax,1Fh
  000000000000024F: 77 28              ja          0000000000000279
  0000000000000251: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000256: 49 8B C6           mov         rax,r14
  0000000000000259: 48 8B 4D FF        mov         rcx,qword ptr [rbp-1]
  000000000000025D: 48 33 CC           xor         rcx,rsp
  0000000000000260: E8 00 00 00 00     call        __security_check_cookie
  0000000000000265: 48 81 C4 98 00 00  add         rsp,98h
                    00
  000000000000026C: 41 5F              pop         r15
  000000000000026E: 41 5E              pop         r14
  0000000000000270: 41 5D              pop         r13
  0000000000000272: 41 5C              pop         r12
  0000000000000274: 5F                 pop         rdi
  0000000000000275: 5E                 pop         rsi
  0000000000000276: 5B                 pop         rbx
  0000000000000277: 5D                 pop         rbp
  0000000000000278: C3                 ret
  0000000000000279: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000027E: 90                 nop
  000000000000027F: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  0000000000000284: 90                 nop
  0000000000000285: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  000000000000028A: CC                 int         3

?dtor$0@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,bool)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?dtor$1@?0??do_put@?$num_put@DV?$ostreambuf_iterator@DU?$char_traits@D@std@@@std@@@std@@MEBA?AV?$ostreambuf_iterator@DU?$char_traits@D@std@@@2@V32@AEAVios_base@2@D_N@Z@4HA (int `protected: virtual class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ostreambuf_iterator<char,struct std::char_traits<char> > __cdecl std::num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::do_put(class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::std,class num_put<char,class std::ostreambuf_iterator<char,struct std::char_traits<char> > >::ios_base &,char,bool)const '::`1'::dtor$1):
  0000000000000000: 48 8D 8A 48 00 00  lea         rcx,[rdx+48h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?do_thousands_sep@?$numpunct@D@std@@MEBADXZ (protected: virtual char __cdecl std::numpunct<char>::do_thousands_sep(void)const ):
  0000000000000000: 8A 41 19           mov         al,byte ptr [rcx+19h]
  0000000000000003: C3                 ret

?do_tolower@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_tolower(char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: 48 8D 51 10        lea         rdx,[rcx+10h]
  0000000000000007: 8B C8              mov         ecx,eax
  0000000000000009: E9 00 00 00 00     jmp         _Tolower

?do_tolower@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_tolower(char *,char const *)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 49 8B F8           mov         rdi,r8
  0000000000000012: 48 8B DA           mov         rbx,rdx
  0000000000000015: 49 3B D0           cmp         rdx,r8
  0000000000000018: 74 19              je          0000000000000033
  000000000000001A: 48 8D 71 10        lea         rsi,[rcx+10h]
  000000000000001E: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  0000000000000021: 48 8B D6           mov         rdx,rsi
  0000000000000024: E8 00 00 00 00     call        _Tolower
  0000000000000029: 88 03              mov         byte ptr [rbx],al
  000000000000002B: 48 FF C3           inc         rbx
  000000000000002E: 48 3B DF           cmp         rbx,rdi
  0000000000000031: 75 EB              jne         000000000000001E
  0000000000000033: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 83 C4 20        add         rsp,20h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret

?do_toupper@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_toupper(char)const ):
  0000000000000000: 0F B6 C2           movzx       eax,dl
  0000000000000003: 48 8D 51 10        lea         rdx,[rcx+10h]
  0000000000000007: 8B C8              mov         ecx,eax
  0000000000000009: E9 00 00 00 00     jmp         _Toupper

?do_toupper@?$ctype@D@std@@MEBAPEBDPEADPEBD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_toupper(char *,char const *)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 49 8B F8           mov         rdi,r8
  0000000000000012: 48 8B DA           mov         rbx,rdx
  0000000000000015: 49 3B D0           cmp         rdx,r8
  0000000000000018: 74 19              je          0000000000000033
  000000000000001A: 48 8D 71 10        lea         rsi,[rcx+10h]
  000000000000001E: 0F B6 0B           movzx       ecx,byte ptr [rbx]
  0000000000000021: 48 8B D6           mov         rdx,rsi
  0000000000000024: E8 00 00 00 00     call        _Toupper
  0000000000000029: 88 03              mov         byte ptr [rbx],al
  000000000000002B: 48 FF C3           inc         rbx
  000000000000002E: 48 3B DF           cmp         rbx,rdi
  0000000000000031: 75 EB              jne         000000000000001E
  0000000000000033: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000038: 48 8B C3           mov         rax,rbx
  000000000000003B: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000040: 48 83 C4 20        add         rsp,20h
  0000000000000044: 5F                 pop         rdi
  0000000000000045: C3                 ret

?do_truename@?$numpunct@D@std@@MEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@XZ (protected: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::numpunct<char>::do_truename(void)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 33 C0              xor         eax,eax
  000000000000000B: 48 8B 51 28        mov         rdx,qword ptr [rcx+28h]
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  0000000000000016: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000019: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  000000000000001D: 48 89 43 18        mov         qword ptr [rbx+18h],rax
  0000000000000021: 49 FF C0           inc         r8
  0000000000000024: 42 38 04 02        cmp         byte ptr [rdx+r8],al
  0000000000000028: 75 F7              jne         0000000000000021
  000000000000002A: 48 8B CB           mov         rcx,rbx
  000000000000002D: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000032: 48 8B C3           mov         rax,rbx
  0000000000000035: 48 83 C4 30        add         rsp,30h
  0000000000000039: 5B                 pop         rbx
  000000000000003A: C3                 ret

?do_unshift@?$codecvt@DDU_Mbstatet@@@std@@MEBAHAEAU_Mbstatet@@PEAD1AEAPEAD@Z (protected: virtual int __cdecl std::codecvt<char,char,struct _Mbstatet>::do_unshift(struct _Mbstatet &,char *,char *,char * &)const ):
  0000000000000000: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  0000000000000005: 4C 89 00           mov         qword ptr [rax],r8
  0000000000000008: B8 03 00 00 00     mov         eax,3
  000000000000000D: C3                 ret

?do_widen@?$ctype@D@std@@MEBADD@Z (protected: virtual char __cdecl std::ctype<char>::do_widen(char)const ):
  0000000000000000: 8A C2              mov         al,dl
  0000000000000002: C3                 ret

?do_widen@?$ctype@D@std@@MEBAPEBDPEBD0PEAD@Z (protected: virtual char const * __cdecl std::ctype<char>::do_widen(char const *,char const *,char *)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 49 8B D8           mov         rbx,r8
  0000000000000009: 49 8B C9           mov         rcx,r9
  000000000000000C: 4C 2B C2           sub         r8,rdx
  000000000000000F: E8 00 00 00 00     call        memcpy
  0000000000000014: 48 8B C3           mov         rax,rbx
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: C3                 ret

?equivalent@error_category@std@@UEBA_NAEBVerror_code@2@H@Z (public: virtual bool __cdecl std::error_category::equivalent(class std::error_code const &,int)const ):
  0000000000000000: 48 8B 42 08        mov         rax,qword ptr [rdx+8]
  0000000000000004: 4C 8B 48 08        mov         r9,qword ptr [rax+8]
  0000000000000008: 4C 39 49 08        cmp         qword ptr [rcx+8],r9
  000000000000000C: 75 08              jne         0000000000000016
  000000000000000E: 44 39 02           cmp         dword ptr [rdx],r8d
  0000000000000011: 75 03              jne         0000000000000016
  0000000000000013: B0 01              mov         al,1
  0000000000000015: C3                 ret
  0000000000000016: 32 C0              xor         al,al
  0000000000000018: C3                 ret

?equivalent@error_category@std@@UEBA_NHAEBVerror_condition@2@@Z (public: virtual bool __cdecl std::error_category::equivalent(int,class std::error_condition const &)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 49 8B D8           mov         rbx,r8
  000000000000000C: 44 8B C2           mov         r8d,edx
  000000000000000F: 48 8D 54 24 20     lea         rdx,[rsp+20h]
  0000000000000014: FF 50 18           call        qword ptr [rax+18h]
  0000000000000017: 48 8B 4B 08        mov         rcx,qword ptr [rbx+8]
  000000000000001B: 4C 8B 48 08        mov         r9,qword ptr [rax+8]
  000000000000001F: 48 8B 51 08        mov         rdx,qword ptr [rcx+8]
  0000000000000023: 49 39 51 08        cmp         qword ptr [r9+8],rdx
  0000000000000027: 75 0A              jne         0000000000000033
  0000000000000029: 8B 0B              mov         ecx,dword ptr [rbx]
  000000000000002B: 39 08              cmp         dword ptr [rax],ecx
  000000000000002D: 75 04              jne         0000000000000033
  000000000000002F: B0 01              mov         al,1
  0000000000000031: EB 02              jmp         0000000000000035
  0000000000000033: 32 C0              xor         al,al
  0000000000000035: 48 83 C4 30        add         rsp,30h
  0000000000000039: 5B                 pop         rbx
  000000000000003A: C3                 ret

?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KAEBV12@_K@Z (public: unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,unsigned __int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 83 7A 18 0F     cmp         qword ptr [rdx+18h],0Fh
  000000000000000F: 48 8B F9           mov         rdi,rcx
  0000000000000012: 4C 8B 4A 10        mov         r9,qword ptr [rdx+10h]
  0000000000000016: 76 03              jbe         000000000000001B
  0000000000000018: 48 8B 12           mov         rdx,qword ptr [rdx]
  000000000000001B: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  0000000000000020: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  0000000000000024: 76 03              jbe         0000000000000029
  0000000000000026: 48 8B 3F           mov         rdi,qword ptr [rdi]
  0000000000000029: 4C 3B C9           cmp         r9,rcx
  000000000000002C: 77 30              ja          000000000000005E
  000000000000002E: 48 8B C1           mov         rax,rcx
  0000000000000031: 49 2B C1           sub         rax,r9
  0000000000000034: 4C 3B C0           cmp         r8,rax
  0000000000000037: 77 25              ja          000000000000005E
  0000000000000039: 4D 85 C9           test        r9,r9
  000000000000003C: 74 24              je          0000000000000062
  000000000000003E: 48 8D 1C 39        lea         rbx,[rcx+rdi]
  0000000000000042: 4A 8D 0C 07        lea         rcx,[rdi+r8]
  0000000000000046: 4C 8B C2           mov         r8,rdx
  0000000000000049: 48 8B D3           mov         rdx,rbx
  000000000000004C: E8 00 00 00 00     call        __std_search_1
  0000000000000051: 4C 8B C0           mov         r8,rax
  0000000000000054: 48 3B C3           cmp         rax,rbx
  0000000000000057: 74 05              je          000000000000005E
  0000000000000059: 4C 2B C7           sub         r8,rdi
  000000000000005C: EB 04              jmp         0000000000000062
  000000000000005E: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  0000000000000062: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000067: 49 8B C0           mov         rax,r8
  000000000000006A: 48 83 C4 20        add         rsp,20h
  000000000000006E: 5F                 pop         rdi
  000000000000006F: C3                 ret

?find@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEBA_KQEBD_K@Z (public: unsigned __int64 __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find(char const * const,unsigned __int64)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 83 CE FF        or          rsi,0FFFFFFFFFFFFFFFFh
  0000000000000013: 48 8B F9           mov         rdi,rcx
  0000000000000016: 4C 8B CE           mov         r9,rsi
  0000000000000019: 49 FF C1           inc         r9
  000000000000001C: 42 80 3C 0A 00     cmp         byte ptr [rdx+r9],0
  0000000000000021: 75 F6              jne         0000000000000019
  0000000000000023: 48 83 7F 18 0F     cmp         qword ptr [rdi+18h],0Fh
  0000000000000028: 48 8B 49 10        mov         rcx,qword ptr [rcx+10h]
  000000000000002C: 76 03              jbe         0000000000000031
  000000000000002E: 48 8B 3F           mov         rdi,qword ptr [rdi]
  0000000000000031: 4C 3B C9           cmp         r9,rcx
  0000000000000034: 77 30              ja          0000000000000066
  0000000000000036: 48 8B C1           mov         rax,rcx
  0000000000000039: 49 2B C1           sub         rax,r9
  000000000000003C: 4C 3B C0           cmp         r8,rax
  000000000000003F: 77 25              ja          0000000000000066
  0000000000000041: 4D 85 C9           test        r9,r9
  0000000000000044: 74 23              je          0000000000000069
  0000000000000046: 48 8D 1C 39        lea         rbx,[rcx+rdi]
  000000000000004A: 4A 8D 0C 07        lea         rcx,[rdi+r8]
  000000000000004E: 4C 8B C2           mov         r8,rdx
  0000000000000051: 48 8B D3           mov         rdx,rbx
  0000000000000054: E8 00 00 00 00     call        __std_search_1
  0000000000000059: 4C 8B C0           mov         r8,rax
  000000000000005C: 48 3B C3           cmp         rax,rbx
  000000000000005F: 74 05              je          0000000000000066
  0000000000000061: 4C 2B C7           sub         r8,rdi
  0000000000000064: EB 03              jmp         0000000000000069
  0000000000000066: 4C 8B C6           mov         r8,rsi
  0000000000000069: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  000000000000006E: 49 8B C0           mov         rax,r8
  0000000000000071: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  0000000000000076: 48 83 C4 20        add         rsp,20h
  000000000000007A: 5F                 pop         rdi
  000000000000007B: C3                 ret

?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)):
  0000000000000000: 48 89 5C 24 20     mov         qword ptr [rsp+20h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 70        sub         rsp,70h
  000000000000000F: 48 8B D9           mov         rbx,rcx
  0000000000000012: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000015: 48 63 50 04        movsxd      rdx,dword ptr [rax+4]
  0000000000000019: 48 8B 7C 0A 48     mov         rdi,qword ptr [rdx+rcx+48h]
  000000000000001E: 48 85 FF           test        rdi,rdi
  0000000000000021: 0F 84 B2 00 00 00  je          00000000000000D9
  0000000000000027: 48 8B D1           mov         rdx,rcx
  000000000000002A: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000002F: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  0000000000000034: 90                 nop
  0000000000000035: 80 7C 24 28 00     cmp         byte ptr [rsp+28h],0
  000000000000003A: 74 6C              je          00000000000000A8
  000000000000003C: C7 84 24 88 00 00  mov         dword ptr [rsp+88h],0
                    00 00 00 00 00
  0000000000000047: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000004A: 48 8B CF           mov         rcx,rdi
  000000000000004D: FF 50 68           call        qword ptr [rax+68h]
  0000000000000050: 45 33 C0           xor         r8d,r8d
  0000000000000053: 45 8D 48 04        lea         r9d,[r8+4]
  0000000000000057: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000005A: 45 0F 44 C1        cmove       r8d,r9d
  000000000000005E: 44 89 84 24 88 00  mov         dword ptr [rsp+88h],r8d
                    00 00
  0000000000000066: EB 16              jmp         000000000000007E
$LN11:
  0000000000000068: 41 B9 04 00 00 00  mov         r9d,4
  000000000000006E: 48 8B 9C 24 80 00  mov         rbx,qword ptr [rsp+80h]
                    00 00
  0000000000000076: 44 8B 84 24 88 00  mov         r8d,dword ptr [rsp+88h]
                    00 00
  000000000000007E: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000081: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000085: 48 03 CB           add         rcx,rbx
  0000000000000088: 44 0B 41 10        or          r8d,dword ptr [rcx+10h]
  000000000000008C: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  0000000000000090: 48 F7 D8           neg         rax
  0000000000000093: 1B D2              sbb         edx,edx
  0000000000000095: F7 D2              not         edx
  0000000000000097: 41 23 D1           and         edx,r9d
  000000000000009A: 41 0B D0           or          edx,r8d
  000000000000009D: 83 E2 17           and         edx,17h
  00000000000000A0: 89 51 10           mov         dword ptr [rcx+10h],edx
  00000000000000A3: 23 51 14           and         edx,dword ptr [rcx+14h]
  00000000000000A6: 75 42              jne         00000000000000EA
  00000000000000A8: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  00000000000000AD: 85 C0              test        eax,eax
  00000000000000AF: 75 0B              jne         00000000000000BC
  00000000000000B1: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000000B6: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00000000000000BB: 90                 nop
  00000000000000BC: 48 8B 54 24 20     mov         rdx,qword ptr [rsp+20h]
  00000000000000C1: 48 8B 02           mov         rax,qword ptr [rdx]
  00000000000000C4: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000C8: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  00000000000000CD: 48 85 C9           test        rcx,rcx
  00000000000000D0: 74 07              je          00000000000000D9
  00000000000000D2: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000D5: FF 50 10           call        qword ptr [rax+10h]
  00000000000000D8: 90                 nop
  00000000000000D9: 48 8B C3           mov         rax,rbx
  00000000000000DC: 48 8B 9C 24 98 00  mov         rbx,qword ptr [rsp+98h]
                    00 00
  00000000000000E4: 48 83 C4 70        add         rsp,70h
  00000000000000E8: 5F                 pop         rdi
  00000000000000E9: C3                 ret
  00000000000000EA: 41 84 D1           test        r9b,dl
  00000000000000ED: 74 09              je          00000000000000F8
  00000000000000EF: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  00000000000000F6: EB 15              jmp         000000000000010D
  00000000000000F8: F6 C2 02           test        dl,2
  00000000000000FB: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000102: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000109: 48 0F 44 D8        cmove       rbx,rax
  000000000000010D: BA 01 00 00 00     mov         edx,1
  0000000000000112: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000117: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000011C: 4C 8B C0           mov         r8,rax
  000000000000011F: 48 8B D3           mov         rdx,rbx
  0000000000000122: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000127: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000012C: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000133: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000138: E8 00 00 00 00     call        _CxxThrowException
  000000000000013D: CC                 int         3

?dtor$0@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::flush & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$3@?0??flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::flush & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::flush(void)'::`1'::catch$3):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?flush@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@XZ$0:
  000000000000000D: 48 8B 8D 80 00 00  mov         rcx,qword ptr [rbp+80h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

?imbue@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z (protected: virtual void __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::imbue(class std::locale const &)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B D9           mov         rbx,rcx
  0000000000000009: 48 8B CA           mov         rcx,rdx
  000000000000000C: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  0000000000000011: 48 8B D0           mov         rdx,rax
  0000000000000014: 48 8B CB           mov         rcx,rbx
  0000000000000017: 48 83 C4 20        add         rsp,20h
  000000000000001B: 5B                 pop         rbx
  000000000000001C: E9 00 00 00 00     jmp         ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z

?imbue@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAXAEBVlocale@2@@Z (protected: virtual void __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::imbue(class std::locale const &)):
  0000000000000000: C2 00 00           ret         0

?init@?$basic_ios@DU?$char_traits@D@std@@@std@@IEAAXPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@_N@Z (protected: void __cdecl std::basic_ios<char,struct std::char_traits<char> >::init(class std::basic_streambuf<char,struct std::char_traits<char> > *,bool)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 60        sub         rsp,60h
  000000000000000F: 41 8A F0           mov         sil,r8b
  0000000000000012: 48 8B DA           mov         rbx,rdx
  0000000000000015: 48 8B F9           mov         rdi,rcx
  0000000000000018: E8 00 00 00 00     call        ?_Init@ios_base@std@@IEAAXXZ
  000000000000001D: B2 20              mov         dl,20h
  000000000000001F: 48 89 5F 48        mov         qword ptr [rdi+48h],rbx
  0000000000000023: 48 8B CF           mov         rcx,rdi
  0000000000000026: 48 C7 47 50 00 00  mov         qword ptr [rdi+50h],0
                    00 00
  000000000000002E: E8 00 00 00 00     call        ?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z
  0000000000000033: 48 83 7F 48 00     cmp         qword ptr [rdi+48h],0
  0000000000000038: 88 47 58           mov         byte ptr [rdi+58h],al
  000000000000003B: 75 11              jne         000000000000004E
  000000000000003D: 8B 47 10           mov         eax,dword ptr [rdi+10h]
  0000000000000040: 83 E0 13           and         eax,13h
  0000000000000043: 83 C8 04           or          eax,4
  0000000000000046: 89 47 10           mov         dword ptr [rdi+10h],eax
  0000000000000049: 23 47 14           and         eax,dword ptr [rdi+14h]
  000000000000004C: 75 1D              jne         000000000000006B
  000000000000004E: 40 84 F6           test        sil,sil
  0000000000000051: 74 08              je          000000000000005B
  0000000000000053: 48 8B CF           mov         rcx,rdi
  0000000000000056: E8 00 00 00 00     call        ?_Addstd@ios_base@std@@SAXPEAV12@@Z
  000000000000005B: 48 8B 5C 24 70     mov         rbx,qword ptr [rsp+70h]
  0000000000000060: 48 8B 74 24 78     mov         rsi,qword ptr [rsp+78h]
  0000000000000065: 48 83 C4 60        add         rsp,60h
  0000000000000069: 5F                 pop         rdi
  000000000000006A: C3                 ret
  000000000000006B: A8 04              test        al,4
  000000000000006D: 74 09              je          0000000000000078
  000000000000006F: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000076: EB 14              jmp         000000000000008C
  0000000000000078: A8 02              test        al,2
  000000000000007A: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000081: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000088: 48 0F 44 D8        cmove       rbx,rax
  000000000000008C: BA 01 00 00 00     mov         edx,1
  0000000000000091: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000096: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000009B: 4C 8B C0           mov         r8,rax
  000000000000009E: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000000A3: 48 8B D3           mov         rdx,rbx
  00000000000000A6: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  00000000000000AB: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  00000000000000B2: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  00000000000000B7: E8 00 00 00 00     call        _CxxThrowException
  00000000000000BC: CC                 int         3

?insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV12@_K0D@Z (public: class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > & __cdecl std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert(unsigned __int64,unsigned __int64,char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 48 83 EC 30        sub         rsp,30h
  0000000000000014: 49 8B F0           mov         rsi,r8
  0000000000000017: 41 0F BE E9        movsx       ebp,r9b
  000000000000001B: 4C 8B 41 10        mov         r8,qword ptr [rcx+10h]
  000000000000001F: 48 8B F9           mov         rdi,rcx
  0000000000000022: 4C 3B C2           cmp         r8,rdx
  0000000000000025: 72 7D              jb          00000000000000A4
  0000000000000027: 48 8B 49 18        mov         rcx,qword ptr [rcx+18h]
  000000000000002B: 48 8B C1           mov         rax,rcx
  000000000000002E: 49 2B C0           sub         rax,r8
  0000000000000031: 48 3B F0           cmp         rsi,rax
  0000000000000034: 77 3C              ja          0000000000000072
  0000000000000036: 49 8D 04 30        lea         rax,[r8+rsi]
  000000000000003A: 48 89 47 10        mov         qword ptr [rdi+10h],rax
  000000000000003E: 48 8B C7           mov         rax,rdi
  0000000000000041: 48 83 F9 0F        cmp         rcx,0Fh
  0000000000000045: 76 03              jbe         000000000000004A
  0000000000000047: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000004A: 48 8D 1C 10        lea         rbx,[rax+rdx]
  000000000000004E: 4C 2B C2           sub         r8,rdx
  0000000000000051: 49 FF C0           inc         r8
  0000000000000054: 48 8D 0C 33        lea         rcx,[rbx+rsi]
  0000000000000058: 48 8B D3           mov         rdx,rbx
  000000000000005B: E8 00 00 00 00     call        memmove
  0000000000000060: 8B D5              mov         edx,ebp
  0000000000000062: 4C 8B C6           mov         r8,rsi
  0000000000000065: 48 8B CB           mov         rcx,rbx
  0000000000000068: E8 00 00 00 00     call        memset
  000000000000006D: 48 8B C7           mov         rax,rdi
  0000000000000070: EB 1D              jmp         000000000000008F
  0000000000000072: 44 8A 44 24 40     mov         r8b,byte ptr [rsp+40h]
  0000000000000077: 4C 8B CA           mov         r9,rdx
  000000000000007A: 48 8B D6           mov         rdx,rsi
  000000000000007D: 40 88 6C 24 28     mov         byte ptr [rsp+28h],bpl
  0000000000000082: 48 8B CF           mov         rcx,rdi
  0000000000000085: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000008A: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??insert@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAAEAV34@_K0D@Z@_K_KD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??insert@01@QEAAAEAV01@00D@Z@_K2D@Z
  000000000000008F: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  0000000000000094: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  0000000000000099: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  000000000000009E: 48 83 C4 30        add         rsp,30h
  00000000000000A2: 5F                 pop         rdi
  00000000000000A3: C3                 ret
  00000000000000A4: E8 00 00 00 00     call        ?_Xran@?$_String_val@U?$_Simple_types@D@std@@@std@@SAXXZ
  00000000000000A9: CC                 int         3

?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z (class std::error_code __cdecl std::make_error_code(enum std::io_errc)):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_Static@?1???$_Immortalize_memcpy_image@V_Iostream_error_category2@std@@@std@@YAAEBV_Iostream_error_category2@1@XZ@4V21@B]
                    00
  0000000000000007: 89 11              mov         dword ptr [rcx],edx
  0000000000000009: 48 89 41 08        mov         qword ptr [rcx+8],rax
  000000000000000D: 48 8B C1           mov         rax,rcx
  0000000000000010: C3                 ret

?message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@2@H@Z (public: virtual class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > __cdecl std::_Iostream_error_category2::message(int)const ):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 30        sub         rsp,30h
  0000000000000006: 48 8B DA           mov         rbx,rdx
  0000000000000009: 41 83 F8 01        cmp         r8d,1
  000000000000000D: 75 25              jne         0000000000000034
  000000000000000F: 0F 57 C0           xorps       xmm0,xmm0
  0000000000000012: 41 B8 15 00 00 00  mov         r8d,15h
  0000000000000018: 0F 11 02           movups      xmmword ptr [rdx],xmm0
  000000000000001B: 48 C7 42 10 00 00  mov         qword ptr [rdx+10h],0
                    00 00
  0000000000000023: 48 C7 42 18 00 00  mov         qword ptr [rdx+18h],0
                    00 00
  000000000000002B: 48 8D 15 00 00 00  lea         rdx,[?_Iostream_error@?4??message@_Iostream_error_category2@std@@UEBA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@3@H@Z@4QBDB]
                    00
  0000000000000032: EB 2F              jmp         0000000000000063
  0000000000000034: 41 8B C8           mov         ecx,r8d
  0000000000000037: E8 00 00 00 00     call        ?_Syserror_map@std@@YAPEBDH@Z
  000000000000003C: 0F 57 C0           xorps       xmm0,xmm0
  000000000000003F: 49 83 C8 FF        or          r8,0FFFFFFFFFFFFFFFFh
  0000000000000043: 0F 11 03           movups      xmmword ptr [rbx],xmm0
  0000000000000046: 48 C7 43 10 00 00  mov         qword ptr [rbx+10h],0
                    00 00
  000000000000004E: 48 C7 43 18 00 00  mov         qword ptr [rbx+18h],0
                    00 00
  0000000000000056: 49 FF C0           inc         r8
  0000000000000059: 42 80 3C 00 00     cmp         byte ptr [rax+r8],0
  000000000000005E: 75 F6              jne         0000000000000056
  0000000000000060: 48 8B D0           mov         rdx,rax
  0000000000000063: 48 8B CB           mov         rcx,rbx
  0000000000000066: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  000000000000006B: 48 8B C3           mov         rax,rbx
  000000000000006E: 48 83 C4 30        add         rsp,30h
  0000000000000072: 5B                 pop         rbx
  0000000000000073: C3                 ret

?name@_Iostream_error_category2@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::_Iostream_error_category2::name(void)const ):
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[??_C@_08LLGCOLLL@iostream@]
                    00
  0000000000000007: C3                 ret

?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ (public: static class std::chrono::time_point<struct std::chrono::steady_clock,class std::chrono::duration<__int64,struct std::ratio<1,1000000000> > > __cdecl std::chrono::steady_clock::now(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B D9           mov         rbx,rcx
  000000000000000D: E8 00 00 00 00     call        _Query_perf_frequency
  0000000000000012: 48 8B F8           mov         rdi,rax
  0000000000000015: E8 00 00 00 00     call        _Query_perf_counter
  000000000000001A: 4C 8B C8           mov         r9,rax
  000000000000001D: 48 81 FF 80 96 98  cmp         rdi,989680h
                    00
  0000000000000024: 75 09              jne         000000000000002F
  0000000000000026: 49 6B C1 64        imul        rax,r9,64h
  000000000000002A: E9 80 00 00 00     jmp         00000000000000AF
  000000000000002F: 48 81 FF 00 36 6E  cmp         rdi,16E3600h
                    01
  0000000000000036: 75 59              jne         0000000000000091
  0000000000000038: 49 BA F3 8C 90 94  mov         r10,0B2F4FC0794908CF3h
                    07 FC F4 B2
  0000000000000042: 49 8B C2           mov         rax,r10
  0000000000000045: 49 F7 E9           imul        r9
  0000000000000048: 49 8B C2           mov         rax,r10
  000000000000004B: 4D 8D 04 11        lea         r8,[r9+rdx]
  000000000000004F: 49 C1 F8 18        sar         r8,18h
  0000000000000053: 49 8B C8           mov         rcx,r8
  0000000000000056: 48 C1 E9 3F        shr         rcx,3Fh
  000000000000005A: 4C 03 C1           add         r8,rcx
  000000000000005D: 49 69 C8 00 36 6E  imul        rcx,r8,16E3600h
                    01
  0000000000000064: 4C 2B C9           sub         r9,rcx
  0000000000000067: 49 69 C9 00 CA 9A  imul        rcx,r9,3B9ACA00h
                    3B
  000000000000006E: 48 F7 E9           imul        rcx
  0000000000000071: 48 03 D1           add         rdx,rcx
  0000000000000074: 48 C1 FA 18        sar         rdx,18h
  0000000000000078: 48 8B C2           mov         rax,rdx
  000000000000007B: 48 C1 E8 3F        shr         rax,3Fh
  000000000000007F: 48 03 D0           add         rdx,rax
  0000000000000082: 49 69 C0 00 CA 9A  imul        rax,r8,3B9ACA00h
                    3B
  0000000000000089: 48 03 D0           add         rdx,rax
  000000000000008C: 48 89 13           mov         qword ptr [rbx],rdx
  000000000000008F: EB 21              jmp         00000000000000B2
  0000000000000091: 48 99              cqo
  0000000000000093: 48 F7 FF           idiv        rax,rdi
  0000000000000096: 48 8B C8           mov         rcx,rax
  0000000000000099: 48 69 C2 00 CA 9A  imul        rax,rdx,3B9ACA00h
                    3B
  00000000000000A0: 48 69 C9 00 CA 9A  imul        rcx,rcx,3B9ACA00h
                    3B
  00000000000000A7: 48 99              cqo
  00000000000000A9: 48 F7 FF           idiv        rax,rdi
  00000000000000AC: 48 03 C1           add         rax,rcx
  00000000000000AF: 48 89 03           mov         qword ptr [rbx],rax
  00000000000000B2: 48 8B C3           mov         rax,rbx
  00000000000000B5: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000BA: 48 83 C4 20        add         rsp,20h
  00000000000000BE: 5F                 pop         rdi
  00000000000000BF: C3                 ret

?open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z (public: class std::basic_filebuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::open(char const *,int,int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 41 8B C0           mov         eax,r8d
  000000000000000D: 4C 8B D2           mov         r10,rdx
  0000000000000010: 48 8B D9           mov         rbx,rcx
  0000000000000013: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  000000000000001B: 75 79              jne         0000000000000096
  000000000000001D: 45 8B C1           mov         r8d,r9d
  0000000000000020: 8B D0              mov         edx,eax
  0000000000000022: 49 8B CA           mov         rcx,r10
  0000000000000025: E8 00 00 00 00     call        ?_Fiopen@std@@YAPEAU_iobuf@@PEBDHH@Z
  000000000000002A: 48 85 C0           test        rax,rax
  000000000000002D: 74 67              je          0000000000000096
  000000000000002F: 41 B8 01 00 00 00  mov         r8d,1
  0000000000000035: 48 8B D0           mov         rdx,rax
  0000000000000038: 48 8B CB           mov         rcx,rbx
  000000000000003B: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  0000000000000040: 48 8B 43 60        mov         rax,qword ptr [rbx+60h]
  0000000000000044: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000048: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  000000000000004D: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000050: 48 8B CF           mov         rcx,rdi
  0000000000000053: FF 50 08           call        qword ptr [rax+8]
  0000000000000056: 90                 nop
  0000000000000057: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000005C: E8 00 00 00 00     call        ??$use_facet@V?$codecvt@DDU_Mbstatet@@@std@@@std@@YAAEBV?$codecvt@DDU_Mbstatet@@@0@AEBVlocale@0@@Z
  0000000000000061: 48 8B D0           mov         rdx,rax
  0000000000000064: 48 8B CB           mov         rcx,rbx
  0000000000000067: E8 00 00 00 00     call        ?_Initcvt@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXAEBV?$codecvt@DDU_Mbstatet@@@2@@Z
  000000000000006C: 90                 nop
  000000000000006D: 48 85 FF           test        rdi,rdi
  0000000000000070: 74 1F              je          0000000000000091
  0000000000000072: 48 8B 07           mov         rax,qword ptr [rdi]
  0000000000000075: 48 8B CF           mov         rcx,rdi
  0000000000000078: FF 50 10           call        qword ptr [rax+10h]
  000000000000007B: 48 85 C0           test        rax,rax
  000000000000007E: 74 11              je          0000000000000091
  0000000000000080: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000083: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000086: BA 01 00 00 00     mov         edx,1
  000000000000008B: 48 8B C8           mov         rcx,rax
  000000000000008E: 41 FF D0           call        r8
  0000000000000091: 48 8B C3           mov         rax,rbx
  0000000000000094: EB 02              jmp         0000000000000098
  0000000000000096: 33 C0              xor         eax,eax
  0000000000000098: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  000000000000009D: 48 83 C4 30        add         rsp,30h
  00000000000000A1: 5F                 pop         rdi
  00000000000000A2: C3                 ret

?dtor$0@?0??open@?$basic_filebuf@DU?$char_traits@D@std@@@std@@QEAAPEAV12@PEBDHH@Z@4HA (int `public: class basic_filebuf<char,struct std::char_traits<char> >::open * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::open(char const *,int,int)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?overflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::overflow(int)):
  0000000000000000: 48 89 5C 24 18     mov         qword ptr [rsp+18h],rbx
  0000000000000005: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 8B EC           mov         rbp,rsp
  0000000000000011: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  0000000000000018: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000001F: 48 33 C4           xor         rax,rsp
  0000000000000022: 48 89 45 F8        mov         qword ptr [rbp-8],rax
  0000000000000026: 83 CF FF           or          edi,0FFFFFFFFh
  0000000000000029: 8B F2              mov         esi,edx
  000000000000002B: 48 8B D9           mov         rbx,rcx
  000000000000002E: 3B D7              cmp         edx,edi
  0000000000000030: 75 07              jne         0000000000000039
  0000000000000032: 33 C0              xor         eax,eax
  0000000000000034: E9 1E 01 00 00     jmp         0000000000000157
  0000000000000039: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  000000000000003D: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000041: 74 30              je          0000000000000073
  0000000000000043: 48 8B 51 58        mov         rdx,qword ptr [rcx+58h]
  0000000000000047: 4C 63 02           movsxd      r8,dword ptr [rdx]
  000000000000004A: 49 8B C8           mov         rcx,r8
  000000000000004D: 48 03 08           add         rcx,qword ptr [rax]
  0000000000000050: 48 39 08           cmp         qword ptr [rax],rcx
  0000000000000053: 73 1E              jae         0000000000000073
  0000000000000055: 41 8D 48 FF        lea         ecx,[r8-1]
  0000000000000059: 8B C6              mov         eax,esi
  000000000000005B: 89 0A              mov         dword ptr [rdx],ecx
  000000000000005D: 48 8B 53 40        mov         rdx,qword ptr [rbx+40h]
  0000000000000061: 4C 8B 02           mov         r8,qword ptr [rdx]
  0000000000000064: 49 8D 48 01        lea         rcx,[r8+1]
  0000000000000068: 48 89 0A           mov         qword ptr [rdx],rcx
  000000000000006B: 41 88 30           mov         byte ptr [r8],sil
  000000000000006E: E9 E4 00 00 00     jmp         0000000000000157
  0000000000000073: 48 83 BB 80 00 00  cmp         qword ptr [rbx+80h],0
                    00 00
  000000000000007B: 0F 84 D4 00 00 00  je          0000000000000155
  0000000000000081: 4C 8B 43 18        mov         r8,qword ptr [rbx+18h]
  0000000000000085: 48 8D 43 70        lea         rax,[rbx+70h]
  0000000000000089: 49 39 00           cmp         qword ptr [r8],rax
  000000000000008C: 75 20              jne         00000000000000AE
  000000000000008E: 48 8B 8B 88 00 00  mov         rcx,qword ptr [rbx+88h]
                    00
  0000000000000095: 48 8B 93 90 00 00  mov         rdx,qword ptr [rbx+90h]
                    00
  000000000000009C: 49 89 08           mov         qword ptr [r8],rcx
  000000000000009F: 2B D1              sub         edx,ecx
  00000000000000A1: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  00000000000000A5: 48 89 08           mov         qword ptr [rax],rcx
  00000000000000A8: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  00000000000000AC: 89 10              mov         dword ptr [rax],edx
  00000000000000AE: 48 8B 4B 68        mov         rcx,qword ptr [rbx+68h]
  00000000000000B2: 48 85 C9           test        rcx,rcx
  00000000000000B5: 75 17              jne         00000000000000CE
  00000000000000B7: 40 0F BE CE        movsx       ecx,sil
  00000000000000BB: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  00000000000000C2: E8 00 00 00 00     call        fputc
  00000000000000C7: 3B C7              cmp         eax,edi
  00000000000000C9: E9 84 00 00 00     jmp         0000000000000152
  00000000000000CE: 4C 8D 45 C8        lea         r8,[rbp-38h]
  00000000000000D2: 40 88 75 C0        mov         byte ptr [rbp-40h],sil
  00000000000000D6: 48 8B 01           mov         rax,qword ptr [rcx]
  00000000000000D9: 48 8D 53 74        lea         rdx,[rbx+74h]
  00000000000000DD: 4C 89 44 24 38     mov         qword ptr [rsp+38h],r8
  00000000000000E2: 4C 8D 4D C1        lea         r9,[rbp-3Fh]
  00000000000000E6: 4C 8D 45 F8        lea         r8,[rbp-8]
  00000000000000EA: 4C 89 44 24 30     mov         qword ptr [rsp+30h],r8
  00000000000000EF: 4C 8D 45 D8        lea         r8,[rbp-28h]
  00000000000000F3: 4C 89 44 24 28     mov         qword ptr [rsp+28h],r8
  00000000000000F8: 4C 8D 45 D0        lea         r8,[rbp-30h]
  00000000000000FC: 4C 89 44 24 20     mov         qword ptr [rsp+20h],r8
  0000000000000101: 4C 8D 45 C0        lea         r8,[rbp-40h]
  0000000000000105: FF 50 38           call        qword ptr [rax+38h]
  0000000000000108: 85 C0              test        eax,eax
  000000000000010A: 74 10              je          000000000000011C
  000000000000010C: 83 E8 01           sub         eax,1
  000000000000010F: 74 0B              je          000000000000011C
  0000000000000111: 83 F8 02           cmp         eax,2
  0000000000000114: 75 3F              jne         0000000000000155
  0000000000000116: 0F BE 4D C0        movsx       ecx,byte ptr [rbp-40h]
  000000000000011A: EB 9F              jmp         00000000000000BB
  000000000000011C: 4C 8B 75 C8        mov         r14,qword ptr [rbp-38h]
  0000000000000120: 48 8D 45 D8        lea         rax,[rbp-28h]
  0000000000000124: 4C 2B F0           sub         r14,rax
  0000000000000127: 74 1D              je          0000000000000146
  0000000000000129: 4C 8B 8B 80 00 00  mov         r9,qword ptr [rbx+80h]
                    00
  0000000000000130: 48 8D 4D D8        lea         rcx,[rbp-28h]
  0000000000000134: 4D 8B C6           mov         r8,r14
  0000000000000137: BA 01 00 00 00     mov         edx,1
  000000000000013C: E8 00 00 00 00     call        fwrite
  0000000000000141: 4C 3B F0           cmp         r14,rax
  0000000000000144: 75 0F              jne         0000000000000155
  0000000000000146: 48 8D 45 C0        lea         rax,[rbp-40h]
  000000000000014A: C6 43 71 01        mov         byte ptr [rbx+71h],1
  000000000000014E: 48 39 45 D0        cmp         qword ptr [rbp-30h],rax
  0000000000000152: 0F 45 FE           cmovne      edi,esi
  0000000000000155: 8B C7              mov         eax,edi
  0000000000000157: 48 8B 4D F8        mov         rcx,qword ptr [rbp-8]
  000000000000015B: 48 33 CC           xor         rcx,rsp
  000000000000015E: E8 00 00 00 00     call        __security_check_cookie
  0000000000000163: 4C 8D 9C 24 80 00  lea         r11,[rsp+80h]
                    00 00
  000000000000016B: 49 8B 5B 30        mov         rbx,qword ptr [r11+30h]
  000000000000016F: 49 8B 73 38        mov         rsi,qword ptr [r11+38h]
  0000000000000173: 49 8B E3           mov         rsp,r11
  0000000000000176: 41 5E              pop         r14
  0000000000000178: 5F                 pop         rdi
  0000000000000179: 5D                 pop         rbp
  000000000000017A: C3                 ret

?overflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::overflow(int)):
  0000000000000000: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000003: C3                 ret

?pbackfail@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::pbackfail(int)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 45 33 C0           xor         r8d,r8d
  0000000000000014: 8B FA              mov         edi,edx
  0000000000000016: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000019: 48 85 C9           test        rcx,rcx
  000000000000001C: 74 2E              je          000000000000004C
  000000000000001E: 48 8B 43 18        mov         rax,qword ptr [rbx+18h]
  0000000000000022: 48 39 08           cmp         qword ptr [rax],rcx
  0000000000000025: 73 25              jae         000000000000004C
  0000000000000027: 83 FA FF           cmp         edx,0FFFFFFFFh
  000000000000002A: 74 08              je          0000000000000034
  000000000000002C: 0F B6 41 FF        movzx       eax,byte ptr [rcx-1]
  0000000000000030: 3B C2              cmp         eax,edx
  0000000000000032: 75 18              jne         000000000000004C
  0000000000000034: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  0000000000000038: FF 00              inc         dword ptr [rax]
  000000000000003A: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  000000000000003E: 48 FF 08           dec         qword ptr [rax]
  0000000000000041: 83 FF FF           cmp         edi,0FFFFFFFFh
  0000000000000044: 41 0F 44 F8        cmove       edi,r8d
  0000000000000048: 8B C7              mov         eax,edi
  000000000000004A: EB 75              jmp         00000000000000C1
  000000000000004C: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  0000000000000053: 48 85 D2           test        rdx,rdx
  0000000000000056: 74 66              je          00000000000000BE
  0000000000000058: 83 FF FF           cmp         edi,0FFFFFFFFh
  000000000000005B: 74 61              je          00000000000000BE
  000000000000005D: 4C 39 43 68        cmp         qword ptr [rbx+68h],r8
  0000000000000061: 75 0E              jne         0000000000000071
  0000000000000063: 40 0F B6 CF        movzx       ecx,dil
  0000000000000067: E8 00 00 00 00     call        ungetc
  000000000000006C: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000006F: 75 D7              jne         0000000000000048
  0000000000000071: 4C 8B 4B 38        mov         r9,qword ptr [rbx+38h]
  0000000000000075: 48 8D 53 70        lea         rdx,[rbx+70h]
  0000000000000079: 49 39 11           cmp         qword ptr [r9],rdx
  000000000000007C: 74 40              je          00000000000000BE
  000000000000007E: 4C 8B 53 18        mov         r10,qword ptr [rbx+18h]
  0000000000000082: 4C 8D 43 50        lea         r8,[rbx+50h]
  0000000000000086: 40 88 3A           mov         byte ptr [rdx],dil
  0000000000000089: 49 8B 02           mov         rax,qword ptr [r10]
  000000000000008C: 48 3B C2           cmp         rax,rdx
  000000000000008F: 74 17              je          00000000000000A8
  0000000000000091: 48 89 83 88 00 00  mov         qword ptr [rbx+88h],rax
                    00
  0000000000000098: 49 8B 00           mov         rax,qword ptr [r8]
  000000000000009B: 48 63 08           movsxd      rcx,dword ptr [rax]
  000000000000009E: 49 03 09           add         rcx,qword ptr [r9]
  00000000000000A1: 48 89 8B 90 00 00  mov         qword ptr [rbx+90h],rcx
                    00
  00000000000000A8: 49 89 12           mov         qword ptr [r10],rdx
  00000000000000AB: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  00000000000000AF: 2B DA              sub         ebx,edx
  00000000000000B1: 83 C3 71           add         ebx,71h
  00000000000000B4: 48 89 10           mov         qword ptr [rax],rdx
  00000000000000B7: 49 8B 00           mov         rax,qword ptr [r8]
  00000000000000BA: 89 18              mov         dword ptr [rax],ebx
  00000000000000BC: EB 8A              jmp         0000000000000048
  00000000000000BE: 83 C8 FF           or          eax,0FFFFFFFFh
  00000000000000C1: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  00000000000000C6: 48 83 C4 20        add         rsp,20h
  00000000000000CA: 5F                 pop         rdi
  00000000000000CB: C3                 ret

?pbackfail@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHH@Z (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::pbackfail(int)):
  0000000000000000: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000003: C3                 ret

?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z (public: class std::basic_ostream<char,struct std::char_traits<char> > & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 70        sub         rsp,70h
  000000000000000F: 0F B6 FA           movzx       edi,dl
  0000000000000012: 48 8B D9           mov         rbx,rcx
  0000000000000015: C7 84 24 90 00 00  mov         dword ptr [rsp+90h],0
                    00 00 00 00 00
  0000000000000020: 48 8B D1           mov         rdx,rcx
  0000000000000023: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000028: E8 00 00 00 00     call        ??0sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@AEAV12@@Z
  000000000000002D: 90                 nop
  000000000000002E: 80 7C 24 28 00     cmp         byte ptr [rsp+28h],0
  0000000000000033: 75 0A              jne         000000000000003F
  0000000000000035: BA 04 00 00 00     mov         edx,4
  000000000000003A: 44 8B C2           mov         r8d,edx
  000000000000003D: EB 79              jmp         00000000000000B8
  000000000000003F: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000042: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000046: 48 8B 4C 19 48     mov         rcx,qword ptr [rcx+rbx+48h]
  000000000000004B: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  000000000000004F: 48 83 38 00        cmp         qword ptr [rax],0
  0000000000000053: 74 08              je          000000000000005D
  0000000000000055: 48 8B 41 58        mov         rax,qword ptr [rcx+58h]
  0000000000000059: 8B 10              mov         edx,dword ptr [rax]
  000000000000005B: EB 02              jmp         000000000000005F
  000000000000005D: 33 D2              xor         edx,edx
  000000000000005F: 44 8B CF           mov         r9d,edi
  0000000000000062: 85 D2              test        edx,edx
  0000000000000064: 7E 19              jle         000000000000007F
  0000000000000066: 48 8B 41 58        mov         rax,qword ptr [rcx+58h]
  000000000000006A: FF 08              dec         dword ptr [rax]
  000000000000006C: 48 8B 49 40        mov         rcx,qword ptr [rcx+40h]
  0000000000000070: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000073: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000077: 48 89 01           mov         qword ptr [rcx],rax
  000000000000007A: 40 88 3A           mov         byte ptr [rdx],dil
  000000000000007D: EB 0B              jmp         000000000000008A
  000000000000007F: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000082: 8B D7              mov         edx,edi
  0000000000000084: FF 50 18           call        qword ptr [rax+18h]
  0000000000000087: 44 8B C8           mov         r9d,eax
  000000000000008A: 45 33 C0           xor         r8d,r8d
  000000000000008D: 41 8D 50 04        lea         edx,[r8+4]
  0000000000000091: 41 83 F9 FF        cmp         r9d,0FFFFFFFFh
  0000000000000095: 44 0F 44 C2        cmove       r8d,edx
  0000000000000099: 44 89 84 24 90 00  mov         dword ptr [rsp+90h],r8d
                    00 00
  00000000000000A1: EB 15              jmp         00000000000000B8
$LN11:
  00000000000000A3: BA 04 00 00 00     mov         edx,4
  00000000000000A8: 48 8B 9C 24 80 00  mov         rbx,qword ptr [rsp+80h]
                    00 00
  00000000000000B0: 44 8B 84 24 90 00  mov         r8d,dword ptr [rsp+90h]
                    00 00
  00000000000000B8: 48 8B 03           mov         rax,qword ptr [rbx]
  00000000000000BB: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  00000000000000BF: 48 03 CB           add         rcx,rbx
  00000000000000C2: 44 0B 41 10        or          r8d,dword ptr [rcx+10h]
  00000000000000C6: 48 8B 41 48        mov         rax,qword ptr [rcx+48h]
  00000000000000CA: 48 F7 D8           neg         rax
  00000000000000CD: 45 1B C9           sbb         r9d,r9d
  00000000000000D0: 41 F7 D1           not         r9d
  00000000000000D3: 44 23 CA           and         r9d,edx
  00000000000000D6: 45 0B C8           or          r9d,r8d
  00000000000000D9: 41 83 E1 17        and         r9d,17h
  00000000000000DD: 44 89 49 10        mov         dword ptr [rcx+10h],r9d
  00000000000000E1: 44 23 49 14        and         r9d,dword ptr [rcx+14h]
  00000000000000E5: 75 42              jne         0000000000000129
  00000000000000E7: E8 00 00 00 00     call        ?uncaught_exceptions@std@@YAHXZ
  00000000000000EC: 85 C0              test        eax,eax
  00000000000000EE: 75 0B              jne         00000000000000FB
  00000000000000F0: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000000F5: E8 00 00 00 00     call        ?_Osfx@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAXXZ
  00000000000000FA: 90                 nop
  00000000000000FB: 48 8B 54 24 20     mov         rdx,qword ptr [rsp+20h]
  0000000000000100: 48 8B 02           mov         rax,qword ptr [rdx]
  0000000000000103: 48 63 48 04        movsxd      rcx,dword ptr [rax+4]
  0000000000000107: 48 8B 4C 11 48     mov         rcx,qword ptr [rcx+rdx+48h]
  000000000000010C: 48 85 C9           test        rcx,rcx
  000000000000010F: 74 07              je          0000000000000118
  0000000000000111: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000114: FF 50 10           call        qword ptr [rax+10h]
  0000000000000117: 90                 nop
  0000000000000118: 48 8B C3           mov         rax,rbx
  000000000000011B: 48 8B 9C 24 88 00  mov         rbx,qword ptr [rsp+88h]
                    00 00
  0000000000000123: 48 83 C4 70        add         rsp,70h
  0000000000000127: 5F                 pop         rdi
  0000000000000128: C3                 ret
  0000000000000129: 44 84 CA           test        dl,r9b
  000000000000012C: 74 09              je          0000000000000137
  000000000000012E: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BF@PHHKMMFD@ios_base?3?3badbit?5set@]
                    00
  0000000000000135: EB 16              jmp         000000000000014D
  0000000000000137: 41 F6 C1 02        test        r9b,2
  000000000000013B: 48 8D 1D 00 00 00  lea         rbx,[??_C@_0BG@FMKFHCIL@ios_base?3?3failbit?5set@]
                    00
  0000000000000142: 48 8D 05 00 00 00  lea         rax,[??_C@_0BF@OOHOMBOF@ios_base?3?3eofbit?5set@]
                    00
  0000000000000149: 48 0F 44 D8        cmove       rbx,rax
  000000000000014D: BA 01 00 00 00     mov         edx,1
  0000000000000152: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000157: E8 00 00 00 00     call        ?make_error_code@std@@YA?AVerror_code@1@W4io_errc@1@@Z
  000000000000015C: 4C 8B C0           mov         r8,rax
  000000000000015F: 48 8B D3           mov         rdx,rbx
  0000000000000162: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000167: E8 00 00 00 00     call        ??0failure@ios_base@std@@QEAA@PEBDAEBVerror_code@2@@Z
  000000000000016C: 48 8D 15 00 00 00  lea         rdx,[_TI5?AVfailure@ios_base@std@@]
                    00
  0000000000000173: 48 8D 4C 24 40     lea         rcx,[rsp+40h]
  0000000000000178: E8 00 00 00 00     call        _CxxThrowException
  000000000000017D: CC                 int         3

?dtor$0@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::put & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1sentry@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAA@XZ

?catch$3@?0??put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z@4HA (int `public: class basic_ostream<char,struct std::char_traits<char> >::put & __cdecl std::basic_ostream<char,struct std::char_traits<char> >::put(char)'::`1'::catch$3):
  0000000000000000: 48 89 54 24 10     mov         qword ptr [rsp+10h],rdx
  0000000000000005: 55                 push        rbp
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B EA           mov         rbp,rdx
__catch$?put@?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV12@D@Z$0:
  000000000000000D: 48 8B 8D 80 00 00  mov         rcx,qword ptr [rbp+80h]
                    00
  0000000000000014: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000017: 4C 63 40 04        movsxd      r8,dword ptr [rax+4]
  000000000000001B: 4C 03 C1           add         r8,rcx
  000000000000001E: 41 8B 48 10        mov         ecx,dword ptr [r8+10h]
  0000000000000022: 83 C9 04           or          ecx,4
  0000000000000025: 49 8B 40 48        mov         rax,qword ptr [r8+48h]
  0000000000000029: 48 F7 D8           neg         rax
  000000000000002C: 1B D2              sbb         edx,edx
  000000000000002E: F7 D2              not         edx
  0000000000000030: 83 E2 04           and         edx,4
  0000000000000033: 0B D1              or          edx,ecx
  0000000000000035: 83 E2 17           and         edx,17h
  0000000000000038: 41 89 50 10        mov         dword ptr [r8+10h],edx
  000000000000003C: 41 85 50 14        test        dword ptr [r8+14h],edx
  0000000000000040: 74 0A              je          000000000000004C
  0000000000000042: 33 D2              xor         edx,edx
  0000000000000044: 33 C9              xor         ecx,ecx
  0000000000000046: E8 00 00 00 00     call        _CxxThrowException
  000000000000004B: 90                 nop
  000000000000004C: 48 B8 00 00 00 00  mov         rax,0
                    00 00 00 00
  0000000000000056: 48 83 C4 20        add         rsp,20h
  000000000000005A: 5D                 pop         rbp
  000000000000005B: C3                 ret
  000000000000005C: CC                 int         3

?seekoff@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 6C 24 18     mov         qword ptr [rsp+18h],rbp
  000000000000000A: 56                 push        rsi
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 83 EC 20        sub         rsp,20h
  0000000000000012: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000016: 4C 8D 71 70        lea         r14,[rcx+70h]
  000000000000001A: 41 8B E9           mov         ebp,r9d
  000000000000001D: 49 8B F0           mov         rsi,r8
  0000000000000020: 48 8B DA           mov         rbx,rdx
  0000000000000023: 48 8B F9           mov         rdi,rcx
  0000000000000026: 4C 39 30           cmp         qword ptr [rax],r14
  0000000000000029: 75 10              jne         000000000000003B
  000000000000002B: 41 83 F9 01        cmp         r9d,1
  000000000000002F: 75 0A              jne         000000000000003B
  0000000000000031: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  0000000000000036: 75 03              jne         000000000000003B
  0000000000000038: 48 FF CE           dec         rsi
  000000000000003B: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000043: 74 75              je          00000000000000BA
  0000000000000045: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  000000000000004A: 84 C0              test        al,al
  000000000000004C: 74 6C              je          00000000000000BA
  000000000000004E: 48 85 F6           test        rsi,rsi
  0000000000000051: 75 05              jne         0000000000000058
  0000000000000053: 83 FD 01           cmp         ebp,1
  0000000000000056: 74 16              je          000000000000006E
  0000000000000058: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000005F: 44 8B C5           mov         r8d,ebp
  0000000000000062: 48 8B D6           mov         rdx,rsi
  0000000000000065: E8 00 00 00 00     call        _fseeki64
  000000000000006A: 85 C0              test        eax,eax
  000000000000006C: 75 4C              jne         00000000000000BA
  000000000000006E: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  0000000000000075: 48 8D 54 24 40     lea         rdx,[rsp+40h]
  000000000000007A: E8 00 00 00 00     call        fgetpos
  000000000000007F: 85 C0              test        eax,eax
  0000000000000081: 75 37              jne         00000000000000BA
  0000000000000083: 48 8B 47 18        mov         rax,qword ptr [rdi+18h]
  0000000000000087: 4C 39 30           cmp         qword ptr [rax],r14
  000000000000008A: 75 20              jne         00000000000000AC
  000000000000008C: 48 8B 8F 88 00 00  mov         rcx,qword ptr [rdi+88h]
                    00
  0000000000000093: 48 8B 97 90 00 00  mov         rdx,qword ptr [rdi+90h]
                    00
  000000000000009A: 48 89 08           mov         qword ptr [rax],rcx
  000000000000009D: 2B D1              sub         edx,ecx
  000000000000009F: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  00000000000000A3: 48 89 08           mov         qword ptr [rax],rcx
  00000000000000A6: 48 8B 47 50        mov         rax,qword ptr [rdi+50h]
  00000000000000AA: 89 10              mov         dword ptr [rax],edx
  00000000000000AC: 48 8B 4C 24 40     mov         rcx,qword ptr [rsp+40h]
  00000000000000B1: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  00000000000000B5: 48 89 0B           mov         qword ptr [rbx],rcx
  00000000000000B8: EB 09              jmp         00000000000000C3
  00000000000000BA: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  00000000000000C1: 33 C0              xor         eax,eax
  00000000000000C3: 48 8B 6C 24 50     mov         rbp,qword ptr [rsp+50h]
  00000000000000C8: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  00000000000000D0: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  00000000000000D4: 48 8B C3           mov         rax,rbx
  00000000000000D7: 48 8B 5C 24 48     mov         rbx,qword ptr [rsp+48h]
  00000000000000DC: 48 83 C4 20        add         rsp,20h
  00000000000000E0: 41 5E              pop         r14
  00000000000000E2: 5F                 pop         rdi
  00000000000000E3: 5E                 pop         rsi
  00000000000000E4: C3                 ret

?seekoff@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@_JHH@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::seekoff(__int64,int,int)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 48 C7 02 FF FF FF  mov         qword ptr [rdx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000009: 48 C7 42 08 00 00  mov         qword ptr [rdx+8],0
                    00 00
  0000000000000011: 48 89 42 10        mov         qword ptr [rdx+10h],rax
  0000000000000015: 48 8B C2           mov         rax,rdx
  0000000000000018: C3                 ret

?seekpos@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 49 8B 40 08        mov         rax,qword ptr [r8+8]
  0000000000000013: 49 8B F0           mov         rsi,r8
  0000000000000016: 49 03 00           add         rax,qword ptr [r8]
  0000000000000019: 48 8B DA           mov         rbx,rdx
  000000000000001C: 48 83 B9 80 00 00  cmp         qword ptr [rcx+80h],0
                    00 00
  0000000000000024: 48 8B F9           mov         rdi,rcx
  0000000000000027: 48 89 44 24 30     mov         qword ptr [rsp+30h],rax
  000000000000002C: 74 61              je          000000000000008F
  000000000000002E: E8 00 00 00 00     call        ?_Endwrite@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAA_NXZ
  0000000000000033: 84 C0              test        al,al
  0000000000000035: 74 58              je          000000000000008F
  0000000000000037: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000003E: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  0000000000000043: E8 00 00 00 00     call        fsetpos
  0000000000000048: 85 C0              test        eax,eax
  000000000000004A: 75 43              jne         000000000000008F
  000000000000004C: 48 8B 46 10        mov         rax,qword ptr [rsi+10h]
  0000000000000050: 4C 8B 47 18        mov         r8,qword ptr [rdi+18h]
  0000000000000054: 48 89 47 74        mov         qword ptr [rdi+74h],rax
  0000000000000058: 48 8D 47 70        lea         rax,[rdi+70h]
  000000000000005C: 49 39 00           cmp         qword ptr [r8],rax
  000000000000005F: 75 20              jne         0000000000000081
  0000000000000061: 48 8B 8F 88 00 00  mov         rcx,qword ptr [rdi+88h]
                    00
  0000000000000068: 48 8B 97 90 00 00  mov         rdx,qword ptr [rdi+90h]
                    00
  000000000000006F: 49 89 08           mov         qword ptr [r8],rcx
  0000000000000072: 2B D1              sub         edx,ecx
  0000000000000074: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000078: 48 89 08           mov         qword ptr [rax],rcx
  000000000000007B: 48 8B 47 50        mov         rax,qword ptr [rdi+50h]
  000000000000007F: 89 10              mov         dword ptr [rax],edx
  0000000000000081: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000086: 48 8B 47 74        mov         rax,qword ptr [rdi+74h]
  000000000000008A: 48 89 0B           mov         qword ptr [rbx],rcx
  000000000000008D: EB 09              jmp         0000000000000098
  000000000000008F: 48 C7 03 FF FF FF  mov         qword ptr [rbx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000096: 33 C0              xor         eax,eax
  0000000000000098: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  000000000000009D: 48 C7 43 08 00 00  mov         qword ptr [rbx+8],0
                    00 00
  00000000000000A5: 48 89 43 10        mov         qword ptr [rbx+10h],rax
  00000000000000A9: 48 8B C3           mov         rax,rbx
  00000000000000AC: 48 8B 5C 24 38     mov         rbx,qword ptr [rsp+38h]
  00000000000000B1: 48 83 C4 20        add         rsp,20h
  00000000000000B5: 5F                 pop         rdi
  00000000000000B6: C3                 ret

?seekpos@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA?AV?$fpos@U_Mbstatet@@@2@V32@H@Z (protected: virtual class std::fpos<struct _Mbstatet> __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::seekpos(class std::fpos<struct _Mbstatet>,int)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 48 C7 02 FF FF FF  mov         qword ptr [rdx],0FFFFFFFFFFFFFFFFh
                    FF
  0000000000000009: 48 C7 42 08 00 00  mov         qword ptr [rdx+8],0
                    00 00
  0000000000000011: 48 89 42 10        mov         qword ptr [rdx+10h],rax
  0000000000000015: 48 8B C2           mov         rax,rdx
  0000000000000018: C3                 ret

?setbuf@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAPEAV?$basic_streambuf@DU?$char_traits@D@std@@@2@PEAD_J@Z (protected: virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::setbuf(char *,__int64)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 4D 8B C8           mov         r9,r8
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: 48 85 D2           test        rdx,rdx
  000000000000000F: 75 0B              jne         000000000000001C
  0000000000000011: 4D 85 C0           test        r8,r8
  0000000000000014: 75 06              jne         000000000000001C
  0000000000000016: 45 8D 41 04        lea         r8d,[r9+4]
  000000000000001A: EB 03              jmp         000000000000001F
  000000000000001C: 45 33 C0           xor         r8d,r8d
  000000000000001F: 48 8B 89 80 00 00  mov         rcx,qword ptr [rcx+80h]
                    00
  0000000000000026: 48 85 C9           test        rcx,rcx
  0000000000000029: 74 21              je          000000000000004C
  000000000000002B: E8 00 00 00 00     call        setvbuf
  0000000000000030: 85 C0              test        eax,eax
  0000000000000032: 75 18              jne         000000000000004C
  0000000000000034: 48 8B 93 80 00 00  mov         rdx,qword ptr [rbx+80h]
                    00
  000000000000003B: 44 8D 40 01        lea         r8d,[rax+1]
  000000000000003F: 48 8B CB           mov         rcx,rbx
  0000000000000042: E8 00 00 00 00     call        ?_Init@?$basic_filebuf@DU?$char_traits@D@std@@@std@@IEAAXPEAU_iobuf@@W4_Initfl@12@@Z
  0000000000000047: 48 8B C3           mov         rax,rbx
  000000000000004A: EB 02              jmp         000000000000004E
  000000000000004C: 33 C0              xor         eax,eax
  000000000000004E: 48 83 C4 20        add         rsp,20h
  0000000000000052: 5B                 pop         rbx
  0000000000000053: C3                 ret

?setbuf@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAPEAV12@PEAD_J@Z (protected: virtual class std::basic_streambuf<char,struct std::char_traits<char> > * __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::setbuf(char *,__int64)):
  0000000000000000: 48 8B C1           mov         rax,rcx
  0000000000000003: C3                 ret

?showmanyc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JXZ (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::showmanyc(void)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: C3                 ret

?snextc@?$basic_streambuf@DU?$char_traits@D@std@@@std@@QEAAHXZ (public: int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::snextc(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 74 24 10     mov         qword ptr [rsp+10h],rsi
  000000000000000A: 57                 push        rdi
  000000000000000B: 48 83 EC 20        sub         rsp,20h
  000000000000000F: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000013: 83 CF FF           or          edi,0FFFFFFFFh
  0000000000000016: 48 8B D9           mov         rbx,rcx
  0000000000000019: 48 83 38 00        cmp         qword ptr [rax],0
  000000000000001D: 74 34              je          0000000000000053
  000000000000001F: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  0000000000000023: 83 38 01           cmp         dword ptr [rax],1
  0000000000000026: 7E 11              jle         0000000000000039
  0000000000000028: 01 38              add         dword ptr [rax],edi
  000000000000002A: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000002E: 48 FF 00           inc         qword ptr [rax]
  0000000000000031: 48 8B 00           mov         rax,qword ptr [rax]
  0000000000000034: 0F B6 38           movzx       edi,byte ptr [rax]
  0000000000000037: EB 49              jmp         0000000000000082
  0000000000000039: 83 38 00           cmp         dword ptr [rax],0
  000000000000003C: 7E 15              jle         0000000000000053
  000000000000003E: 01 38              add         dword ptr [rax],edi
  0000000000000040: 48 8B 49 38        mov         rcx,qword ptr [rcx+38h]
  0000000000000044: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000047: 48 8D 42 01        lea         rax,[rdx+1]
  000000000000004B: 48 89 01           mov         qword ptr [rcx],rax
  000000000000004E: 0F B6 02           movzx       eax,byte ptr [rdx]
  0000000000000051: EB 06              jmp         0000000000000059
  0000000000000053: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000056: FF 50 38           call        qword ptr [rax+38h]
  0000000000000059: 3B C7              cmp         eax,edi
  000000000000005B: 74 25              je          0000000000000082
  000000000000005D: 48 8B 43 38        mov         rax,qword ptr [rbx+38h]
  0000000000000061: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000064: 48 85 C9           test        rcx,rcx
  0000000000000067: 74 0E              je          0000000000000077
  0000000000000069: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  000000000000006D: 83 38 00           cmp         dword ptr [rax],0
  0000000000000070: 7E 05              jle         0000000000000077
  0000000000000072: 0F B6 39           movzx       edi,byte ptr [rcx]
  0000000000000075: EB 0B              jmp         0000000000000082
  0000000000000077: 48 8B 03           mov         rax,qword ptr [rbx]
  000000000000007A: 48 8B CB           mov         rcx,rbx
  000000000000007D: FF 50 30           call        qword ptr [rax+30h]
  0000000000000080: 8B F8              mov         edi,eax
  0000000000000082: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000087: 8B C7              mov         eax,edi
  0000000000000089: 48 8B 74 24 38     mov         rsi,qword ptr [rsp+38h]
  000000000000008E: 48 83 C4 20        add         rsp,20h
  0000000000000092: 5F                 pop         rdi
  0000000000000093: C3                 ret

?sum_array@@YA_JPEAHH@Z (__int64 __cdecl sum_array(int *,int)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: 4C 63 CA           movsxd      r9,edx
  0000000000000005: 85 D2              test        edx,edx
  0000000000000007: 7E 12              jle         000000000000001B
  0000000000000009: 44 8B C0           mov         r8d,eax
  000000000000000C: 4A 63 14 81        movsxd      rdx,dword ptr [rcx+r8*4]
  0000000000000010: 49 FF C0           inc         r8
  0000000000000013: 48 03 C2           add         rax,rdx
  0000000000000016: 4D 3B C1           cmp         r8,r9
  0000000000000019: 7C F1              jl          000000000000000C
  000000000000001B: C3                 ret

?sum_array_unrolled@@YA_JPEAHH@Z (__int64 __cdecl sum_array_unrolled(int *,int)):
  0000000000000000: 89 54 24 10        mov         dword ptr [rsp+10h],edx
  0000000000000004: 48 89 4C 24 08     mov         qword ptr [rsp+8],rcx
  0000000000000009: 48 83 EC 18        sub         rsp,18h
  000000000000000D: 48 C7 44 24 08 00  mov         qword ptr [rsp+8],0
                    00 00 00
  0000000000000016: C7 04 24 00 00 00  mov         dword ptr [rsp],0
                    00
  000000000000001D: EB 09              jmp         0000000000000028
  000000000000001F: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000022: 83 C0 04           add         eax,4
  0000000000000025: 89 04 24           mov         dword ptr [rsp],eax
  0000000000000028: 8B 44 24 28        mov         eax,dword ptr [rsp+28h]
  000000000000002C: 39 04 24           cmp         dword ptr [rsp],eax
  000000000000002F: 0F 8D 84 00 00 00  jge         00000000000000B9
  0000000000000035: 48 63 04 24        movsxd      rax,dword ptr [rsp]
  0000000000000039: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000003E: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000042: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000047: 48 03 C8           add         rcx,rax
  000000000000004A: 48 8B C1           mov         rax,rcx
  000000000000004D: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000052: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000055: FF C0              inc         eax
  0000000000000057: 48 98              cdqe
  0000000000000059: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000005E: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000062: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000067: 48 03 C8           add         rcx,rax
  000000000000006A: 48 8B C1           mov         rax,rcx
  000000000000006D: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000072: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000075: 83 C0 02           add         eax,2
  0000000000000078: 48 98              cdqe
  000000000000007A: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  000000000000007F: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  0000000000000083: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  0000000000000088: 48 03 C8           add         rcx,rax
  000000000000008B: 48 8B C1           mov         rax,rcx
  000000000000008E: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  0000000000000093: 8B 04 24           mov         eax,dword ptr [rsp]
  0000000000000096: 83 C0 03           add         eax,3
  0000000000000099: 48 98              cdqe
  000000000000009B: 48 8B 4C 24 20     mov         rcx,qword ptr [rsp+20h]
  00000000000000A0: 48 63 04 81        movsxd      rax,dword ptr [rcx+rax*4]
  00000000000000A4: 48 8B 4C 24 08     mov         rcx,qword ptr [rsp+8]
  00000000000000A9: 48 03 C8           add         rcx,rax
  00000000000000AC: 48 8B C1           mov         rax,rcx
  00000000000000AF: 48 89 44 24 08     mov         qword ptr [rsp+8],rax
  00000000000000B4: E9 66 FF FF FF     jmp         000000000000001F
  00000000000000B9: 48 8B 44 24 08     mov         rax,qword ptr [rsp+8]
  00000000000000BE: 48 83 C4 18        add         rsp,18h
  00000000000000C2: C3                 ret

?sync@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::sync(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 33 DB              xor         ebx,ebx
  000000000000000C: 48 8B F9           mov         rdi,rcx
  000000000000000F: 48 39 99 80 00 00  cmp         qword ptr [rcx+80h],rbx
                    00
  0000000000000016: 74 24              je          000000000000003C
  0000000000000018: 48 8B 01           mov         rax,qword ptr [rcx]
  000000000000001B: 83 CA FF           or          edx,0FFFFFFFFh
  000000000000001E: FF 50 18           call        qword ptr [rax+18h]
  0000000000000021: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000024: 74 16              je          000000000000003C
  0000000000000026: 48 8B 8F 80 00 00  mov         rcx,qword ptr [rdi+80h]
                    00
  000000000000002D: E8 00 00 00 00     call        fflush
  0000000000000032: 85 C0              test        eax,eax
  0000000000000034: 0F 99 C3           setns       bl
  0000000000000037: 8D 43 FF           lea         eax,[rbx-1]
  000000000000003A: EB 02              jmp         000000000000003E
  000000000000003C: 33 C0              xor         eax,eax
  000000000000003E: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000043: 48 83 C4 20        add         rsp,20h
  0000000000000047: 5F                 pop         rdi
  0000000000000048: C3                 ret

?sync@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::sync(void)):
  0000000000000000: 33 C0              xor         eax,eax
  0000000000000002: C3                 ret

?uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)):
  0000000000000000: 48 89 5C 24 10     mov         qword ptr [rsp+10h],rbx
  0000000000000005: 48 89 74 24 18     mov         qword ptr [rsp+18h],rsi
  000000000000000A: 55                 push        rbp
  000000000000000B: 57                 push        rdi
  000000000000000C: 41 56              push        r14
  000000000000000E: 48 8B EC           mov         rbp,rsp
  0000000000000011: 48 81 EC 80 00 00  sub         rsp,80h
                    00
  0000000000000018: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  000000000000001F: 48 33 C4           xor         rax,rsp
  0000000000000022: 48 89 45 F8        mov         qword ptr [rbp-8],rax
  0000000000000026: 48 8B F1           mov         rsi,rcx
  0000000000000029: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000002D: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000030: 48 85 C9           test        rcx,rcx
  0000000000000033: 74 2C              je          0000000000000061
  0000000000000035: 48 8B 56 50        mov         rdx,qword ptr [rsi+50h]
  0000000000000039: 4C 63 0A           movsxd      r9,dword ptr [rdx]
  000000000000003C: 4A 8D 04 09        lea         rax,[rcx+r9]
  0000000000000040: 48 3B C8           cmp         rcx,rax
  0000000000000043: 73 1C              jae         0000000000000061
  0000000000000045: 41 8D 41 FF        lea         eax,[r9-1]
  0000000000000049: 89 02              mov         dword ptr [rdx],eax
  000000000000004B: 48 8B 4E 38        mov         rcx,qword ptr [rsi+38h]
  000000000000004F: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000052: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000056: 48 89 01           mov         qword ptr [rcx],rax
  0000000000000059: 0F B6 02           movzx       eax,byte ptr [rdx]
  000000000000005C: E9 1C 02 00 00     jmp         000000000000027D
  0000000000000061: 48 83 BE 80 00 00  cmp         qword ptr [rsi+80h],0
                    00 00
  0000000000000069: 75 08              jne         0000000000000073
  000000000000006B: 83 C8 FF           or          eax,0FFFFFFFFh
  000000000000006E: E9 0A 02 00 00     jmp         000000000000027D
  0000000000000073: 4C 8B 4E 18        mov         r9,qword ptr [rsi+18h]
  0000000000000077: 48 8D 46 70        lea         rax,[rsi+70h]
  000000000000007B: 49 39 01           cmp         qword ptr [r9],rax
  000000000000007E: 75 20              jne         00000000000000A0
  0000000000000080: 48 8B 96 90 00 00  mov         rdx,qword ptr [rsi+90h]
                    00
  0000000000000087: 48 8B 8E 88 00 00  mov         rcx,qword ptr [rsi+88h]
                    00
  000000000000008E: 49 89 09           mov         qword ptr [r9],rcx
  0000000000000091: 48 8B 46 38        mov         rax,qword ptr [rsi+38h]
  0000000000000095: 48 89 08           mov         qword ptr [rax],rcx
  0000000000000098: 2B D1              sub         edx,ecx
  000000000000009A: 48 8B 46 50        mov         rax,qword ptr [rsi+50h]
  000000000000009E: 89 10              mov         dword ptr [rax],edx
  00000000000000A0: 48 8B 8E 80 00 00  mov         rcx,qword ptr [rsi+80h]
                    00
  00000000000000A7: 48 83 7E 68 00     cmp         qword ptr [rsi+68h],0
  00000000000000AC: 75 18              jne         00000000000000C6
  00000000000000AE: E8 00 00 00 00     call        fgetc
  00000000000000B3: 83 CF FF           or          edi,0FFFFFFFFh
  00000000000000B6: 3B C7              cmp         eax,edi
  00000000000000B8: 0F 84 BD 01 00 00  je          000000000000027B
  00000000000000BE: 0F B6 F8           movzx       edi,al
  00000000000000C1: E9 B5 01 00 00     jmp         000000000000027B
  00000000000000C6: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000C9: 0F 11 45 D8        movups      xmmword ptr [rbp-28h],xmm0
  00000000000000CD: 48 C7 45 E8 00 00  mov         qword ptr [rbp-18h],0
                    00 00
  00000000000000D5: 48 C7 45 F0 0F 00  mov         qword ptr [rbp-10h],0Fh
                    00 00
  00000000000000DD: C6 45 D8 00        mov         byte ptr [rbp-28h],0
  00000000000000E1: E8 00 00 00 00     call        fgetc
  00000000000000E6: 83 CF FF           or          edi,0FFFFFFFFh
  00000000000000E9: E9 F7 00 00 00     jmp         00000000000001E5
  00000000000000EE: 48 8B 4D E8        mov         rcx,qword ptr [rbp-18h]
  00000000000000F2: 48 3B 4D F0        cmp         rcx,qword ptr [rbp-10h]
  00000000000000F6: 73 20              jae         0000000000000118
  00000000000000F8: 48 8D 41 01        lea         rax,[rcx+1]
  00000000000000FC: 48 89 45 E8        mov         qword ptr [rbp-18h],rax
  0000000000000100: 48 8D 45 D8        lea         rax,[rbp-28h]
  0000000000000104: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  0000000000000109: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  000000000000010E: 88 14 08           mov         byte ptr [rax+rcx],dl
  0000000000000111: C6 44 08 01 00     mov         byte ptr [rax+rcx+1],0
  0000000000000116: EB 15              jmp         000000000000012D
  0000000000000118: 44 8A CA           mov         r9b,dl
  000000000000011B: 44 8A 45 C1        mov         r8b,byte ptr [rbp-3Fh]
  000000000000011F: BA 01 00 00 00     mov         edx,1
  0000000000000124: 48 8D 4D D8        lea         rcx,[rbp-28h]
  0000000000000128: E8 00 00 00 00     call        ??$_Reallocate_grow_by@V<lambda_1>@?1??push_back@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAAXD@Z@D@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAAEAV01@_KV<lambda_1>@?1??push_back@01@QEAAXD@Z@D@Z
  000000000000012D: 4C 8B 56 68        mov         r10,qword ptr [rsi+68h]
  0000000000000131: 48 8D 4D D8        lea         rcx,[rbp-28h]
  0000000000000135: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000013A: 48 0F 47 4D D8     cmova       rcx,qword ptr [rbp-28h]
  000000000000013F: 4C 8B 4D E8        mov         r9,qword ptr [rbp-18h]
  0000000000000143: 4C 03 C9           add         r9,rcx
  0000000000000146: 4C 8D 45 D8        lea         r8,[rbp-28h]
  000000000000014A: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000014F: 4C 0F 47 45 D8     cmova       r8,qword ptr [rbp-28h]
  0000000000000154: 49 8B 02           mov         rax,qword ptr [r10]
  0000000000000157: 48 8D 4D D0        lea         rcx,[rbp-30h]
  000000000000015B: 48 89 4C 24 38     mov         qword ptr [rsp+38h],rcx
  0000000000000160: 48 8D 4D C1        lea         rcx,[rbp-3Fh]
  0000000000000164: 48 89 4C 24 30     mov         qword ptr [rsp+30h],rcx
  0000000000000169: 48 8D 4D C0        lea         rcx,[rbp-40h]
  000000000000016D: 48 89 4C 24 28     mov         qword ptr [rsp+28h],rcx
  0000000000000172: 48 8D 4D C8        lea         rcx,[rbp-38h]
  0000000000000176: 48 89 4C 24 20     mov         qword ptr [rsp+20h],rcx
  000000000000017B: 48 8D 56 74        lea         rdx,[rsi+74h]
  000000000000017F: 49 8B CA           mov         rcx,r10
  0000000000000182: FF 50 30           call        qword ptr [rax+30h]
  0000000000000185: 85 C0              test        eax,eax
  0000000000000187: 74 05              je          000000000000018E
  0000000000000189: 83 E8 01           sub         eax,1
  000000000000018C: 75 63              jne         00000000000001F1
  000000000000018E: 48 8D 45 C0        lea         rax,[rbp-40h]
  0000000000000192: 48 8B 5D E8        mov         rbx,qword ptr [rbp-18h]
  0000000000000196: 48 39 45 D0        cmp         qword ptr [rbp-30h],rax
  000000000000019A: 48 8D 45 D8        lea         rax,[rbp-28h]
  000000000000019E: 75 69              jne         0000000000000209
  00000000000001A0: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001A5: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  00000000000001AA: 48 8B 55 C8        mov         rdx,qword ptr [rbp-38h]
  00000000000001AE: 48 2B D0           sub         rdx,rax
  00000000000001B1: 48 3B DA           cmp         rbx,rdx
  00000000000001B4: 48 0F 42 D3        cmovb       rdx,rbx
  00000000000001B8: 48 8D 4D D8        lea         rcx,[rbp-28h]
  00000000000001BC: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001C1: 48 0F 47 4D D8     cmova       rcx,qword ptr [rbp-28h]
  00000000000001C6: 48 2B DA           sub         rbx,rdx
  00000000000001C9: 4C 8D 43 01        lea         r8,[rbx+1]
  00000000000001CD: 48 03 D1           add         rdx,rcx
  00000000000001D0: E8 00 00 00 00     call        memmove
  00000000000001D5: 48 89 5D E8        mov         qword ptr [rbp-18h],rbx
  00000000000001D9: 48 8B 8E 80 00 00  mov         rcx,qword ptr [rsi+80h]
                    00
  00000000000001E0: E8 00 00 00 00     call        fgetc
  00000000000001E5: 3B C7              cmp         eax,edi
  00000000000001E7: 8B D0              mov         edx,eax
  00000000000001E9: 0F 85 FF FE FF FF  jne         00000000000000EE
  00000000000001EF: EB 53              jmp         0000000000000244
  00000000000001F1: 83 F8 02           cmp         eax,2
  00000000000001F4: 75 4E              jne         0000000000000244
  00000000000001F6: 48 8D 45 D8        lea         rax,[rbp-28h]
  00000000000001FA: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  00000000000001FF: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000204: 0F BE 38           movsx       edi,byte ptr [rax]
  0000000000000207: EB 3B              jmp         0000000000000244
  0000000000000209: 48 83 7D F0 0F     cmp         qword ptr [rbp-10h],0Fh
  000000000000020E: 48 0F 47 45 D8     cmova       rax,qword ptr [rbp-28h]
  0000000000000213: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  0000000000000217: 48 2B D9           sub         rbx,rcx
  000000000000021A: 48 03 D8           add         rbx,rax
  000000000000021D: 48 85 DB           test        rbx,rbx
  0000000000000220: 7E 1E              jle         0000000000000240
  0000000000000222: 48 FF CB           dec         rbx
  0000000000000225: 0F BE 0C 0B        movsx       ecx,byte ptr [rbx+rcx]
  0000000000000229: 48 8B 96 80 00 00  mov         rdx,qword ptr [rsi+80h]
                    00
  0000000000000230: E8 00 00 00 00     call        ungetc
  0000000000000235: 48 85 DB           test        rbx,rbx
  0000000000000238: 7E 06              jle         0000000000000240
  000000000000023A: 48 8B 4D C8        mov         rcx,qword ptr [rbp-38h]
  000000000000023E: EB E2              jmp         0000000000000222
  0000000000000240: 0F B6 7D C0        movzx       edi,byte ptr [rbp-40h]
  0000000000000244: 48 8B 55 F0        mov         rdx,qword ptr [rbp-10h]
  0000000000000248: 48 83 FA 0F        cmp         rdx,0Fh
  000000000000024C: 76 2D              jbe         000000000000027B
  000000000000024E: 48 FF C2           inc         rdx
  0000000000000251: 48 8B 4D D8        mov         rcx,qword ptr [rbp-28h]
  0000000000000255: 48 8B C1           mov         rax,rcx
  0000000000000258: 48 81 FA 00 10 00  cmp         rdx,1000h
                    00
  000000000000025F: 72 15              jb          0000000000000276
  0000000000000261: 48 83 C2 27        add         rdx,27h
  0000000000000265: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000269: 48 2B C1           sub         rax,rcx
  000000000000026C: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000270: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000274: 77 2B              ja          00000000000002A1
  0000000000000276: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000027B: 8B C7              mov         eax,edi
  000000000000027D: 48 8B 4D F8        mov         rcx,qword ptr [rbp-8]
  0000000000000281: 48 33 CC           xor         rcx,rsp
  0000000000000284: E8 00 00 00 00     call        __security_check_cookie
  0000000000000289: 4C 8D 9C 24 80 00  lea         r11,[rsp+80h]
                    00 00
  0000000000000291: 49 8B 5B 28        mov         rbx,qword ptr [r11+28h]
  0000000000000295: 49 8B 73 30        mov         rsi,qword ptr [r11+30h]
  0000000000000299: 49 8B E3           mov         rsp,r11
  000000000000029C: 41 5E              pop         r14
  000000000000029E: 5F                 pop         rdi
  000000000000029F: 5D                 pop         rbp
  00000000000002A0: C3                 ret
  00000000000002A1: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000002A6: CC                 int         3

?dtor$0@?0??uflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ@4HA (int `protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::uflow(void)'::`1'::dtor$0):
  0000000000000000: 48 8D 8A 58 00 00  lea         rcx,[rdx+58h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

?uflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::uflow(void)):
  0000000000000000: 40 53              push        rbx
  0000000000000002: 48 83 EC 20        sub         rsp,20h
  0000000000000006: 48 8B 01           mov         rax,qword ptr [rcx]
  0000000000000009: 48 8B D9           mov         rbx,rcx
  000000000000000C: FF 50 30           call        qword ptr [rax+30h]
  000000000000000F: 83 CA FF           or          edx,0FFFFFFFFh
  0000000000000012: 3B C2              cmp         eax,edx
  0000000000000014: 74 17              je          000000000000002D
  0000000000000016: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  000000000000001A: 01 10              add         dword ptr [rax],edx
  000000000000001C: 48 8B 4B 38        mov         rcx,qword ptr [rbx+38h]
  0000000000000020: 48 8B 11           mov         rdx,qword ptr [rcx]
  0000000000000023: 48 8D 42 01        lea         rax,[rdx+1]
  0000000000000027: 48 89 01           mov         qword ptr [rcx],rax
  000000000000002A: 0F B6 12           movzx       edx,byte ptr [rdx]
  000000000000002D: 8B C2              mov         eax,edx
  000000000000002F: 48 83 C4 20        add         rsp,20h
  0000000000000033: 5B                 pop         rbx
  0000000000000034: C3                 ret

?underflow@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::underflow(void)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 20        sub         rsp,20h
  000000000000000A: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  000000000000000E: 48 8B D9           mov         rbx,rcx
  0000000000000011: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000014: 48 85 C9           test        rcx,rcx
  0000000000000017: 74 14              je          000000000000002D
  0000000000000019: 48 8B 43 50        mov         rax,qword ptr [rbx+50h]
  000000000000001D: 48 63 10           movsxd      rdx,dword ptr [rax]
  0000000000000020: 48 03 D1           add         rdx,rcx
  0000000000000023: 48 3B CA           cmp         rcx,rdx
  0000000000000026: 73 05              jae         000000000000002D
  0000000000000028: 0F B6 01           movzx       eax,byte ptr [rcx]
  000000000000002B: EB 1F              jmp         000000000000004C
  000000000000002D: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000030: 48 8B CB           mov         rcx,rbx
  0000000000000033: FF 50 38           call        qword ptr [rax+38h]
  0000000000000036: 8B F8              mov         edi,eax
  0000000000000038: 83 C8 FF           or          eax,0FFFFFFFFh
  000000000000003B: 3B F8              cmp         edi,eax
  000000000000003D: 74 0D              je          000000000000004C
  000000000000003F: 48 8B 03           mov         rax,qword ptr [rbx]
  0000000000000042: 8B D7              mov         edx,edi
  0000000000000044: 48 8B CB           mov         rcx,rbx
  0000000000000047: FF 50 20           call        qword ptr [rax+20h]
  000000000000004A: 8B C7              mov         eax,edi
  000000000000004C: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000051: 48 83 C4 20        add         rsp,20h
  0000000000000055: 5F                 pop         rdi
  0000000000000056: C3                 ret

?underflow@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAAHXZ (protected: virtual int __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::underflow(void)):
  0000000000000000: 83 C8 FF           or          eax,0FFFFFFFFh
  0000000000000003: C3                 ret

?what@exception@std@@UEBAPEBDXZ (public: virtual char const * __cdecl std::exception::what(void)const ):
  0000000000000000: 48 83 79 08 00     cmp         qword ptr [rcx+8],0
  0000000000000005: 48 8D 05 00 00 00  lea         rax,[??_C@_0BC@EOODALEL@Unknown?5exception@]
                    00
  000000000000000C: 48 0F 45 41 08     cmovne      rax,qword ptr [rcx+8]
  0000000000000011: C3                 ret

?widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z (public: char __cdecl std::basic_ios<char,struct std::char_traits<char> >::widen(char)const ):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 57                 push        rdi
  0000000000000006: 48 83 EC 30        sub         rsp,30h
  000000000000000A: 8A DA              mov         bl,dl
  000000000000000C: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000010: 48 8B 78 08        mov         rdi,qword ptr [rax+8]
  0000000000000014: 48 89 7C 24 28     mov         qword ptr [rsp+28h],rdi
  0000000000000019: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000001C: 48 8B CF           mov         rcx,rdi
  000000000000001F: FF 50 08           call        qword ptr [rax+8]
  0000000000000022: 90                 nop
  0000000000000023: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  0000000000000028: E8 00 00 00 00     call        ??$use_facet@V?$ctype@D@std@@@std@@YAAEBV?$ctype@D@0@AEBVlocale@0@@Z
  000000000000002D: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000030: 4C 8B 42 40        mov         r8,qword ptr [rdx+40h]
  0000000000000034: 8A D3              mov         dl,bl
  0000000000000036: 48 8B C8           mov         rcx,rax
  0000000000000039: 41 FF D0           call        r8
  000000000000003C: 8A D8              mov         bl,al
  000000000000003E: 48 85 FF           test        rdi,rdi
  0000000000000041: 74 1F              je          0000000000000062
  0000000000000043: 48 8B 17           mov         rdx,qword ptr [rdi]
  0000000000000046: 48 8B CF           mov         rcx,rdi
  0000000000000049: FF 52 10           call        qword ptr [rdx+10h]
  000000000000004C: 48 85 C0           test        rax,rax
  000000000000004F: 74 11              je          0000000000000062
  0000000000000051: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000054: 4C 8B 01           mov         r8,qword ptr [rcx]
  0000000000000057: BA 01 00 00 00     mov         edx,1
  000000000000005C: 48 8B C8           mov         rcx,rax
  000000000000005F: 41 FF D0           call        r8
  0000000000000062: 8A C3              mov         al,bl
  0000000000000064: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  0000000000000069: 48 83 C4 30        add         rsp,30h
  000000000000006D: 5F                 pop         rdi
  000000000000006E: C3                 ret

?dtor$0@?0??widen@?$basic_ios@DU?$char_traits@D@std@@@std@@QEBADD@Z@4HA (int `public: char __cdecl std::basic_ios<char,struct std::char_traits<char> >::widen(char)const '::`1'::dtor$0):
  0000000000000000: 48 8D 8A 20 00 00  lea         rcx,[rdx+20h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1locale@std@@QEAA@XZ

?xsgetn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsgetn(char *,__int64)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 56              push        r14
  0000000000000015: 48 83 EC 20        sub         rsp,20h
  0000000000000019: 49 8B F8           mov         rdi,r8
  000000000000001C: 4C 8B F2           mov         r14,rdx
  000000000000001F: 48 8B F1           mov         rsi,rcx
  0000000000000022: 4D 85 C0           test        r8,r8
  0000000000000025: 7F 07              jg          000000000000002E
  0000000000000027: 33 C0              xor         eax,eax
  0000000000000029: E9 E6 00 00 00     jmp         0000000000000114
  000000000000002E: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  0000000000000033: 74 0A              je          000000000000003F
  0000000000000035: E8 00 00 00 00     call        ?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z
  000000000000003A: E9 D5 00 00 00     jmp         0000000000000114
  000000000000003F: 48 8B 41 38        mov         rax,qword ptr [rcx+38h]
  0000000000000043: 48 8B EF           mov         rbp,rdi
  0000000000000046: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000049: 48 85 D2           test        rdx,rdx
  000000000000004C: 74 08              je          0000000000000056
  000000000000004E: 48 8B 41 50        mov         rax,qword ptr [rcx+50h]
  0000000000000052: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000054: EB 02              jmp         0000000000000058
  0000000000000056: 33 C9              xor         ecx,ecx
  0000000000000058: 48 63 C1           movsxd      rax,ecx
  000000000000005B: 85 C9              test        ecx,ecx
  000000000000005D: 74 2B              je          000000000000008A
  000000000000005F: 48 3B C7           cmp         rax,rdi
  0000000000000062: 48 8B DF           mov         rbx,rdi
  0000000000000065: 49 8B CE           mov         rcx,r14
  0000000000000068: 48 0F 42 D8        cmovb       rbx,rax
  000000000000006C: 4C 8B C3           mov         r8,rbx
  000000000000006F: E8 00 00 00 00     call        memcpy
  0000000000000074: 48 8B 46 50        mov         rax,qword ptr [rsi+50h]
  0000000000000078: 4C 03 F3           add         r14,rbx
  000000000000007B: 48 2B EB           sub         rbp,rbx
  000000000000007E: 29 18              sub         dword ptr [rax],ebx
  0000000000000080: 48 8B 4E 38        mov         rcx,qword ptr [rsi+38h]
  0000000000000084: 48 63 C3           movsxd      rax,ebx
  0000000000000087: 48 01 01           add         qword ptr [rcx],rax
  000000000000008A: 48 83 BE 80 00 00  cmp         qword ptr [rsi+80h],0
                    00 00
  0000000000000092: 74 7A              je          000000000000010E
  0000000000000094: 4C 8B 46 18        mov         r8,qword ptr [rsi+18h]
  0000000000000098: 48 8D 46 70        lea         rax,[rsi+70h]
  000000000000009C: 49 39 00           cmp         qword ptr [r8],rax
  000000000000009F: 75 20              jne         00000000000000C1
  00000000000000A1: 48 8B 8E 88 00 00  mov         rcx,qword ptr [rsi+88h]
                    00
  00000000000000A8: 48 8B 96 90 00 00  mov         rdx,qword ptr [rsi+90h]
                    00
  00000000000000AF: 49 89 08           mov         qword ptr [r8],rcx
  00000000000000B2: 2B D1              sub         edx,ecx
  00000000000000B4: 48 8B 46 38        mov         rax,qword ptr [rsi+38h]
  00000000000000B8: 48 89 08           mov         qword ptr [rax],rcx
  00000000000000BB: 48 8B 46 50        mov         rax,qword ptr [rsi+50h]
  00000000000000BF: 89 10              mov         dword ptr [rax],edx
  00000000000000C1: BB FF 0F 00 00     mov         ebx,0FFFh
  00000000000000C6: EB 22              jmp         00000000000000EA
  00000000000000C8: 4C 8B 8E 80 00 00  mov         r9,qword ptr [rsi+80h]
                    00
  00000000000000CF: 4C 8B C3           mov         r8,rbx
  00000000000000D2: BA 01 00 00 00     mov         edx,1
  00000000000000D7: 49 8B CE           mov         rcx,r14
  00000000000000DA: E8 00 00 00 00     call        fread
  00000000000000DF: 4C 03 F0           add         r14,rax
  00000000000000E2: 48 2B E8           sub         rbp,rax
  00000000000000E5: 48 3B C3           cmp         rax,rbx
  00000000000000E8: 75 24              jne         000000000000010E
  00000000000000EA: 48 3B EB           cmp         rbp,rbx
  00000000000000ED: 77 D9              ja          00000000000000C8
  00000000000000EF: 48 85 ED           test        rbp,rbp
  00000000000000F2: 74 1A              je          000000000000010E
  00000000000000F4: 4C 8B 8E 80 00 00  mov         r9,qword ptr [rsi+80h]
                    00
  00000000000000FB: 4C 8B C5           mov         r8,rbp
  00000000000000FE: BA 01 00 00 00     mov         edx,1
  0000000000000103: 49 8B CE           mov         rcx,r14
  0000000000000106: E8 00 00 00 00     call        fread
  000000000000010B: 48 2B E8           sub         rbp,rax
  000000000000010E: 48 2B FD           sub         rdi,rbp
  0000000000000111: 48 8B C7           mov         rax,rdi
  0000000000000114: 48 8B 5C 24 30     mov         rbx,qword ptr [rsp+30h]
  0000000000000119: 48 8B 6C 24 38     mov         rbp,qword ptr [rsp+38h]
  000000000000011E: 48 8B 74 24 40     mov         rsi,qword ptr [rsp+40h]
  0000000000000123: 48 8B 7C 24 48     mov         rdi,qword ptr [rsp+48h]
  0000000000000128: 48 83 C4 20        add         rsp,20h
  000000000000012C: 41 5E              pop         r14
  000000000000012E: C3                 ret

?xsgetn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEAD_J@Z (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::xsgetn(char *,__int64)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 54              push        r12
  0000000000000015: 41 56              push        r14
  0000000000000017: 41 57              push        r15
  0000000000000019: 48 83 EC 20        sub         rsp,20h
  000000000000001D: 49 8B D8           mov         rbx,r8
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F9           mov         rdi,rcx
  0000000000000026: 49 8B F0           mov         rsi,r8
  0000000000000029: 4D 85 C0           test        r8,r8
  000000000000002C: 7E 6A              jle         0000000000000098
  000000000000002E: 48 8B 47 38        mov         rax,qword ptr [rdi+38h]
  0000000000000032: 4C 8D 7F 50        lea         r15,[rdi+50h]
  0000000000000036: 48 8B 10           mov         rdx,qword ptr [rax]
  0000000000000039: 48 85 D2           test        rdx,rdx
  000000000000003C: 74 07              je          0000000000000045
  000000000000003E: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000041: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000043: EB 02              jmp         0000000000000047
  0000000000000045: 33 C9              xor         ecx,ecx
  0000000000000047: 48 63 C1           movsxd      rax,ecx
  000000000000004A: 85 C9              test        ecx,ecx
  000000000000004C: 7E 29              jle         0000000000000077
  000000000000004E: 48 3B D8           cmp         rbx,rax
  0000000000000051: 48 8B EB           mov         rbp,rbx
  0000000000000054: 49 8B CE           mov         rcx,r14
  0000000000000057: 48 0F 4D E8        cmovge      rbp,rax
  000000000000005B: 4C 8B C5           mov         r8,rbp
  000000000000005E: E8 00 00 00 00     call        memcpy
  0000000000000063: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000066: 48 2B DD           sub         rbx,rbp
  0000000000000069: 29 28              sub         dword ptr [rax],ebp
  000000000000006B: 48 8B 4F 38        mov         rcx,qword ptr [rdi+38h]
  000000000000006F: 48 63 C5           movsxd      rax,ebp
  0000000000000072: 48 01 01           add         qword ptr [rcx],rax
  0000000000000075: EB 19              jmp         0000000000000090
  0000000000000077: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000007A: 48 8B CF           mov         rcx,rdi
  000000000000007D: FF 50 38           call        qword ptr [rax+38h]
  0000000000000080: 83 F8 FF           cmp         eax,0FFFFFFFFh
  0000000000000083: 74 13              je          0000000000000098
  0000000000000085: 41 88 06           mov         byte ptr [r14],al
  0000000000000088: 48 FF CB           dec         rbx
  000000000000008B: BD 01 00 00 00     mov         ebp,1
  0000000000000090: 4C 03 F5           add         r14,rbp
  0000000000000093: 48 85 DB           test        rbx,rbx
  0000000000000096: 7F 96              jg          000000000000002E
  0000000000000098: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  000000000000009D: 48 2B F3           sub         rsi,rbx
  00000000000000A0: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000A5: 48 8B C6           mov         rax,rsi
  00000000000000A8: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  00000000000000AD: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  00000000000000B2: 48 83 C4 20        add         rsp,20h
  00000000000000B6: 41 5F              pop         r15
  00000000000000B8: 41 5E              pop         r14
  00000000000000BA: 41 5C              pop         r12
  00000000000000BC: C3                 ret

?xsputn@?$basic_filebuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z (protected: virtual __int64 __cdecl std::basic_filebuf<char,struct std::char_traits<char> >::xsputn(char const *,__int64)):
  0000000000000000: 48 89 5C 24 08     mov         qword ptr [rsp+8],rbx
  0000000000000005: 48 89 6C 24 10     mov         qword ptr [rsp+10h],rbp
  000000000000000A: 48 89 74 24 20     mov         qword ptr [rsp+20h],rsi
  000000000000000F: 57                 push        rdi
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 83 EC 20        sub         rsp,20h
  0000000000000018: 48 83 79 68 00     cmp         qword ptr [rcx+68h],0
  000000000000001D: 49 8B D8           mov         rbx,r8
  0000000000000020: 4C 8B FA           mov         r15,rdx
  0000000000000023: 48 8B F9           mov         rdi,rcx
  0000000000000026: 74 07              je          000000000000002F
  0000000000000028: E8 00 00 00 00     call        ?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z
  000000000000002D: EB 77              jmp         00000000000000A6
  000000000000002F: 48 8B 41 40        mov         rax,qword ptr [rcx+40h]
  0000000000000033: 48 8B F3           mov         rsi,rbx
  0000000000000036: 4C 8B 08           mov         r9,qword ptr [rax]
  0000000000000039: 4D 85 C9           test        r9,r9
  000000000000003C: 74 08              je          0000000000000046
  000000000000003E: 48 8B 41 58        mov         rax,qword ptr [rcx+58h]
  0000000000000042: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000044: EB 02              jmp         0000000000000048
  0000000000000046: 33 C9              xor         ecx,ecx
  0000000000000048: 48 63 E9           movsxd      rbp,ecx
  000000000000004B: 48 85 DB           test        rbx,rbx
  000000000000004E: 7E 50              jle         00000000000000A0
  0000000000000050: 85 C9              test        ecx,ecx
  0000000000000052: 7E 2D              jle         0000000000000081
  0000000000000054: 48 3B DD           cmp         rbx,rbp
  0000000000000057: 49 8B C9           mov         rcx,r9
  000000000000005A: 48 0F 4C EB        cmovl       rbp,rbx
  000000000000005E: 4C 8B C5           mov         r8,rbp
  0000000000000061: E8 00 00 00 00     call        memcpy
  0000000000000066: 48 8B 47 58        mov         rax,qword ptr [rdi+58h]
  000000000000006A: 4C 03 FD           add         r15,rbp
  000000000000006D: 48 2B DD           sub         rbx,rbp
  0000000000000070: 29 28              sub         dword ptr [rax],ebp
  0000000000000072: 48 8B 4F 40        mov         rcx,qword ptr [rdi+40h]
  0000000000000076: 48 63 C5           movsxd      rax,ebp
  0000000000000079: 48 01 01           add         qword ptr [rcx],rax
  000000000000007C: 48 85 DB           test        rbx,rbx
  000000000000007F: 7E 1F              jle         00000000000000A0
  0000000000000081: 4C 8B 8F 80 00 00  mov         r9,qword ptr [rdi+80h]
                    00
  0000000000000088: 4D 85 C9           test        r9,r9
  000000000000008B: 74 13              je          00000000000000A0
  000000000000008D: 4C 8B C3           mov         r8,rbx
  0000000000000090: BA 01 00 00 00     mov         edx,1
  0000000000000095: 49 8B CF           mov         rcx,r15
  0000000000000098: E8 00 00 00 00     call        fwrite
  000000000000009D: 48 2B D8           sub         rbx,rax
  00000000000000A0: 48 2B F3           sub         rsi,rbx
  00000000000000A3: 48 8B C6           mov         rax,rsi
  00000000000000A6: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000AB: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  00000000000000B0: 48 8B 74 24 58     mov         rsi,qword ptr [rsp+58h]
  00000000000000B5: 48 83 C4 20        add         rsp,20h
  00000000000000B9: 41 5F              pop         r15
  00000000000000BB: 41 5E              pop         r14
  00000000000000BD: 5F                 pop         rdi
  00000000000000BE: C3                 ret

?xsputn@?$basic_streambuf@DU?$char_traits@D@std@@@std@@MEAA_JPEBD_J@Z (protected: virtual __int64 __cdecl std::basic_streambuf<char,struct std::char_traits<char> >::xsputn(char const *,__int64)):
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 68 10        mov         qword ptr [rax+10h],rbp
  000000000000000B: 48 89 70 18        mov         qword ptr [rax+18h],rsi
  000000000000000F: 48 89 78 20        mov         qword ptr [rax+20h],rdi
  0000000000000013: 41 54              push        r12
  0000000000000015: 41 56              push        r14
  0000000000000017: 41 57              push        r15
  0000000000000019: 48 83 EC 20        sub         rsp,20h
  000000000000001D: 49 8B D8           mov         rbx,r8
  0000000000000020: 4C 8B F2           mov         r14,rdx
  0000000000000023: 48 8B F9           mov         rdi,rcx
  0000000000000026: 49 8B F0           mov         rsi,r8
  0000000000000029: 4D 85 C0           test        r8,r8
  000000000000002C: 7E 6E              jle         000000000000009C
  000000000000002E: 48 8B 47 40        mov         rax,qword ptr [rdi+40h]
  0000000000000032: 4C 8D 7F 58        lea         r15,[rdi+58h]
  0000000000000036: 4C 8B 08           mov         r9,qword ptr [rax]
  0000000000000039: 4D 85 C9           test        r9,r9
  000000000000003C: 74 07              je          0000000000000045
  000000000000003E: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000041: 8B 08              mov         ecx,dword ptr [rax]
  0000000000000043: EB 02              jmp         0000000000000047
  0000000000000045: 33 C9              xor         ecx,ecx
  0000000000000047: 48 63 C1           movsxd      rax,ecx
  000000000000004A: 85 C9              test        ecx,ecx
  000000000000004C: 7E 2C              jle         000000000000007A
  000000000000004E: 48 3B D8           cmp         rbx,rax
  0000000000000051: 48 8B EB           mov         rbp,rbx
  0000000000000054: 49 8B D6           mov         rdx,r14
  0000000000000057: 49 8B C9           mov         rcx,r9
  000000000000005A: 48 0F 4D E8        cmovge      rbp,rax
  000000000000005E: 4C 8B C5           mov         r8,rbp
  0000000000000061: E8 00 00 00 00     call        memcpy
  0000000000000066: 49 8B 07           mov         rax,qword ptr [r15]
  0000000000000069: 48 2B DD           sub         rbx,rbp
  000000000000006C: 29 28              sub         dword ptr [rax],ebp
  000000000000006E: 48 8B 4F 40        mov         rcx,qword ptr [rdi+40h]
  0000000000000072: 48 63 C5           movsxd      rax,ebp
  0000000000000075: 48 01 01           add         qword ptr [rcx],rax
  0000000000000078: EB 1A              jmp         0000000000000094
  000000000000007A: 48 8B 07           mov         rax,qword ptr [rdi]
  000000000000007D: 48 8B CF           mov         rcx,rdi
  0000000000000080: 41 0F B6 16        movzx       edx,byte ptr [r14]
  0000000000000084: FF 50 18           call        qword ptr [rax+18h]
  0000000000000087: 83 F8 FF           cmp         eax,0FFFFFFFFh
  000000000000008A: 74 10              je          000000000000009C
  000000000000008C: 48 FF CB           dec         rbx
  000000000000008F: BD 01 00 00 00     mov         ebp,1
  0000000000000094: 4C 03 F5           add         r14,rbp
  0000000000000097: 48 85 DB           test        rbx,rbx
  000000000000009A: 7F 92              jg          000000000000002E
  000000000000009C: 48 8B 6C 24 48     mov         rbp,qword ptr [rsp+48h]
  00000000000000A1: 48 2B F3           sub         rsi,rbx
  00000000000000A4: 48 8B 5C 24 40     mov         rbx,qword ptr [rsp+40h]
  00000000000000A9: 48 8B C6           mov         rax,rsi
  00000000000000AC: 48 8B 74 24 50     mov         rsi,qword ptr [rsp+50h]
  00000000000000B1: 48 8B 7C 24 58     mov         rdi,qword ptr [rsp+58h]
  00000000000000B6: 48 83 C4 20        add         rsp,20h
  00000000000000BA: 41 5F              pop         r15
  00000000000000BC: 41 5E              pop         r14
  00000000000000BE: 41 5C              pop         r12
  00000000000000C0: C3                 ret

__local_stdio_printf_options:
  0000000000000000: 48 8D 05 00 00 00  lea         rax,[?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA]
                    00
  0000000000000007: C3                 ret

main:
  0000000000000000: 48 8B C4           mov         rax,rsp
  0000000000000003: 48 89 58 08        mov         qword ptr [rax+8],rbx
  0000000000000007: 48 89 78 18        mov         qword ptr [rax+18h],rdi
  000000000000000B: 4C 89 68 20        mov         qword ptr [rax+20h],r13
  000000000000000F: 55                 push        rbp
  0000000000000010: 41 56              push        r14
  0000000000000012: 41 57              push        r15
  0000000000000014: 48 8D A8 38 F0 FF  lea         rbp,[rax-0FC8h]
                    FF
  000000000000001B: B8 B0 10 00 00     mov         eax,10B0h
  0000000000000020: E8 00 00 00 00     call        __chkstk
  0000000000000025: 48 2B E0           sub         rsp,rax
  0000000000000028: 0F 29 B4 24 A0 10  movaps      xmmword ptr [rsp+10A0h],xmm6
                    00 00
  0000000000000030: 48 8B 05 00 00 00  mov         rax,qword ptr [__security_cookie]
                    00
  0000000000000037: 48 33 C4           xor         rax,rsp
  000000000000003A: 48 89 85 90 0F 00  mov         qword ptr [rbp+0F90h],rax
                    00
  0000000000000041: 48 8B FA           mov         rdi,rdx
  0000000000000044: 44 8B D1           mov         r10d,ecx
  0000000000000047: 45 33 C0           xor         r8d,r8d
  000000000000004A: 4C 8D 4D 90        lea         r9,[rbp-70h]
  000000000000004E: B8 CD CC CC CC     mov         eax,0CCCCCCCDh
  0000000000000053: 41 F7 E0           mul         eax,r8d
  0000000000000056: C1 EA 03           shr         edx,3
  0000000000000059: 8D 0C 92           lea         ecx,[rdx+rdx*4]
  000000000000005C: 03 C9              add         ecx,ecx
  000000000000005E: 41 8B C0           mov         eax,r8d
  0000000000000061: 2B C1              sub         eax,ecx
  0000000000000063: 41 89 01           mov         dword ptr [r9],eax
  0000000000000066: 41 FF C0           inc         r8d
  0000000000000069: 4D 8D 49 04        lea         r9,[r9+4]
  000000000000006D: 41 81 F8 00 04 00  cmp         r8d,400h
                    00
  0000000000000074: 7C D8              jl          000000000000004E
  0000000000000076: 41 83 FA 03        cmp         r10d,3
  000000000000007A: 74 3F              je          00000000000000BB
  000000000000007C: 48 8D 15 00 00 00  lea         rdx,[??_C@_07CKBCDPF@Usage?3?5@]
                    00
  0000000000000083: 48 8D 0D 00 00 00  lea         rcx,[?cerr@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000008A: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000008F: 48 8B 17           mov         rdx,qword ptr [rdi]
  0000000000000092: 48 8B C8           mov         rcx,rax
  0000000000000095: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000009A: 48 8B C8           mov         rcx,rax
  000000000000009D: 48 8D 15 00 00 00  lea         rdx,[??_C@_0CL@MJGMBHC@?5?$DMassembly_file_path?$DO?5?$DMoptimiza@]
                    00
  00000000000000A4: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000000A9: 48 8B C8           mov         rcx,rax
  00000000000000AC: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000000B1: B8 01 00 00 00     mov         eax,1
  00000000000000B6: E9 D6 04 00 00     jmp         0000000000000591
  00000000000000BB: 48 8B 57 08        mov         rdx,qword ptr [rdi+8]
  00000000000000BF: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000C2: 0F 11 44 24 50     movups      xmmword ptr [rsp+50h],xmm0
  00000000000000C7: 48 C7 44 24 60 00  mov         qword ptr [rsp+60h],0
                    00 00 00
  00000000000000D0: 48 C7 44 24 68 00  mov         qword ptr [rsp+68h],0
                    00 00 00
  00000000000000D9: 48 83 CB FF        or          rbx,0FFFFFFFFFFFFFFFFh
  00000000000000DD: 4C 8B C3           mov         r8,rbx
  00000000000000E0: 49 FF C0           inc         r8
  00000000000000E3: 42 80 3C 02 00     cmp         byte ptr [rdx+r8],0
  00000000000000E8: 75 F6              jne         00000000000000E0
  00000000000000EA: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000000EF: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  00000000000000F4: 90                 nop
  00000000000000F5: 48 8B 57 10        mov         rdx,qword ptr [rdi+10h]
  00000000000000F9: 0F 57 C0           xorps       xmm0,xmm0
  00000000000000FC: 0F 11 44 24 30     movups      xmmword ptr [rsp+30h],xmm0
  0000000000000101: 48 C7 44 24 40 00  mov         qword ptr [rsp+40h],0
                    00 00 00
  000000000000010A: 48 C7 44 24 48 00  mov         qword ptr [rsp+48h],0
                    00 00 00
  0000000000000113: 48 FF C3           inc         rbx
  0000000000000116: 80 3C 1A 00        cmp         byte ptr [rdx+rbx],0
  000000000000011A: 75 F7              jne         0000000000000113
  000000000000011C: 4C 8B C3           mov         r8,rbx
  000000000000011F: 48 8D 4C 24 30     lea         rcx,[rsp+30h]
  0000000000000124: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  0000000000000129: 90                 nop
  000000000000012A: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000012F: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000134: 33 DB              xor         ebx,ebx
  0000000000000136: 33 C9              xor         ecx,ecx
  0000000000000138: 48 63 44 8D 90     movsxd      rax,dword ptr [rbp+rcx*4-70h]
  000000000000013D: 48 03 D8           add         rbx,rax
  0000000000000140: 48 FF C1           inc         rcx
  0000000000000143: 48 81 F9 00 04 00  cmp         rcx,400h
                    00
  000000000000014A: 7C EC              jl          0000000000000138
  000000000000014C: 48 8D 4C 24 28     lea         rcx,[rsp+28h]
  0000000000000151: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000156: 48 8B 44 24 28     mov         rax,qword ptr [rsp+28h]
  000000000000015B: 48 2B 44 24 20     sub         rax,qword ptr [rsp+20h]
  0000000000000160: 0F 57 F6           xorps       xmm6,xmm6
  0000000000000163: F2 48 0F 2A F0     cvtsi2sd    xmm6,rax
  0000000000000168: F2 0F 5E 35 00 00  divsd       xmm6,mmword ptr [__real@41cdcd6500000000]
                    00 00
  0000000000000170: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_CYAN@Color@@3PEBDEB]
                    00
  0000000000000177: 4C 8D 2D 00 00 00  lea         r13,[?cout@std@@3V?$basic_ostream@DU?$char_traits@D@std@@@1@A]
                    00
  000000000000017E: 49 8B CD           mov         rcx,r13
  0000000000000181: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000186: 48 8B C8           mov         rcx,rax
  0000000000000189: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@OHCKFPAD@Assembly?5Path?3?5?5?5?5?5?5@]
                    00
  0000000000000190: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000195: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  000000000000019A: 41 BF 0F 00 00 00  mov         r15d,0Fh
  00000000000001A0: 4C 39 7C 24 68     cmp         qword ptr [rsp+68h],r15
  00000000000001A5: 48 0F 47 54 24 50  cmova       rdx,qword ptr [rsp+50h]
  00000000000001AB: 4C 8B 44 24 60     mov         r8,qword ptr [rsp+60h]
  00000000000001B0: 48 8B C8           mov         rcx,rax
  00000000000001B3: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000001B8: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000001BF: 48 8B C8           mov         rcx,rax
  00000000000001C2: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000001C7: 48 8B C8           mov         rcx,rax
  00000000000001CA: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000001CF: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_MAGENTA@Color@@3PEBDEB]
                    00
  00000000000001D6: 49 8B CD           mov         rcx,r13
  00000000000001D9: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000001DE: 48 8B C8           mov         rcx,rax
  00000000000001E1: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BFJLFLBB@Optimization?5Level?3?5@]
                    00
  00000000000001E8: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000001ED: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  00000000000001F2: 4C 39 7C 24 48     cmp         qword ptr [rsp+48h],r15
  00000000000001F7: 48 0F 47 54 24 30  cmova       rdx,qword ptr [rsp+30h]
  00000000000001FD: 4C 8B 44 24 40     mov         r8,qword ptr [rsp+40h]
  0000000000000202: 48 8B C8           mov         rcx,rax
  0000000000000205: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  000000000000020A: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000211: 48 8B C8           mov         rcx,rax
  0000000000000214: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000219: 48 8B C8           mov         rcx,rax
  000000000000021C: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  0000000000000221: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  0000000000000228: 49 8B CD           mov         rcx,r13
  000000000000022B: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000230: 48 8B C8           mov         rcx,rax
  0000000000000233: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@LJEJLLGN@Time?5Taken?3?5?5?5?5?5?5?5?5?5@]
                    00
  000000000000023A: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000023F: 0F 28 CE           movaps      xmm1,xmm6
  0000000000000242: 48 8B C8           mov         rcx,rax
  0000000000000245: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
  000000000000024A: 48 8B C8           mov         rcx,rax
  000000000000024D: 48 8D 15 00 00 00  lea         rdx,[??_C@_08GFGBMIFC@?5seconds@]
                    00
  0000000000000254: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000259: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000260: 48 8B C8           mov         rcx,rax
  0000000000000263: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000268: 48 8B C8           mov         rcx,rax
  000000000000026B: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  0000000000000270: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  0000000000000277: 49 8B CD           mov         rcx,r13
  000000000000027A: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000027F: 48 8B C8           mov         rcx,rax
  0000000000000282: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BLKNFMAP@Final?5Result?3?5?5?5?5?5?5?5@]
                    00
  0000000000000289: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  000000000000028E: 48 8B D3           mov         rdx,rbx
  0000000000000291: 48 8B C8           mov         rcx,rax
  0000000000000294: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  0000000000000299: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000002A0: 48 8B C8           mov         rcx,rax
  00000000000002A3: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000002A8: 48 8B C8           mov         rcx,rax
  00000000000002AB: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000002B0: 0F 57 C0           xorps       xmm0,xmm0
  00000000000002B3: 0F 11 44 24 70     movups      xmmword ptr [rsp+70h],xmm0
  00000000000002B8: 45 8D 47 FA        lea         r8d,[r15-6]
  00000000000002BC: 4C 89 45 80        mov         qword ptr [rbp-80h],r8
  00000000000002C0: 4C 89 7D 88        mov         qword ptr [rbp-78h],r15
  00000000000002C4: 48 8D 15 00 00 00  lea         rdx,[??_C@_09BDCIGHFD@sum_array@]
                    00
  00000000000002CB: 48 8D 4C 24 70     lea         rcx,[rsp+70h]
  00000000000002D0: E8 00 00 00 00     call        memcpy
  00000000000002D5: C6 44 24 79 00     mov         byte ptr [rsp+79h],0
  00000000000002DA: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  00000000000002DF: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000002E4: E8 00 00 00 00     call        ?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  00000000000002E9: 90                 nop
  00000000000002EA: 41 BE 00 10 00 00  mov         r14d,1000h
  00000000000002F0: 48 8B 55 88        mov         rdx,qword ptr [rbp-78h]
  00000000000002F4: 49 3B D7           cmp         rdx,r15
  00000000000002F7: 76 2E              jbe         0000000000000327
  00000000000002F9: 48 FF C2           inc         rdx
  00000000000002FC: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  0000000000000301: 48 8B C1           mov         rax,rcx
  0000000000000304: 49 3B D6           cmp         rdx,r14
  0000000000000307: 72 19              jb          0000000000000322
  0000000000000309: 48 83 C2 27        add         rdx,27h
  000000000000030D: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000311: 48 2B C1           sub         rax,rcx
  0000000000000314: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000318: 48 83 F8 1F        cmp         rax,1Fh
  000000000000031C: 0F 87 A6 02 00 00  ja          00000000000005C8
  0000000000000322: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000327: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000032C: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  0000000000000331: 48 8B 18           mov         rbx,qword ptr [rax]
  0000000000000334: BA 00 04 00 00     mov         edx,400h
  0000000000000339: 48 8D 4D 90        lea         rcx,[rbp-70h]
  000000000000033D: E8 00 00 00 00     call        ?sum_array_unrolled@@YA_JPEAHH@Z
  0000000000000342: 48 8B F8           mov         rdi,rax
  0000000000000345: 48 8D 4C 24 20     lea         rcx,[rsp+20h]
  000000000000034A: E8 00 00 00 00     call        ?now@steady_clock@chrono@std@@SA?AV?$time_point@Usteady_clock@chrono@std@@V?$duration@_JU?$ratio@$00$0DLJKMKAA@@std@@@23@@23@XZ
  000000000000034F: 48 8B 08           mov         rcx,qword ptr [rax]
  0000000000000352: 48 2B CB           sub         rcx,rbx
  0000000000000355: 0F 57 F6           xorps       xmm6,xmm6
  0000000000000358: F2 48 0F 2A F1     cvtsi2sd    xmm6,rcx
  000000000000035D: F2 0F 5E 35 00 00  divsd       xmm6,mmword ptr [__real@41cdcd6500000000]
                    00 00
  0000000000000365: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_CYAN@Color@@3PEBDEB]
                    00
  000000000000036C: 49 8B CD           mov         rcx,r13
  000000000000036F: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000374: 48 8B C8           mov         rcx,rax
  0000000000000377: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@OHCKFPAD@Assembly?5Path?3?5?5?5?5?5?5@]
                    00
  000000000000037E: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000383: 48 8D 54 24 50     lea         rdx,[rsp+50h]
  0000000000000388: 4C 39 7C 24 68     cmp         qword ptr [rsp+68h],r15
  000000000000038D: 48 0F 47 54 24 50  cmova       rdx,qword ptr [rsp+50h]
  0000000000000393: 4C 8B 44 24 60     mov         r8,qword ptr [rsp+60h]
  0000000000000398: 48 8B C8           mov         rcx,rax
  000000000000039B: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000003A0: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000003A7: 48 8B C8           mov         rcx,rax
  00000000000003AA: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003AF: 48 8B C8           mov         rcx,rax
  00000000000003B2: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  00000000000003B7: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_MAGENTA@Color@@3PEBDEB]
                    00
  00000000000003BE: 49 8B CD           mov         rcx,r13
  00000000000003C1: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003C6: 48 8B C8           mov         rcx,rax
  00000000000003C9: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BFJLFLBB@Optimization?5Level?3?5@]
                    00
  00000000000003D0: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  00000000000003D5: 48 8D 54 24 30     lea         rdx,[rsp+30h]
  00000000000003DA: 4C 39 7C 24 48     cmp         qword ptr [rsp+48h],r15
  00000000000003DF: 48 0F 47 54 24 30  cmova       rdx,qword ptr [rsp+30h]
  00000000000003E5: 4C 8B 44 24 40     mov         r8,qword ptr [rsp+40h]
  00000000000003EA: 48 8B C8           mov         rcx,rax
  00000000000003ED: E8 00 00 00 00     call        ??$_Insert_string@DU?$char_traits@D@std@@_K@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@QEBD_K@Z
  00000000000003F2: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  00000000000003F9: 48 8B C8           mov         rcx,rax
  00000000000003FC: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000401: 48 8B C8           mov         rcx,rax
  0000000000000404: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  0000000000000409: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  0000000000000410: 49 8B CD           mov         rcx,r13
  0000000000000413: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000418: 48 8B C8           mov         rcx,rax
  000000000000041B: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@LJEJLLGN@Time?5Taken?3?5?5?5?5?5?5?5?5?5@]
                    00
  0000000000000422: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000427: 0F 28 CE           movaps      xmm1,xmm6
  000000000000042A: 48 8B C8           mov         rcx,rax
  000000000000042D: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@N@Z
  0000000000000432: 48 8B C8           mov         rcx,rax
  0000000000000435: 48 8D 15 00 00 00  lea         rdx,[??_C@_08GFGBMIFC@?5seconds@]
                    00
  000000000000043C: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000441: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000448: 48 8B C8           mov         rcx,rax
  000000000000044B: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000450: 48 8B C8           mov         rcx,rax
  0000000000000453: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  0000000000000458: 48 8B 15 00 00 00  mov         rdx,qword ptr [?BOLD_YELLOW@Color@@3PEBDEB]
                    00
  000000000000045F: 49 8B CD           mov         rcx,r13
  0000000000000462: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000467: 48 8B C8           mov         rcx,rax
  000000000000046A: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BF@BLKNFMAP@Final?5Result?3?5?5?5?5?5?5?5@]
                    00
  0000000000000471: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000476: 48 8B D7           mov         rdx,rdi
  0000000000000479: 48 8B C8           mov         rcx,rax
  000000000000047C: E8 00 00 00 00     call        ??6?$basic_ostream@DU?$char_traits@D@std@@@std@@QEAAAEAV01@_J@Z
  0000000000000481: 48 8B 15 00 00 00  mov         rdx,qword ptr [?RESET@Color@@3PEBDEB]
                    00
  0000000000000488: 48 8B C8           mov         rcx,rax
  000000000000048B: E8 00 00 00 00     call        ??$?6U?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@PEBD@Z
  0000000000000490: 48 8B C8           mov         rcx,rax
  0000000000000493: E8 00 00 00 00     call        ??$endl@DU?$char_traits@D@std@@@std@@YAAEAV?$basic_ostream@DU?$char_traits@D@std@@@0@AEAV10@@Z
  0000000000000498: 0F 57 C0           xorps       xmm0,xmm0
  000000000000049B: 0F 11 44 24 70     movups      xmmword ptr [rsp+70h],xmm0
  00000000000004A0: 48 C7 45 80 00 00  mov         qword ptr [rbp-80h],0
                    00 00
  00000000000004A8: 48 C7 45 88 00 00  mov         qword ptr [rbp-78h],0
                    00 00
  00000000000004B0: 41 B8 12 00 00 00  mov         r8d,12h
  00000000000004B6: 48 8D 15 00 00 00  lea         rdx,[??_C@_0BD@DPEBDDBL@sum_array_unrolled@]
                    00
  00000000000004BD: 48 8D 4C 24 70     lea         rcx,[rsp+70h]
  00000000000004C2: E8 00 00 00 00     call        ??$_Construct@$00PEBD@?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@AEAAXQEBD_K@Z
  00000000000004C7: 90                 nop
  00000000000004C8: 48 8D 54 24 70     lea         rdx,[rsp+70h]
  00000000000004CD: 48 8D 4C 24 50     lea         rcx,[rsp+50h]
  00000000000004D2: E8 00 00 00 00     call        ?analyze_disassembly@@YAXAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@0@Z
  00000000000004D7: 90                 nop
  00000000000004D8: 48 8B 55 88        mov         rdx,qword ptr [rbp-78h]
  00000000000004DC: 49 3B D7           cmp         rdx,r15
  00000000000004DF: 76 2F              jbe         0000000000000510
  00000000000004E1: 48 FF C2           inc         rdx
  00000000000004E4: 48 8B 4C 24 70     mov         rcx,qword ptr [rsp+70h]
  00000000000004E9: 48 8B C1           mov         rax,rcx
  00000000000004EC: 49 3B D6           cmp         rdx,r14
  00000000000004EF: 72 19              jb          000000000000050A
  00000000000004F1: 48 83 C2 27        add         rdx,27h
  00000000000004F5: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  00000000000004F9: 48 2B C1           sub         rax,rcx
  00000000000004FC: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000500: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000504: 0F 87 C4 00 00 00  ja          00000000000005CE
  000000000000050A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000050F: 90                 nop
  0000000000000510: 48 8B 54 24 48     mov         rdx,qword ptr [rsp+48h]
  0000000000000515: 49 3B D7           cmp         rdx,r15
  0000000000000518: 76 2E              jbe         0000000000000548
  000000000000051A: 48 FF C2           inc         rdx
  000000000000051D: 48 8B 4C 24 30     mov         rcx,qword ptr [rsp+30h]
  0000000000000522: 48 8B C1           mov         rax,rcx
  0000000000000525: 49 3B D6           cmp         rdx,r14
  0000000000000528: 72 19              jb          0000000000000543
  000000000000052A: 48 83 C2 27        add         rdx,27h
  000000000000052E: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  0000000000000532: 48 2B C1           sub         rax,rcx
  0000000000000535: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000539: 48 83 F8 1F        cmp         rax,1Fh
  000000000000053D: 0F 87 91 00 00 00  ja          00000000000005D4
  0000000000000543: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  0000000000000548: 48 C7 44 24 40 00  mov         qword ptr [rsp+40h],0
                    00 00 00
  0000000000000551: 4C 89 7C 24 48     mov         qword ptr [rsp+48h],r15
  0000000000000556: C6 44 24 30 00     mov         byte ptr [rsp+30h],0
  000000000000055B: 48 8B 54 24 68     mov         rdx,qword ptr [rsp+68h]
  0000000000000560: 49 3B D7           cmp         rdx,r15
  0000000000000563: 76 2A              jbe         000000000000058F
  0000000000000565: 48 FF C2           inc         rdx
  0000000000000568: 48 8B 4C 24 50     mov         rcx,qword ptr [rsp+50h]
  000000000000056D: 48 8B C1           mov         rax,rcx
  0000000000000570: 49 3B D6           cmp         rdx,r14
  0000000000000573: 72 15              jb          000000000000058A
  0000000000000575: 48 83 C2 27        add         rdx,27h
  0000000000000579: 48 8B 49 F8        mov         rcx,qword ptr [rcx-8]
  000000000000057D: 48 2B C1           sub         rax,rcx
  0000000000000580: 48 83 C0 F8        add         rax,0FFFFFFFFFFFFFFF8h
  0000000000000584: 48 83 F8 1F        cmp         rax,1Fh
  0000000000000588: 77 38              ja          00000000000005C2
  000000000000058A: E8 00 00 00 00     call        ??3@YAXPEAX_K@Z
  000000000000058F: 33 C0              xor         eax,eax
  0000000000000591: 48 8B 8D 90 0F 00  mov         rcx,qword ptr [rbp+0F90h]
                    00
  0000000000000598: 48 33 CC           xor         rcx,rsp
  000000000000059B: E8 00 00 00 00     call        __security_check_cookie
  00000000000005A0: 4C 8D 9C 24 B0 10  lea         r11,[rsp+10B0h]
                    00 00
  00000000000005A8: 49 8B 5B 20        mov         rbx,qword ptr [r11+20h]
  00000000000005AC: 49 8B 7B 30        mov         rdi,qword ptr [r11+30h]
  00000000000005B0: 4D 8B 6B 38        mov         r13,qword ptr [r11+38h]
  00000000000005B4: 41 0F 28 73 F0     movaps      xmm6,xmmword ptr [r11-10h]
  00000000000005B9: 49 8B E3           mov         rsp,r11
  00000000000005BC: 41 5F              pop         r15
  00000000000005BE: 41 5E              pop         r14
  00000000000005C0: 5D                 pop         rbp
  00000000000005C1: C3                 ret
  00000000000005C2: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000005C7: 90                 nop
  00000000000005C8: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000005CD: 90                 nop
  00000000000005CE: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000005D3: 90                 nop
  00000000000005D4: E8 00 00 00 00     call        _invalid_parameter_noinfo_noreturn
  00000000000005D9: CC                 int         3

main$dtor$0:
  0000000000000000: 48 8D 8A 50 00 00  lea         rcx,[rdx+50h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$1:
  0000000000000000: 48 8D 8A 30 00 00  lea         rcx,[rdx+30h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$2:
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

main$dtor$3:
  0000000000000000: 48 8D 8A 70 00 00  lea         rcx,[rdx+70h]
                    00
  0000000000000007: E9 00 00 00 00     jmp         ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QEAA@XZ

sprintf_s:
  0000000000000000: 4C 89 44 24 18     mov         qword ptr [rsp+18h],r8
  0000000000000005: 4C 89 4C 24 20     mov         qword ptr [rsp+20h],r9
  000000000000000A: 53                 push        rbx
  000000000000000B: 55                 push        rbp
  000000000000000C: 56                 push        rsi
  000000000000000D: 57                 push        rdi
  000000000000000E: 48 83 EC 38        sub         rsp,38h
  0000000000000012: 49 8B F0           mov         rsi,r8
  0000000000000015: 48 8D 6C 24 78     lea         rbp,[rsp+78h]
  000000000000001A: 48 8B DA           mov         rbx,rdx
  000000000000001D: 48 8B F9           mov         rdi,rcx
  0000000000000020: E8 00 00 00 00     call        __local_stdio_printf_options
  0000000000000025: 48 89 6C 24 28     mov         qword ptr [rsp+28h],rbp
  000000000000002A: 4C 8B CE           mov         r9,rsi
  000000000000002D: 4C 8B C3           mov         r8,rbx
  0000000000000030: 48 C7 44 24 20 00  mov         qword ptr [rsp+20h],0
                    00 00 00
  0000000000000039: 48 8B D7           mov         rdx,rdi
  000000000000003C: 48 8B 08           mov         rcx,qword ptr [rax]
  000000000000003F: E8 00 00 00 00     call        __stdio_common_vsprintf_s
  0000000000000044: 83 C9 FF           or          ecx,0FFFFFFFFh
  0000000000000047: 85 C0              test        eax,eax
  0000000000000049: 0F 48 C1           cmovs       eax,ecx
  000000000000004C: 48 83 C4 38        add         rsp,38h
  0000000000000050: 5F                 pop         rdi
  0000000000000051: 5E                 pop         rsi
  0000000000000052: 5D                 pop         rbp
  0000000000000053: 5B                 pop         rbx
  0000000000000054: C3                 ret

  Summary

          48 .bss
        1FF0 .chks64
          38 .data
         13C .data$r
         388 .data$rs
          A0 .debug$S
         202 .drectve
         7C8 .pdata
         697 .rdata
         C58 .rdata$r
        70E8 .text$mn
         711 .text$x
           C .voltbl
        10D0 .xdata
         1D0 .xdata$x
